{
	"air_resistance": 20,
	"auto_move_camera": [0,0],
	"character": [
		{
			"_addr": "0x44cd410",
			"current_frame": "normal",
			"custom": true,
			"face_right": 1,
			"label": "Module Details",
			"on_display": "set_text(level.player.vars.client.module_info[module].description)",
			"text": {
				"align": -1,
				"font": "white_outline",
				"size": 2,
				"text": " "
			},
			"time_in_frame": 0,
			"type": "text_controller",
			"property_data": {
				"align": "left",
				"size": 2,
				"txt": " "
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 32,
			"y": 96
		},
		{
			"_addr": "0x38a1670",
			"current_frame": "normal",
			"custom": true,
			"face_right": 1,
			"is_human": 1,
			"label": "_319e5793",
			"on_client_error": "debug('An error has occured. (${client.error}) You may need to reload this screen.')",
			"on_client_loaded": "[
				fire_event(listobj, 'update'),
				get_object(level, 'Status').set_text('Status: Ready'),
				] where listobj = get_object(level, 'list')",
			"on_create": "set(vars.client, module_client())",
			"on_process": "[
				//Update the client and monitor it for changes.
				[	//if(sum(values(clientDelta)), pp(client.module_info)),
					if(client.kbytes_total and (not client.is_complete) or clientDelta.is_complete, 
						set(get_object(level, 'progress').widgets.a.progress,
							(clientDelta.is_complete or decimal(client.kbytes_transferred)/decimal(client.kbytes_total))*100)),
					if(clientDelta.is_complete, fire_event('client_loaded')),
					if(clientDelta.error, fire_event('client_error')),
				] where clientDelta = {
					'is_complete': client.is_complete - oldClient.is_complete,
					'module_info': client.module_info != oldClient.module_info,
					'error': client.error != oldClient.error,
					'kbytes_transferred': client.kbytes_transferred - oldClient.kbytes_transferred,
					'kbytes_total': client.kbytes_total - oldClient.kbytes_total,},
					
				set(oldClient, {
					'is_complete': client.is_complete,
					'module_info': client.module_info,
					'error': client.error,
					'kbytes_transferred': client.kbytes_transferred,
					'kbytes_total': client.kbytes_total,}),
					
				module_pump(client),
			]",
			"time_in_frame": 0,
			"type": "invisible_observer",
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 352,
			"y": 288
		},
		{
			"_addr": "0x44e8630",
			"current_frame": "normal",
			"custom": true,
			"face_right": 1,
			"label": "_2ba389",
			"text": {
				"align": -1,
				"font": "white_outline",
				"size": 2,
				"text": "Install and Remove Modules"
			},
			"time_in_frame": 0,
			"type": "text_controller",
			"property_data": {
				"align": "left",
				"size": 2,
				"txt": "Install and Remove Modules"
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 32,
			"y": 0
		},
		{
			"_addr": "0x44e8f40",
			"current_frame": "normal",
			"custom": true,
			"face_right": 0,
			"label": "name, version, lang (hidden), size, tags (other side), genre, etc.",
			"time_in_frame": 0,
			"type": "target",
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 448,
			"y": 0
		},
		{
			"_addr": "0x44e9850",
			"current_frame": "normal",
			"custom": true,
			"face_right": 1,
			"label": "Languages",
			"on_display": "set_text('Languages: ${level.player.vars.client.module_info[module].languages}')",
			"text": {
				"align": -1,
				"font": "white_outline",
				"size": 2,
				"text": "Languages:"
			},
			"time_in_frame": 0,
			"type": "text_controller",
			"vars": {
				"align": "left",
				"size": 2,
				"txt": "Languages:"
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 32,
			"y": 416
		},
		{
			"_addr": "0x44f1d20",
			"current_frame": "normal",
			"custom": true,
			"face_right": 1,
			"label": "Tags",
			"on_display": "set_text('Tags: ${level.player.vars.client.module_info[module].tags}')",
			"text": {
				"align": -1,
				"font": "white_outline",
				"size": 2,
				"text": "Tags:"
			},
			"time_in_frame": 0,
			"type": "text_controller",
			"property_data": {
				"align": "left",
				"size": 2,
				"txt": "Tags:"
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 32,
			"y": 448
		},
		{
			"_addr": "0x44f4130",
			"current_frame": "normal",
			"custom": true,
			"face_right": 1,
			"label": "Module Name",
			"on_display": "set_text(level.player.vars.client.module_info[module].name)",
			"text": {
				"align": -1,
				"font": "white_outline",
				"size": 2,
				"text": "No module selected."
			},
			"time_in_frame": 0,
			"type": "text_controller",
			"property_data": {
				"align": "left",
				"size": 2,
				"txt": "No module selected."
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 32,
			"y": 64
		},
		{
			"_addr": "0x44f7110",
			"current_frame": "normal",
			"custom": true,
			"face_right": 1,
			"label": "Upgrades",
			"time_in_frame": 0,
			"type": "button_controller",
			"vars": {
				"Widget": {
					"id": "a",
					"label": {
						"font": "default",
						"size": 1,
						"text": "lbl",
						"type": "graphical_font_label"
					},
					"on_click": "fire_event('click', {mouse_button: 0, mouse_x: 0, mouse_y: 0, world_point: [0,0,0]})",
					"padding": [12,6],
					"type": "button"
				},
				"button": {
					"label": {
						"font": "default",
						"size": 1,
						"text": "Select Upgrades",
						"type": "graphical_font_label"
					},
					"on_click": "fire_event('click', {mouse_button: 0, mouse_x: 0, mouse_y: 0, world_point: [0,0,0]})",
					"padding": [12,6],
					"type": "button"
				},
				"txt": "Select Upgrades",
				"x_pad": 12,
				"y_pad": 6
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 640,
			"y": 512
		},
		{
			"_addr": "0x44f7a20",
			"current_frame": "normal",
			"custom": true,
			"face_right": 1,
			"label": "None",
			"on_click": "get_object(level, 'list').vars.check_none()",
			"time_in_frame": 0,
			"type": "button_controller",
			"vars": {
				"Widget": {
					"id": "a",
					"label": {
						"font": "default",
						"size": 1,
						"text": "lbl",
						"type": "graphical_font_label"
					},
					"on_click": "fire_event('click', {mouse_button: 0, mouse_x: 0, mouse_y: 0, world_point: [0,0,0]})",
					"padding": [12,6],
					"type": "button"
				},
				"button": {
					"label": {
						"font": "default",
						"size": 1,
						"text": "Select None",
						"type": "graphical_font_label"
					},
					"on_click": "fire_event('click', {mouse_button: 0, mouse_x: 0, mouse_y: 0, world_point: [0,0,0]})",
					"padding": [27,6],
					"type": "button"
				},
				"txt": "Select None",
				"x_pad": 27,
				"y_pad": 6
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 640,
			"y": 544
		},
		{
			"_addr": "0x44fa3f0",
			"current_frame": "normal",
			"custom": true,
			"face_right": 1,
			"label": "Apply",
			"on_click": "[
				map(get_object(level, 'list').vars.modules_to_remove(),
					module_uninstall(value) ),
				map(get_object(level, 'list').vars.modules_to_install(),
					module_install(level.player.vars.client, value) ),
				get_object(level, 'list').vars.check_none(),
				get_object(level, 'Status').set_text('Status: Working...'),
				]",
			"time_in_frame": 0,
			"type": "button_controller",
			"vars": {
				"Widget": {
					"id": "a",
					"label": {
						"font": "default",
						"size": 1,
						"text": "Apply Changes",
						"type": "graphical_font_label"
					},
					"on_click": "fire_event('click', {mouse_button: 0, mouse_x: 0, mouse_y: 0, world_point: [0,0,0]})",
					"padding": [44,6],
					"type": "button"
				},
				"button": {
					"label": {
						"font": "default",
						"size": 1,
						"text": "Apply Changes",
						"type": "graphical_font_label"
					},
					"on_click": "fire_event('click', {mouse_button: 0, mouse_x: 0, mouse_y: 0, world_point: [0,0,0]})",
					"padding": [44,6],
					"type": "button"
				},
				"txt": "Apply Changes",
				"x_pad": 44,
				"y_pad": 6
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 448,
			"y": 544
		},
		{
			"_addr": "0x44fcfe0",
			"current_frame": "normal",
			"custom": true,
			"face_right": 1,
			"label": "Copy",
			"on_click": "debug('copy website')",
			"time_in_frame": 0,
			"type": "button_controller",
			"vars": {
				"Widget": {
					"id": "a",
					"label": {
						"font": "default",
						"size": 1,
						"text": "lbl",
						"type": "graphical_font_label"
					},
					"on_click": "fire_event('click', {mouse_button: 0, mouse_x: 0, mouse_y: 0, world_point: [0,0,0]})",
					"padding": [12,6],
					"type": "button"
				},
				"button": {
					"label": {
						"font": "default",
						"size": 1,
						"text": "Copy Website",
						"type": "graphical_font_label"
					},
					"on_click": "fire_event('click', {mouse_button: 0, mouse_x: 0, mouse_y: 0, world_point: [0,0,0]})",
					"padding": [17,6],
					"type": "button"
				},
				"txt": "Copy Website",
				"x_pad": 17,
				"y_pad": 6
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 32,
			"y": 544
		},
		{
			"_addr": "0x45017c0",
			"current_frame": "normal",
			"custom": true,
			"face_right": 1,
			"label": "Rate",
			"on_triggered": "debug('rate triggered')",
			"time_in_frame": 0,
			"type": "button_controller",
			"vars": {
				"Widget": {
					"id": "a",
					"label": {
						"font": "default",
						"size": 1,
						"text": "lbl",
						"type": "graphical_font_label"
					},
					"on_click": "fire_event('click', {mouse_button: 0, mouse_x: 0, mouse_y: 0, world_point: [0,0,0]})",
					"padding": [12,6],
					"type": "button"
				},
				"button": {
					"label": {
						"font": "default",
						"size": 1,
						"text": "Rate",
						"type": "graphical_font_label"
					},
					"on_click": "fire_event('click', {mouse_button: 0, mouse_x: 0, mouse_y: 0, world_point: [0,0,0]})",
					"padding": [15,6],
					"type": "button"
				},
				"txt": "Rate",
				"x_pad": 15,
				"y_pad": 6
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 160,
			"y": 544
		},
		{
			"_addr": "0x4503a60",
			"current_frame": "normal",
			"custom": true,
			"face_right": 1,
			"label": "filter",
			"on_change": "fire_event(get_object(level, 'list'), 'update')",
			"on_create": "[
				set(filter_module_info, def(info) 
					map(
						sort(
							filter(
								map(keys(info or {}), 'key',
									[key] + map([ info[key].name,
									              key, 
									              list_cat_delim(info[key].version, '.'), 
									              info[key].description ],
										if(self.widgets.a.text != self.vars.default_text,
											strstr(value, self.widgets.a.text),	//We might want to weight search results by order in above list here. Probably want to change the sort to prefer higher values, and penalize by str position first found at. Make sure to redo the check that eliminates stuff entirely, the sum(). This was not done sooner because we only have one module at the moment, so there is no need for it.
											1) ) ),                            	//Avoid filtering ranking when we're displaying the 'search here' text, just rate everything as 1 so as not to be marked as irrelevant. :P
								sum(value[1:size(value)]) ),
							a[1:size(a)] < b[1:size(b)] ),
						info[value[0]] + {key:value[0]} )
					),
			]	where _list_cat = def(list, sum, delim) if(size(list) > 0, _list_cat(list[1:size(list)], if(sum = '', str(list[0]), sum + str(list[0])) + if(size(list) > 1, delim, ''), delim), sum),
				where list_cat = def(list) _list_cat(list, '', ''),
				where list_cat_delim = def(list, delim) (list, '', delim)
			",
			"time_in_frame": 0,
			"type": "text_editor_controller",
			"vars": {
				"Widget": {
					"color": "white",
					"id": "a",
					"on_begin_enter": "fire_event('begin_enter')",
					"on_change": "if(not self.vars.is_grey_msg and (not self.tmp.focus), fire_event('change'))",
					"on_change_focus": "fire_event('change_focus')",
					"on_enter": "fire_event('enter')",
					"on_escape": "fire_event('escape')",
					"on_move_cursor": "fire_event('move_cursor')",
					"on_tab": "fire_event('tab')",
					"text": "filter list",
					"type": "text_editor",
					"width": 187
				},
				"default_text": "filter list",
				"filter_module_info": "function",
				"is_grey_msg": 1,
				"width": 187
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 448,
			"y": 516
		},
		{
			"_addr": "0x450acb0",
			"current_frame": "normal",
			"custom": true,
			"face_right": 1,
			"label": "progress",
			"time_in_frame": 0,
			"type": "progress_bar_controller",
			"vars": {
				"Widget": {
					"colour": "grey",
					"frame_set": "default_button",
					"id": "a",
					"max": 100,
					"min": 0,
					"padding": [12,6],
					"rect": [0,0,327,23],
					"type": "progress"
				},
				"height": 23,
				"width": 327
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 448,
			"y": 576
		},
		{
			"_addr": "0x45077d0",
			"current_frame": "normal",
			"custom": true,
			"face_right": 1,
			"label": "list",
			"on_checkbox_toggle": "[
				if(module_id in toggled_module_ids,
					set(toggled_module_ids, filter(toggled_module_ids, value != module_id)),
					set(toggled_module_ids, toggled_module_ids + [module_id]) ),
				fire_event('update_install_count'),
			]",
			"on_create": "[
				set(widgets_from_sorted_module_info,
					def(info) get_object(level, 'filter').vars.filter_module_info(info) ),
				set(installed_module_ids,
					def() level.player.vars.client.downloaded_modules ), //Should be no args/brackets, but wouldn't parse otherwise.
				set(should_be_checked,
					def(mod_id) (mod_id in installed_module_ids()) != (mod_id in toggled_module_ids) ), //Brackets essential.
				set(check_none,
					def() execute(self, [
						set(toggled_module_ids, []),
						fire_event('update')
						]) ),
				set(modules_to_install, 
					def() filter(self.vars.toggled_module_ids, not value in self.installed_module_ids()) ),
				set(modules_to_remove, 
					def() filter(self.vars.toggled_module_ids, value in self.installed_module_ids()) ),
			]",
			"on_select": "[
				fire_event(get_object(level, 'Module Name'),    'display', {module:row_id}),
				fire_event(get_object(level, 'Module Details'), 'display', {module:row_id}),
				fire_event(get_object(level, 'Languages'),      'display', {module:row_id}),
				fire_event(get_object(level, 'Tags'),           'display', {module:row_id}),
			] where row_id = list_row_to_module_id[row-1]",
			"on_select_header": "[
				//debug('header select ' + 1),
			]",
			"on_update": "[
				[	set(self.vars.Widget.children, self.vars.module_list_header
						+ map(widgets, [
							{'font': 'default', 'size': 1, 'text': value.name,							'type': 'graphical_font_label'},
							{'font': 'default', 'size': 1, 'text': list_cat_delim(value.version, '.'),	'type': 'graphical_font_label'},
							{'font': 'default', 'size': 1, 'text': '-',									'type': 'graphical_font_label'},
							{'font': 'default', 'size': 1, 'text': 'install', 							'type': 'checkbox', 'on_click': q[fire_event('checkbox_toggle', {module_id:'${value.key}'})],  'checked':should_be_checked(value.key)},
						]) ),
					set(list_row_to_module_id,
						map(widgets, value.key) ),
				] where widgets = widgets_from_sorted_module_info(level.player.vars.client.module_info),
				fire_event('refresh_widgets'),
				fire_event('update_install_count'),
			]",
			"on_update_install_count": "get_object(level, 'Delta').set_text('${size(modules_to_install())} to install - ${size(modules_to_remove())} to remove')",
			"time_in_frame": 0,
			"type": "grid_controller",
			"vars": {
				"Widget": {
					"allow_selection": true,
					"children": [
						[
							{
								"font": "default",
								"size": 1,
								"text": "Name",
								"type": "graphical_font_label"
							},
							{
								"font": "default",
								"size": 1,
								"text": "Version",
								"type": "graphical_font_label"
							},
							{
								"font": "default",
								"size": 1,
								"text": "Rating",
								"type": "graphical_font_label"
							},
							{
								"font": "default",
								"size": 1,
								"text": "Installed",
								"type": "graphical_font_label"
							}
						]
					],
					"columns": 4,
					"header_rows": 0,
					"id": "a",
					"must_select": true,
					"on_select": "
						if(	self.widgets.a.selected_row != -1,
							if(self.widgets.a.selected_row != self.vars.Widget.header_rows
								and (not self.widgets.a.selected_row in self.vars.Widget.header_rows), 
							fire_event('select'),
							fire_event('select_header')),
						fire_event('deselect'))",
					"show_background": true,
					"type": "grid"
				},
				"check_none": "@eval delay_until_end_of_loading(q(bind_closure(def() execute(self, [
						set(toggled_module_ids, []),
						fire_event('update')
						]),deserialize('0x45077d0'))))",
				"columns": 4,
				"fake_width": 300,
				"installed_module_ids": "@eval delay_until_end_of_loading(q(bind_closure(def() level.player.vars.client.downloaded_modules,deserialize('0x45077d0'))))",
				"list_row_to_module_id": [],
				"max_height": 320,
				"module_list_header": [
					[
						{
							"font": "default",
							"size": 1,
							"text": "Name",
							"type": "graphical_font_label"
						},
						{
							"font": "default",
							"size": 1,
							"text": "Version",
							"type": "graphical_font_label"
						},
						{
							"font": "default",
							"size": 1,
							"text": "Rating",
							"type": "graphical_font_label"
						},
						{
							"font": "default",
							"size": 1,
							"text": "Installed",
							"type": "graphical_font_label"
						}
					]
				],
				"modules_to_install": "@eval delay_until_end_of_loading(q(bind_closure(def() filter(self.vars.toggled_module_ids, not value in self.installed_module_ids()),deserialize('0x45077d0'))))",
				"modules_to_remove": "@eval delay_until_end_of_loading(q(bind_closure(def() filter(self.vars.toggled_module_ids, value in self.installed_module_ids()),deserialize('0x45077d0'))))",
				"row_selection": 1,
				"should_be_checked": "@eval delay_until_end_of_loading(q(bind_closure(def(mod_id) (mod_id in installed_module_ids()) != (mod_id in toggled_module_ids),deserialize('0x45077d0'))))",
				"show_rect": 0,
				"toggled_module_ids": [],
				"widgets_from_sorted_module_info": "@eval delay_until_end_of_loading(q(bind_closure(def(info) get_object(level, 'filter').vars.filter_module_info(info),deserialize('0x45077d0'))))"
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 448,
			"y": 160
		},
		{
			"_addr": "0x459e310",
			"current_frame": "normal",
			"custom": true,
			"face_right": 1,
			"label": "Status",
			"text": {
				"align": -1,
				"font": "white_outline",
				"size": 2,
				"text": "Status: Connecting to server..."
			},
			"time_in_frame": 0,
			"type": "text_controller",
			"property_data": {
				"align": "left",
				"size": 2,
				"txt": "Status: Connecting to server..."
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 448,
			"y": 64
		},
		{
			"_addr": "0x459ec20",
			"current_frame": "normal",
			"custom": true,
			"face_right": 1,
			"label": "Delta",
			"text": {
				"align": -1,
				"font": "white_outline",
				"size": 2,
				"text": "One moment please."
			},
			"time_in_frame": 0,
			"type": "text_controller",
			"property_data": {
				"align": "left",
				"size": 2,
				"txt": "One moment please."
			},
			"velocity_x": 0,
			"velocity_y": 0,
			"x": 448,
			"y": 96
		}
	],
	"dimensions": [0,0,799,607],
	"gui": "null",
	"id": "module-manager.cfg",
	"music": "",
	"preloads": "",
	"segment_height": 0,
	"segment_width": 0,
	"serialized_objects": {
		"character": []
	},
	"title": "",
	"touch_controls": 1,
	"version": "1.2",
	"water_resistance": 100,
	"xscale": 100,
	"yscale": 100
}
{
	"air_resistance": 20,
	"auto_move_camera": [0,0],
	"background": "seaside",
	"background_offset": [0,0],
	"camera": {
		"position": [0.0,0.0,10.0]
	},
	"character": [
		{
			"_addr": "0x645bc00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_54913573",
			"type": "wall_clock",
			"x": 448,
			"y": -32
		},
		{
			"_addr": "0x645c200",
			"current_frame": "normal",
			"custom": 1,
			"label": "_94c3c65",
			"type": "painting_leaf",
			"x": 992,
			"y": 448
		},
		{
			"_addr": "0x645c800",
			"current_frame": "normal",
			"custom": 1,
			"label": "_541ad45e",
			"type": "potbelly_stove",
			"x": 1472,
			"y": 544
		},
		{
			"_addr": "0x6363600",
			"current_frame": "normal",
			"custom": 1,
			"label": "_3303569f",
			"type": "ceiling_lamp",
			"x": 1408,
			"y": 288
		},
		{
			"_addr": "0x6363c00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_27645d95",
			"type": "ceiling_lamp",
			"x": 1152,
			"y": 288
		},
		{
			"_addr": "0x6364200",
			"current_frame": "normal",
			"custom": 1,
			"label": "_29448884",
			"type": "wooden_shelves_empty",
			"x": 224,
			"y": 512
		},
		{
			"_addr": "0x6364800",
			"current_frame": "normal",
			"custom": 1,
			"label": "_525ea746",
			"type": "wooden_shelves_fruit1",
			"x": 288,
			"y": 512
		},
		{
			"_addr": "0x6364e00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_7072aba7",
			"type": "wooden_wardrobe",
			"x": 1504,
			"y": 64
		},
		{
			"_addr": "0x6365400",
			"current_frame": "normal",
			"custom": 1,
			"label": "_78639a9d",
			"type": "wooden_bed",
			"x": 1376,
			"y": 128
		},
		{
			"_addr": "0x6365a00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_533bf72a",
			"type": "wooden_nightstand",
			"x": 928,
			"y": 544
		},
		{
			"_addr": "0x6366000",
			"current_frame": "normal",
			"custom": 1,
			"label": "_624b6b97",
			"property_data": {
				"_is_bubbling": true
			},
			"type": "bubbling_pot",
			"x": 1477,
			"y": 590
		},
		{
			"_addr": "0x6366600",
			"current_frame": "normal",
			"custom": 1,
			"label": "_2f984d48",
			"property_data": {
				"_move_speed": 3,
				"_x2_bound": 896,
				"_x_bound": 800,
				"_y2_bound": 576,
				"_y_bound": 129
			},
			"type": "platform-seaside-interior",
			"x": 800,
			"y": 544
		},
		{
			"_addr": "0x6366c00",
			"current_frame": "normal",
			"custom": 1,
			"label": "right-door",
			"property_data": {
				"_dest_door": "right_door",
				"_dest_level": "secluded-hut.cfg",
				"_goes_to_illuminated_place": true
			},
			"type": "seaside_house_interior_door_large",
			"x": 1280,
			"y": 544
		},
		{
			"_addr": "0x6367200",
			"current_frame": "normal",
			"custom": 1,
			"label": "left_door",
			"property_data": {
				"_dest_door": "left_door",
				"_dest_level": "secluded-hut.cfg",
				"_goes_to_illuminated_place": true
			},
			"type": "seaside_house_interior_door",
			"x": 384,
			"y": 480
		},
		{
			"_addr": "0x6367800",
			"current_frame": "normal",
			"custom": 1,
			"label": "_637056d8",
			"property_data": {
				"is_burning": true
			},
			"type": "fireplace",
			"x": 608,
			"y": 506
		},
		{
			"_addr": "0x6368a00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_303132e5",
			"type": "chair_red",
			"x": 1000,
			"y": 96
		},
		{
			"_addr": "0x6369000",
			"current_frame": "normal",
			"custom": 1,
			"label": "_4e030db3",
			"on_talk": "speech_dialog(
			set(level.player.animation, 'emote_talk'),
			level.player, [~It says,\\n\"Health Risks of Exotic Mushrooms.\"~])",
			"type": "wooden_shelves_big_books",
			"x": 1120,
			"y": 32
		},
		{
			"_addr": "0x6474800",
			"current_frame": "normal",
			"custom": 1,
			"face_right": 0,
			"label": "_344ddf45",
			"type": "plant_potted",
			"x": 618,
			"y": 490
		},
		{
			"_addr": "0x636c000",
			"current_frame": "normal",
			"custom": 1,
			"label": "_4c4f77bb",
			"on_talk": "speech_dialog(
			set(level.player.animation, 'emote_talk'),
			level.player, [~It says,\\n\"All the Worst Animals.\"~])",
			"type": "wooden_shelves_big_books3",
			"x": 1248,
			"y": 32
		},
		{
			"_addr": "0x6447200",
			"current_frame": "normal",
			"custom": 1,
			"label": "_4e645564",
			"on_talk": "speech_dialog(
			set(level.player.animation, 'emote_talk'),
			level.player, [~It says, \"Migratory Patterns\\nof the Double-Throated Snerdelbird.\"~])",
			"type": "wooden_shelves_big_books2",
			"x": 480,
			"y": 448
		},
		{
			"_addr": "0x6449200",
			"current_frame": "normal",
			"custom": 1,
			"label": "mortimer_mole",
			"on_golden_ant_tease": "if(level.player is obj frogatto_playable, if(not level.player.get_stored_event('mortimer_juggled_golden_ant_tease') = 1,
										[schedule(10, transient_speech_dialog(self, 300,
										[~Look, either give me the ant or don't.\\nI can't stand this!~])),
										level.player.store_event('mortimer_juggled_golden_ant_tease',1)]))",
			"on_juggled_non_ant": "if(level.player is obj frogatto_playable, if(not level.player.get_stored_event('mortimer_juggled_non_ant') = 1,
										[schedule(10, transient_speech_dialog(self, 300,
										[~What goes in, usually comes out...\\nBut who knows?~],[~Someday a golden ant might pop out.~])),
										level.player.store_event('mortimer_juggled_non_ant',1)]))",
			"on_juggled_other_ant": "if(level.player is obj frogatto_playable, if(not level.player.get_stored_event('mortimer_juggled_other_ant') = 1,
										[schedule(10, transient_speech_dialog(self, 300,
										[~I don't think that's how golden ants are made.~])),
										level.player.store_event('mortimer_juggled_other_ant',1)]))",
			"on_too_many_ants": "if(level.player is obj frogatto_playable, if(not level.player.get_stored_event('mortimer_juggled_golden_ant_tease') = 1,
										[schedule(10, transient_speech_dialog(self, 300,
										[~I only wanted one.\\nI'm not studying their mating habits.~])),
										level.player.store_event('mortimer_juggled_golden_ant_tease',1)]))",
			"on_talk": "[
				if((not frogatto.get_stored_event('mortimer_said_he_wants_the_gold_ant')),
						
						if((frogatto.swallowed_object and frogatto.swallowed_object.type in ['ant_gold', 'ant_gold.thrown']),
					speech_dialog(frogatto.store_event('mortimer_said_he_wants_the_gold_ant', 1),
				self, [~Hello there.~],
						set(frogatto.animation, 'emote_raisedfinger'),
						frogatto, [~^Hi, I'm Frogatto.~],
						self, [~A pleasure to meet you.\\nI am Mortimer.~],
						set(frogatto.animation, 'emote_talk'),
						frogatto, [~^That's nice.~],
									set(frogatto.animation, 'emote_confused'),
									[~Uhm, I hope you don't mind my asking,\\nbut what on earth <em>are</em> you, anyway?~],
						self, [~Ostensibly, I am a mole.~],
						set(frogatto.animation, 'emote_talk'),
						frogatto, [~...\\nOkay.~],
						self, [~Perhaps more importantly, I am a bit of\\nan astronomer and biologist, by trade.~],
								[~That is why I live all the way up here.\\nYou can see quite a bit from this height.~],
						set(frogatto.animation, 'emote_talk'),
						frogatto, [~...and I guess you have these\\nants in cages to study them?~],
						self, [~That's right.  Unfortunately,\\nmy collection lacks the rarer golden ant.~],
						set(frogatto.animation, 'emote_talk'),
						frogatto, [~Oh.	 I've got one of those.~],
						self, [~<em>YOU DO???</em>~],
						set(frogatto.animation, 'emote_geez'),
						frogatto, [~Whoa.  Calm down, guy.\\nIt's only a crazy-rare insect.~],
						self, [~My apologies.\\nMy excitement got the better of me.~],
						self, [~Would you perchance be willing\\nto donate it to my collection?~],
						set(frogatto.animation, 'emote_geez'),
						frogatto, [~I dunno.  Goober and I have a bond\\nstronger than the mists of time.~],
						self, [~He will not be harmed, and I will reward you\\nhandsomely for your contributions to science.~],
						set(frogatto.animation, 'emote_raisedfinger'),
						frogatto, [~Handsomely, you say?\\nHe's all yours!~],
						self, [~Splendid!  How soon can you get him to me?~],
						set(frogatto.animation, 'emote_confused'),
						frogatto, [~What do you mean?\\nHe's right here.~],
						self, [~I... don't see a golden ant.~],
						set(frogatto.animation, 'idle_croak'),
						frogatto, [~He's in my stomach!~],
						self, [~Oh my, I thought you were just portly.\\nYou carry a golden ant with you at all times?~],
						set(frogatto.animation, 'emote_nod'),
						frogatto, [~Yup!  Gotta be prepared.~],
						self, [~In your <em>stomach?</em>~],
						set(frogatto.animation, 'emote_geez'),
						frogatto, [~Well, it's not like I have pockets.~],
						set(frogatto.animation, 'emote_talk'),
						frogatto, [~Besides, I never actually digest anything\\nunless I consciously try.~],
						self, [~What... how... just spit him into the empty cage.~],
						self, [~Iâ€¦ will want to ask you about that later,\\nbut this is altogether too much at once!~],
						set(frogatto.animation, 'emote_raisedfinger'),
						frogatto, [~Okay!  Goodbye Goober!\\nI'll always love you!~],
						self, [~What a day!~],
					),
	  speech_dialog(frogatto.store_event('mortimer_said_he_wants_the_gold_ant', 1),
			self, [~Hello there.~],
							set(frogatto.animation, 'emote_raisedfinger'),
							frogatto, [~^Hi, I'm Frogatto.~],
							self, [~A pleasure to meet you.\\nI am Mortimer.~],
							set(frogatto.animation, 'emote_talk'),
							frogatto, [~^That's nice.~],
										set(frogatto.animation, 'emote_confused'),
										[~Uhm, I hope you don't mind my asking,\\nbut what on earth <em>are</em> you, anyway?~],
							self, [~Ostensibly, I am a mole.~],
							set(frogatto.animation, 'emote_talk'),
							frogatto, [~...\\nOkay.~],
							self, [~Perhaps more importantly, I am a bit of\\nan astronomer and biologist, by trade.~],
									[~That is why I live all the way up here.\\nYou can see quite a bit from this height.~],
							set(frogatto.animation, 'emote_talk'),
							frogatto, [~...and I guess you have these\\nants in cages to study them?~],
							self, [~That's right.  Unfortunately,\\nmy collection lacks the rarer golden ant.~],
							set(frogatto.animation, 'emote_talk'),
							frogatto, [~Oh, what a shame.~],
							self, [~You know, you look rather well-traveled.\\nIf you could bring me a golden ant\\nand stick it in one of my cages,\\nI'd reward you <em>handsomely.</em>~],
							set(frogatto.animation, 'emote_raisedfinger'),
							frogatto, [~Handsomely you say?\\nI'm on it!~]))),
							
	if(frogatto.get_stored_event('mortimer_said_he_wants_the_gold_ant') = 1 and (not frogatto.get_stored_event('mortimer_saw_that_we_got_the_gold_ant') = 1),
	   if(frogatto.get_stored_event('got_gold_ant') = 1,
		speech_dialog(self, [~Oh! You got the golden ant for me.\\nIt's beautiful, <em>beautiful!</em>~],
				set(frogatto.animation, 'emote_geez'),
					frogatto, [~Mmmmmhmmmm.\\nNow you were talking about a <em>reward?</em>~],
						self, [~Yes, yes, a reward!\\nI think I have just the thing.~],
						[~Some time ago, I bartered my way\\ninto the possession of an Energy Talisman.~],
						[~A most interesting artifact, but I think\\nI've exhausted what I can learn from it.~],
						set(level.focus, [get_object_or_die(level,'the_treasure')]),
						[~It's been sitting idle in that chest\\nfor months, now. Rather a waste, really.~],
						set(level.focus, []),
						[~It's not useful to me, anymore,\\nand I think it could be very useful to you.~],
						[~If I am correct, I believe it would\\nreact with your anatomy by allowing you\\nto externally manifest energy.~],
						[~That is, taking your inner physical energy,\\nand allowing you to directly channel\\nit outside your body.~],
						[~You'll have to try it to see exactly\\nwhat happens, but I'm sure something will.~],
						[~Good luck,\\nand I hope it serves you well!~],
						frogatto.store_event('mortimer_saw_that_we_got_the_gold_ant', 1),
						spawn('padlock_key',mid_x,mid_y - 50,{valid_levels: ['secluded-hut-interior.cfg']},add(child.variations,['gold']))
					),
		if(frogatto.swallowed_object and frogatto.swallowed_object.type in ['ant_gold', 'ant_gold.thrown'],
		speech_dialog(self, [~Oh <em>my!</em> If that's a golden ant in your stomach,\\nthen quick, spit it out into the cage!~]),
		speech_dialog(self, [~I don't suppose you've had any\\nluck with getting a golden ant yet?~],
				  set(frogatto.animation, 'emote_geez'),
				  frogatto, [~I'm working on it.\\nYou said, yourself, that they're hard to find.~]
	   )))),
	 if(frogatto.get_stored_event('mortimer_saw_that_we_got_the_gold_ant') = 1,
		if(frogatto.get_stored_event('secluded_hut_treasure_chest_unlocked') = null,
		   speech_dialog(self,		[~Say, you <em>are</em> intending to open that chest, right?~],
									set(frogatto.animation, 'emote_geez'),
						frogatto,	[~I'mâ€¦ what now?~],
						self,		[~You left the key here last time.\\nGo.  Go open that chest down there.~],
									set(level.focus, [get_object_or_die(level,'the_treasure')]),
									[~It's a gift to youâ€¦ please do take it.\\nThere's no shame in doing so.~],
									set(level.focus, []),
									if((not find(level.chars, 'c', c.type in ['padlock_key'])) and if(frogatto.swallowed_object != null, (not frogatto.swallowed_object is obj padlock_key), true), 
										spawn('padlock_key',mid_x,mid_y - 50,{valid_levels: ['secluded-hut-interior.cfg']},add(child.variations,['gold']))
									),

					),
		   speech_dialog(self, [~I do hope you are enjoying exploring the island.\\nThere are <em>so</em> many wonderful creatures on it.~],
						 set(frogatto.animation, 'emote_geez'),
					 frogatto, [~... most of which seem inclined to kill me.~])))
	] where frogatto = (obj frogatto_playable <- level.player)",
										
			"on_received_event": "debug('here')",
			"property_data": {
				"consider_object": "[if(obj.basic_type ='ant_gold',
												if(level.player.get_stored_event('got_gold_ant') = 1, 
													fire_event(morty,'too_many_ants'),
													if(obj.juggled > 3
														and level.player.get_stored_event('mortimer_said_he_wants_the_gold_ant') = 1,
															fire_event(morty, 'golden_ant_tease'))),
												if(obj.juggled > 3, 
													if(strstr(obj.basic_type, 'ant_'),
														fire_event(morty, 'juggled_other_ant'),
														fire_event(morty, 'juggled_non_ant'))))
											where morty = me]",
			},
			"type": "mortimer_npc",
			"x": 608,
			"y": 128
		},
		{
			"_addr": "0x6459200",
			"current_frame": "normal",
			"custom": 1,
			"label": "_9e37dfc",
			"on_triggered": "[transient_speech_dialog(get_object_or_die(level,'mortimer_mole'), [~I say! Who's there?~]),die()]",
			"property_data": {
				"_x2_bound": 1092,
				"_x_bound": 569,
				"_y2_bound": 736,
				"_y_bound": 336
			},
			"type": "level_controller",
			"x": 448,
			"y": 416
		},
		{
			"_addr": "0x64ce800",
			"current_frame": "normal",
			"custom": 1,
			"label": "_1f7f42e2",
			"type": "metal_cage",
			"x": 117,
			"y": 103
		},
		{
			"_addr": "0x636b000",
			"collide_dimensions": "level_only",
			"current_frame": "normal",
			"custom": 1,
			"label": "_534347a8",
			"on_timer": "if(facing > 0 and x > 485 or facing < 0 and x < 452, [set(facing, -facing), animation('turn')])",
			"solid_dimensions": "level_only",
			"type": "ant_red",
			"x": 478,
			"y": 128,
			"zorder": -5
		},
		{
			"_addr": "0x6455600",
			"collide_dimensions": "level_only",
			"current_frame": "normal",
			"custom": 1,
			"label": "_534347a8",
			"on_timer": "if(facing > 0 and x > 160 or facing < 0 and x < 126, [set(facing, -facing), animation('turn')])",
			"solid_dimensions": "level_only",
			"type": "ant_black",
			"x": 128,
			"y": 128,
			"zorder": -5
		},
		{
			"_addr": "0x6455c00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_4ab26e78",
			"type": "metal_cage",
			"x": 437,
			"y": 102
		},
		{
			"_addr": "0x6456200",
			"collide_dimensions": "enemy,~enemy",
			"current_frame": "normal",
			"custom": 1,
			"label": "empty_cage",
			"on_add_ant": "if(captive_object != null, [level.player.store_event('got_gold_ant', 1), add_object(captive_object), set(captive_object, null)])",
			"on_collide_object_cage": "if(captive_object != null and level.player.get_stored_event('mortimer_said_he_wants_the_gold_ant') = 1 and arg.collide_with_area = 'thrown',
				if(collide_with.basic_type = 'ant_gold',
					[spawn('die_cloud', collide_with.midpoint_x, collide_with.midpoint_y, facing),
						spawn('die_cloud', captive_object.midpoint_x, captive_object.midpoint_y, facing),
						remove_object(collide_with), fire_event('add_ant')],
						if(collide_with.basic_type in ['ant_red','ant_black','ant_platform_red'] and (not level.player.get_stored_event('got_mortimer_the_wrong_ant')),
							[level.player.store_event('got_mortimer_the_wrong_ant', 1), schedule(10,
									speech_dialog(									set(level.player.facing, sign(mortimer.mid_x - level.player.mid_x)),
													mortimer,				[~I... do believe I had specified\\nthat I wanted a <em>golden</em> ant?~],
																	set(level.player.animation, 'emote_nod'),
													level.player,	[~Sure, there you go.\\nYou were talking about a reward?~],
													mortimer,				[~Well, I'm afraid I can't work with that.\\nBut wait a second...~],
																	[~...~],
																	[~Could it be that frogs don't see color\\nin the usual way?~],
																	[~Oh, this is embarrassing.\\nThat was an unreasonable assumption\\nI had on how your visual system operates.~],
																	[~Thus, it would be a most fascinating experience\\nif I were able to study your eyeballs\\nand visual cortex in greater detail.~],
																	set(level.player.animation, 'idle_eyeball'),
													level.player,	[~What, these old things?~],
													mortimer,				[~Sweet mother of... did you just...~],
																	set(level.player.animation, 'emote_talk'),
													level.player,	[~Normally, I'd gladly give them to anyone who asked...~],
																	set(level.player.animation, 'emote_raisedfinger'),
													level.player,	[~But I've got some pretty important stuff\\nto look at in the near future.~],						   
													mortimer,				[~Ah, I didn't want to imply that.\\nYes, I'm aware that'd be quite impossible right now.\\nBesides, I already have my hands full\\njust in studying these ants.~],
																	[~The point is,\\nI am <em>really</em> sorry for asking you to embark\\non such a fruitless snipe hunt.~],
																	/*probably to be replaced for a laugh emote in the future*/
																	set(level.player.animation, 'emote_oh'),
													level.player,	[~Oh no, don't feel bad.  I was just pulling your leg.~],
																	set(level.player.animation, 'emote_talk'),
																	[~I'll go fetch you an <em>actual</em> golden ant, right away.~]
																	)
									   
									   
									where mortimer = get_object_or_die(level, 'mortimer_mole'))]
						))) where collide_with = (obj hittable <- arg.collide_with)",
			"on_start_level": "if(level.player.get_stored_event('got_gold_ant') = 1, fire_event('add_ant'))",
			"property_data": {
				"captive_object": "@eval deserialize('0x3c80600')",
			},
  			"type": "metal_cage",
			"x": 276,
			"y": 103
		},
		{
			"_addr": "0x64d1800",
			"current_frame": "normal",
			"custom": 1,
			"face_right": 0,
			"is_human": 1,
			"label": "_b54e53b",
			"type": "frogatto_playable",
			"x": 960,
			"y": 130
		},
		{
			"_addr": "0x64d5c00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_4da0d59e",
			"type": "kitchen_sink",
			"x": 576,
			"y": 64
		},
		{
			"_addr": "0x64d7200",
			"current_frame": "normal",
			"custom": 1,
			"face_right": 0,
			"label": "_50d1d19f",
			"type": "fishbowl",
			"x": 1291,
			"y": 11
		},
		{
			"_addr": "0x64dac00",
			"current_frame": "normal",
			"custom": 1,
			"face_right": 0,
			"label": "_69217667",
			"type": "broom",
			"x": 96,
			"y": 96
		},
		{
			"_addr": "0x64db200",
			"current_frame": "normal",
			"custom": 1,
			"label": "_718038f8",
			"type": "seaside_interior_window",
			"x": 1376,
			"y": 448
		},
		{
			"_addr": "0x6450200",
			"current_frame": "normal",
			"custom": 1,
			"label": "_6b01f388",
			"type": "seaside_interior_window",
			"x": 1216,
			"y": 448
		},
		{
			"_addr": "0x6450800",
			"current_frame": "normal",
			"custom": 1,
			"label": "_ecc3268",
			"type": "seaside_interior_window_large",
			"x": 1280,
			"y": -96
		},
		{
			"_addr": "0x6450e00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_507afbe1",
			"type": "seaside_interior_window_large",
			"x": 1024,
			"y": -96
		},
		{
			"_addr": "0x6451400",
			"current_frame": "normal",
			"custom": 1,
			"label": "_4216724",
			"type": "seaside_interior_window_large",
			"x": 544,
			"y": -96
		},
		{
			"_addr": "0x6451a00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_2f779834",
			"type": "seaside_interior_window_large",
			"x": 288,
			"y": -96
		},
		{
			"_addr": "0x64dbc00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_714e8e01",
			"type": "sound_source_constant",
			"x": 736,
			"y": -32
		},
		{
			"_addr": "0x64dc200",
			"current_frame": "normal",
			"custom": 1,
			"label": "_7d64d258",
			"property_data": {
				"_x2_bound": 738,
				"_x_bound": 538,
				"_y2_bound": 648,
				"_y_bound": 248
			},
			"type": "checkpoint_controller",
			"x": 608,
			"y": 448
		},
		{
			"_addr": "0x64dc800",
			"current_frame": "normal",
			"custom": 1,
			"label": "_66c44d41",
			"property_data": {
				"_x2_bound": 1282,
				"_x_bound": 1082,
				"_y2_bound": 744,
				"_y_bound": 344
			},
			"type": "checkpoint_controller",
			"x": 1152,
			"y": 544
		},
		{
			"_addr": "0x64dce00",
			"current_frame": "normal",
			"custom": 1,
			"label": "the_treasure",
			"property_data": {
				"event_name": "secluded_hut_treasure_taken",
				"spawn_properties": {
					"kind": "energyshot"
				},
				"spawn_type": "ability_talisman"
			},
			"type": "treasure_chest",
			"x": 1088,
			"y": 576
		},
		{
			"_addr": "0x64dd400",
			"current_frame": "normal",
			"custom": 1,
			"label": "_3d0f374a",
			"property_data": {
				"event_name": "secluded_hut_treasure_chest_unlocked"
			},
			"type": "padlock",
			"x": 1137,
			"y": 631
		},
		{
			"_addr": "0x3af6800",
			"current_frame": "normal",
			"custom": 1,
			"label": "_48b6da4f",
			"type": "vase_grey_throwable_respawning",
			"x": 636,
			"y": 60
		}
	],
	"dimensions": [0,-320,1793,832],
	"id": "secluded-hut-interior.cfg",
	"music": "FrogattoChill.ogg",
	"preloads": "",
	"segment_height": 0,
	"segment_width": 0,
	"serialized_objects": {
		"character": [
			{
				"_addr": "0x3c80600",
				"collide_dimensions": "level_only",
				"current_frame": "normal",
				"custom": 1,
				"label": "_534347a8",
				"on_timer": "if(facing > 0 and x > 315 or facing < 0 and x < 296, [set(facing, -facing), animation('turn')])",
				"solid_dimensions": "level_only",
				"type": "ant_gold",
				"x": 278,
				"y": 128,
				"zorder": -5
			}
		]
	},
	"set_screen_resolution_on_entry": 0,
	"tile_map": [
		{
			"tiles": ",,,,,,,,,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins",
			"unique_tiles": ",ins",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": -224,
			"y_speed": 100,
			"zorder": "interior_background_tiles"
		},
		{
			"tiles": "int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,,,,,,,,int,int,,,,,,,,int,int,int,int,int,int,int,,,,,,,,int,int,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,int,int,int,int,int,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int
int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int
int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int
int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int
int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int
int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int
int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int
int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int
int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,int,int,,,,,,,,int,int,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int",
			"unique_tiles": ",int",
			"variations": "",
			"x": -96,
			"x_speed": 100,
			"y": -384,
			"y_speed": 100,
			"zorder": "interior_solid_ground_tiles"
		},
		{
			"tiles": ",,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,
,",
			"unique_tiles": ",iel",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": 0,
			"y_speed": 100,
			"zorder": "elevator_shafts"
		}
	],
	"title": "Secluded Hut",
	"touch_controls": 1,
	"vars": {
	},
	"version": "1.4",
	"water_resistance": 100,
	"xscale": 100,
	"yscale": 100
}
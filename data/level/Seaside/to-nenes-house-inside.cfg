{
	"air_resistance": 20,
	"auto_move_camera": [0,0],
	"camera": {
		"position": [0.0,0.0,10.0]
	},
	"character": [
		{
			"_addr": "0x53e6200",
			"current_frame": "normal",
			"custom": 1,
			"is_human": 1,
			"label": "_fcd2bf2",
			"type": "frogatto_playable",
			"x": 480,
			"y": 320
		},
		{
			"_addr": "0x53f7000",
			"current_frame": "normal",
			"custom": 1,
			"label": "nene_npc",
			"on_freak_out": "transient_speech_dialog(self, [~If that gets in the batter,\\nI swear...~])",
			"on_lazy_frog": "speech_dialog(
					self, [~So, have you killed the ants yet?~],
					set(frogatto.animation, 'emote_raisedfinger'),
					frogatto, [~Nope, I'm on break.~],
					self, [~You're... on break?~],
					if((not frogatto.get_stored_event('nenes_basement_unlocked') = 1) and (not find(level.chars, 'c', c.type in ['padlock_key'] and 'silver' in c.variations)) and if(frogatto.swallowed_object != null, (not frogatto.swallowed_object is obj padlock_key),true), spawn('padlock_key',800,150,{valid_levels: ['to-nenes-house-inside.cfg']},add(child.variations,['silver']))),
					self, [~Your job is to pick up a key...~],
					self, [~Go to the basement with the\\nassistance of an <em>elevator</em>...~],
					self, [~Unlock a door with the aforementioned key...~],
					self, [~Kill a small number of insects...~],
					self, [~And then return to inform me of the murder.~],
					self, [~How is this not something that\\ncan be done in one fell swoop?~],
					set(frogatto.animation, 'emote_confused'),
					level.player, [~Um... break's over.~])
						 where frogatto = (obj frogatto_playable <- level.player)",
			"on_squeamish_frog": "speech_dialog(self,
									   			[~Ah, so you're carrying one of the ants.\\nYou'll get rid of it, won't you?~],
									   			set(level.player.animation, 'emote_oh'),
												level.player, [~I don't know, now that I think of it...\\nIt's not their fault they're here,\\nthe ants are just playing to their instincts.~],
												self,
												[~If you say so... Just throw it outside.\\nAs long as they're out of my food, I'm good.~]
									   		)",
			"on_talk": "[swallow_event(),
			
			/*---frogatto didn't complete the quest yet; may or may not have an ant in his belly*/
			if((frogatto.get_stored_event('talked_to_nene') = 1) and 
				(frogatto.get_stored_event('nenes_basement_ants_killed') < 2),
						if(frogatto.swallowed_object != null and ((frogatto.swallowed_object is obj ant_black) or (frogatto.swallowed_object is obj ant_black.thrown)),
								fire_event('squeamish_frog'), fire_event('lazy_frog'))
			),
					
			if( (frogatto.get_stored_event('nenes_basement_ants_killed') < 2) and (not frogatto.get_stored_event('talked_to_nene') = 1),
	              [speech_dialog(frogatto, frogatto.store_event('talked_to_nene', 1),
	              				set(frogatto.animation, 'emote_raisedfinger'),
	              				[~Hey Nene, what's cooking?~],
								self, [~I'm making a cake.\\nWould you like to have some?~],
	              				set(frogatto.animation, 'emote_talk'),
								frogatto, [~Nah, I'd better get to town.~],
	              				set(frogatto.animation, 'emote_talk'),
								[~I have serious business to attend to.~]),
					if((not frogatto.get_stored_event('nenes_basement_unlocked') = 1),
					[
					speech_dialog(self,
								self, [~Oh, well maybe before you go\\nyou could look at my basement.~],
	              				set(frogatto.animation, 'emote_confused'),
								frogatto, [~Your basement?~],
																
								if((not find(level.chars, 'c', c.type in ['padlock_key'])) and if(frogatto.swallowed_object != null, (not frogatto.swallowed_object is obj padlock_key), true), spawn('padlock_key',800,150,{valid_levels: ['to-nenes-house-inside.cfg']},add(child.variations,['silver']))),
																
								self, [~Yes, here's the key.\\nThere're some ants down there.~],
								[~I've been meaning to get rid of them,\\nbut I just can't find the time.~],
								[~And now, they've gone and\\nruined a whole bag of flour!~],
	              				set(frogatto.animation, 'emote_geez'),
	              				frogatto,
								[~Ick.~],
								self,
								[~I know, right?~],
								[~So you showed up, and I thought ...\\nhey, maybe you could be a gentleman,\\nand help me out here, hm?~],
	              				set(frogatto.animation, 'emote_oh'),
								frogatto, [~Yeah, that sounds ... opportune.~],
	              				set(frogatto.animation, 'emote_raisedfinger'),
								frogatto,	[~How much were you figuring on\\npaying for a pest exterminator?~],
								self,		[~Well sheesh, I thought you'd\\ndo it for free for a friend!~],
									 		[~But if you're going to be like that\\nI think I have just the thing...~],
           									set(level.focus, [get_object_or_die(level,'the_treasure')]),
									 		[~You see that foot locker of mine over there?~],
           									set(level.focus, []),
											set(frogatto.animation, 'emote_raisedfinger'),
								frogatto,	[~I think I know where this is going!~],
								self,		[~Yep, if you clear out those ants, there's\\na present in there, with your name on it.~],
											[~So, have at it.\\nGo show those ants who's boss.~]) ],
									   
									   )]),
			if((frogatto.get_stored_event('nenes_basement_ants_killed') >= 2) and (frogatto.get_stored_event('talked_to_nene') = 1),
				if((not frogatto.get_stored_event('nenes_treasure_chest_unlocked') = 1),
					[speech_dialog(self, [~You really did do it.\\nYou rock!~],
					[~So, I imagine you're wondering about that present...~],
					set(frogatto.animation, 'emote_confused'),
					frogatto,
					[~Is it cake?~],
					self,
					[~Ha.  No, it's quite a bit better.\\nIt's a little souvenir from the IDF.~],
					[~It's a Fire Talisman, and I'd like you to have it.~],
					frogatto,
					set(frogatto.animation, 'emote_confused'),
					[~Wow... That's... awesome, but\\nwhy on earth are you giving this to me?~],
					set(frogatto.animation, 'emote_geez'),
					[~It's a bit much for getting rid of a few ants!~],
					self,
					[~Honestly?  I had originally meant to\\ngive it to you as a birthday present.~],
					[~I just never got around to it.~],
					[~I don't need it myself, and I know\\nyou'd get a LOT of use out of it.~],
					[~So...  here's the key, and Happy Birthday!\\nBetter late than never, right?~],
					if((not frogatto.get_stored_event('nenes_treasure_chest_unlocked') = 1) and (not find(level.chars, 'c', c.type in ['padlock_key'] and 'gold' in c.variations)) and if(frogatto.swallowed_object != null, (not frogatto.swallowed_object is obj padlock_key),true), spawn('padlock_key',800,150,{valid_levels: ['to-nenes-house-inside.cfg']},add(child.variations,['gold']))),
					frogatto,
					set(frogatto.animation, 'emote_confused'),
					[~You know, I'm really lucky to\\nhave friends like you!~],
					[~...~],
					set(frogatto.animation, 'emote_raisedfinger'),
					[~Say, that wouldn't also happen\\nto be <em>Birthday</em> Cake, would it?~],
					self,
					[~...\\nWhat?  No!~],
					[~Just take the present,\\nyou silly, silly frog.~],
				
					),
				
					],
			
					speech_dialog(self, [~Hey, thanks for taking care\\nof those ants down there!~],
								set(frogatto.animation, 'emote_nod'),
									frogatto, [~Of course.\\nI don't disappoint!~],
								set(frogatto.animation, 'emote_raisedfinger'),
												[~And thanks for the gift,\\nby the way.~],
										self,	[~You're welcome.~])))
			
								       
								       ] where frogatto = (obj frogatto_playable <- level.player)",
			"type": "nene_npc",
			"property_data": {
				"turning_behaviour": "face_player",
				"consider_object": "[if(obj.basic_type in ['ant_black','ant_red','ant_gold','ant_platform_red'], fire_event(me, 'freak_out'))]",
																					
			},
			"x": 704,
			"y": 119
		},
		{
			"_addr": "0x3354a00",
			"current_frame": "normal",
			"custom": 1,
			"label": "nene_interior_door",
			"property_data": {
				"_dest_door": "nene_ext_door",
				"_dest_level": "to-nenes-house.cfg"
			},
			"type": "seaside_house_interior_door_large",
			"x": 576,
			"y": 256
		},
		{
			"_addr": "0x3311c00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_47ef3a92",
			"type": "wooden_shelves_fruit2",
			"x": 736,
			"y": 96
		},
		{
			"_addr": "0x3358600",
			"current_frame": "normal",
			"custom": 1,
			"label": "_2236999d",
			"type": "wooden_bed",
			"x": 1216,
			"y": 32
		},
		{
			"_addr": "0x335a600",
			"current_frame": "normal",
			"custom": 1,
			"label": "_1c3dd656",
			"type": "wall_clock",
			"x": 672,
			"y": 0
		},
		{

		property_data: {
			},

			"_addr": "0x3360600",
			"current_frame": "normal",
			"custom": 1,
			"label": "_5612ac8a",
			"type": "ceiling_lamp",
			"x": 704,
			"y": 544
		},
		{

		property_data: {
			},

			"_addr": "0x3360c00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_63fdc42b",
			"type": "ceiling_lamp",
			"x": 352,
			"y": 544
		},
		{
			"_addr": "0x3361200",
			"current_frame": "normal",
			"custom": 1,
			"label": "_3bf1aff0",
			"type": "potbelly_stove",
			"x": 384,
			"y": 704
		},
		{
			"_addr": "0x3361800",
			"current_frame": "normal",
			"custom": 1,
			"label": "_2539205a",
			"type": "wooden_table",
			"x": 480,
			"y": 768
		},
		{
			"_addr": "0x3361e00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_45ee949d",
			"property_data": {
				"_move_speed": 4,
				"_x2_bound": 960,
				"_x_bound": 864,
				"_y2_bound": 799,
				"_y_bound": 384
			},
			"type": "platform-seaside-interior",
			"x": 864,
			"y": 448
		},
		{
			"_addr": "0x3362400",
			"current_frame": "normal",
			"custom": 1,
			"label": "_412b3ea1",
			"type": "bubbling_pot",
			"x": 602,
			"y": 108
		},
		{
			"_addr": "0x3362a00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_198b028c",
			"type": "toaster",
			"x": 557,
			"y": 742
		},
		{
			"_addr": "0x3363000",
			"current_frame": "normal",
			"custom": 1,
			"label": "_7554426d",
			"type": "wall_clock",
			"x": 512,
			"y": 640
		},
		{
			"_addr": "0x3363600",
			"current_frame": "normal",
			"custom": 1,
			"label": "_39a4fc1b",
			"type": "kettle_brass",
			"x": 647,
			"y": 100
		},
		{
			"_addr": "0x3363c00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_1b130d9e",
			"type": "plant_potted",
			"x": 1354,
			"y": -50
		},
		{
			"_addr": "0x3364200",
			"current_frame": "normal",
			"custom": 1,
			"face_right": 0,
			"label": "_137f94",
			"type": "wooden_wardrobe",
			"x": 1344,
			"y": -32
		},
		{
			"_addr": "0x3364800",
			"current_frame": "normal",
			"custom": 1,
			"face_right": 0,
			"label": "_1b5f8216",
			"type": "wooden_shelves_fruit1",
			"x": 800,
			"y": 96
		},
		{
			"_addr": "0x3364e00",
			"current_frame": "normal",
			"custom": 1,
			"face_right": 0,
			"label": "_39d642d7",
			"type": "refrigerator",
			"x": 480,
			"y": 64
		},
		{
			"_addr": "0x3365400",
			"current_frame": "normal",
			"custom": 1,
			"label": "_5d9af6bb",
			"type": "wooden_shelves_fruit1",
			"x": 192,
			"y": 288
		},
		{
			"_addr": "0x3365a00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_27aa3bdc",
			"type": "sofa_red",
			"x": 0,
			"y": 0
		},
		{
			"_addr": "0x3366000",
			"current_frame": "normal",
			"custom": 1,
			"label": "_37f1dc77",
			"type": "wooden_nightstand",
			"x": -64,
			"y": 32
		},
		{
			"_addr": "0x3366600",
			"current_frame": "normal",
			"custom": 1,
			"label": "_7750ca9e",
			"type": "wooden_shelves_fruit2",
			"x": -96,
			"y": 0
		},
		{
			"_addr": "0x3366c00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_4f1d8425",
			"type": "painting_leaf",
			"x": 704,
			"y": 288
		},
		{
			"_addr": "0x3367200",
			"current_frame": "normal",
			"custom": 1,
			"label": "_faef6b7",
			"type": "wooden_shelves_fruit2",
			"x": 480,
			"y": 288
		},
		{
			"_addr": "0x3367800",
			"current_frame": "normal",
			"custom": 1,
			"face_right": 0,
			"label": "_1f60d2ee",
			"type": "wooden_table_clothed",
			"x": 576,
			"y": 96
		},
		{
			"_addr": "0x3367e00",
			"current_frame": "normal",
			"custom": 1,
			"face_right": 0,
			"label": "_5a0802aa",
			"type": "kitchen_sink",
			"x": 608,
			"y": 704
		},
		{
			"_addr": "0x3368400",
			"current_frame": "normal",
			"custom": 1,
			"label": "_33b6ca4d",
			"type": "crate_throwable_respawning",
			"x": 320,
			"y": 736
		},
		{
			"_addr": "0x3368a00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_49fb8429",
			"type": "crate_throwable_respawning",
			"x": 288,
			"y": 704
		},
		{
			"_addr": "0x3369000",
			"current_frame": "normal",
			"custom": 1,
			"label": "_44345f5e",
			"type": "crate_throwable_respawning",
			"x": 288,
			"y": 768
		},
		{
			"_addr": "0x3369600",
			"current_frame": "normal",
			"custom": 1,
			"label": "_14b4285d",
			"type": "crate_throwable_respawning",
			"x": 320,
			"y": 768
		},
		{
			"_addr": "0x3369c00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_61f486a1",
			"type": "crate_throwable_respawning",
			"x": 288,
			"y": 736
		},
		{
			"_addr": "0x336a200",
			"current_frame": "normal",
			"custom": 1,
			"label": "_2bfb85eb",
			"type": "seaside_interior_window",
			"x": 1248,
			"y": -64
		},
		{
			"_addr": "0x336a800",
			"current_frame": "normal",
			"custom": 1,
			"label": "_47deb2d2",
			"type": "seaside_interior_window",
			"x": 96,
			"y": -64
		},
		{
			"_addr": "0x336ae00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_2eb1876",
			"type": "seaside_interior_window_large",
			"x": 800,
			"y": -96
		},
		{
			"_addr": "0x336b400",
			"current_frame": "normal",
			"custom": 1,
			"label": "_2c45866c",
			"type": "seaside_interior_window_large",
			"x": 480,
			"y": -96
		},
		{
			"_addr": "0x336ba00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_59ea950a",
			"property_data": {
				"color": "silver",
				"event_name": "nenes_basement_unlocked"
			},
			"type": "padlock",
			"x": 766,
			"y": 776
		},
		{
			"_addr": "0x336c000",
			"current_frame": "normal",
			"custom": 1,
			"label": "door_basement",
			"on_talk": "if(locks, [speech_dialog(level.player,
								set(level.player.animation,'emote_geez'),
								[~Well, dangit, this door is locked.~],
								set(level.player.animation,'emote_confused'),
								[~Can't a guy sneak into his neighbor's\\nbasement uninvited these days?~]),
								swallow_event()])",
			"property_data": {
				"_dest_door": "entrance",
				"_dest_level": "nenes-basement.cfg"
			},
			"type": "seaside_house_interior_door",
			"x": 736,
			"y": 704
		},
		{
		property_data: {
				"falloff_distance": -1,
				"sound_file": "ambient/house-interior-seaside.ogg",
				"sound_volume_max": 1.0,
				"sound_volume_min": 0.0
			},

			"_addr": "0x335c400",
			"current_frame": "normal",
			"custom": 1,
			"label": "_3875bd74",
			"type": "sound_source_constant",
			"x": 384,
			"y": 224
		},
		{
			"_addr": "0x335ca00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_60b02616",
			"on_talk": "speech_dialog(set(level.player.animation,'emote_confused'),
			level.player,[~It says, \"Elegant Bird, Suddenly\\nPlaced in Undignified Predicament,~],
			set(level.player.animation,'emote_confused'),
			level.player, [~Vocally Expresses Displeasure\\nRegarding Newfound Situation.\"~],
			set(level.focus, [nene, level.player]),
			set(level.player.facing,0),
			nene, [~Best.  Sound.  <em>Ever.</em>~],
			set(level.player.animation,'emote_geez'),
			level.player, [~What on earth are you on about?~],
			nene, [~You know, when there's a cartoon bird\\nthat gets grabbed or something, and it goes...~],
			set(level.focus, [nene]),
			set(level.zoom, 3),
			sound('elegant-bird.wav'),
			nene, [~<em>BRAAAAAWWWKKKK!!!</em>~],
			set(level.zoom, 2),
			set(level.focus, [nene, level.player]),
			nene, [~Comedy gold.  Every time.~],
			set(level.player.animation,'emote_confused'),
			level.player, [~Oh. I like that sound,\\nbut are you sure it's the best?~],
			set(level.player.animation,'emote_raisedfinger'),
			level.player, [~What about \"Unseen Cat Screeches\\nImmediately Following Offscreen Commotion?\"~],
			nene, [~Nah, too mainstream.~],
			set(level.player.animation,'emote_impatient'),
			level.player, [~Okay, whatever you say.\\nI guess the bigger question is...~],
			set(level.player.animation,'emote_confused'),
			level.player, [~Did somebody really write an entire\\nbook about a single sound?~],
			nene, [~A trilogy, actually.~],
			set(level.focus,[]))
			where nene = get_object_or_die(level,'nene_npc')",
			"type": "wooden_shelves_big_books3",
			"x": 978,
			"y": 32
		},
		{
			"_addr": "0x335d000",
			"current_frame": "normal",
			"custom": 1,
			"label": "the_treasure",
			"property_data": {
				"event_name": "nenes_house_treasure_taken",
				"spawn_properties": {
					"kind": "firebreath"
				},
				"spawn_type": "ability_talisman"
			},
			"type": "treasure_chest",
			"x": 1408,
			"y": 0
		},
		{
			"_addr": "0x3371e00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_1456e3d6",
			"property_data": {
				"event_name": "nenes_treasure_chest_unlocked"
			},
			"type": "padlock",
			"x": 1456,
			"y": 58
		},
		{
			"_addr": "0x2dcb800",
			"current_frame": "normal",
			"custom": 1,
			"label": "_7a04184e",
			"type": "seaside_interior_window",
			"x": -64,
			"y": -64
		},
		{
			"_addr": "0x4dfce00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_2b31200f",
			"type": "seaside_interior_window",
			"x": 1408,
			"y": -64
		}
	],
	"dimensions": [-448,-384,1855,1318],
	"id": "to-nenes-house-inside.cfg",
	"music": "FrogattoChill.ogg",
	"preloads": "",
	"segment_height": 0,
	"segment_width": 0,
	"serialized_objects": {
		"character": []
	},
	"set_screen_resolution_on_entry": 0,
	"tile_map": [
		{
			"tiles": ",,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,ins,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
ins,ins,ins,ins,,,,,,,ins,ins,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,,,,,,,,,ins
,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,ins,ins,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,ins,ins,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,ins,ins,ins,ins,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,ins,,ins,ins,ins,,ins,ins,ins,ins,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,ins,ins,ins,ins,ins,,,,,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,ins,ins,,,,,,,,,,,,,,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins",
			"unique_tiles": ",ins",
			"variations": "",
			"x": -96,
			"x_speed": 100,
			"y": -256,
			"y_speed": 100,
			"zorder": "interior_background_tiles"
		},
		{
			"tiles": ",
,
,",
			"unique_tiles": "",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": 0,
			"y_speed": 100,
			"zorder": "interior_back_wall_decor"
		},
		{
			"tiles": "int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,int,int,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
,",
			"unique_tiles": ",int",
			"variations": "",
			"x": -736,
			"x_speed": 100,
			"y": -640,
			"y_speed": 100,
			"zorder": "interior_solid_ground_tiles"
		},
		{
			"tiles": ",,,,,,,iss,,,,,,,,,,,,,,,,,,,,,,,,,,,,,iss
,,,,,,,iss,,,,,,,,,,,,,,,,,,,,,,,,,,,,,iss
,,,,,,,iss,,,,,,,,,,,,,,,,,,,,,,,,,,,,,iss
,,,,,,,iss,,,,,,,,,,,,,,,,,,,,,,,,,,,,,iss
,,,,,,,iss,,,,,,,,,,,,,,,,,,,,,,,,,,,,,iss
,,,,,,,iss,,,,,,,,,,,,,,,,,,,,,,,,,,,,,iss
,,,,,,,iss,,,,,,,,,,,,,,,,,,,,,,,,,,,,,iss
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,",
			"unique_tiles": ",iss",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": -128,
			"y_speed": 100,
			"zorder": "pillars"
		},
		{
			"tiles": ",
,
,",
			"unique_tiles": "",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": 0,
			"y_speed": 100,
			"zorder": "wooden_platform_objects"
		},
		{
			"tiles": ",
,
,
,
,
,
,,,,,,,,,isb,isb,isb,isb,isb,isb,isb
,,,,,,,,,,,,,isb
,,,,,,,,,,,,isb
,,,,,,,,,,,isb
,,,,,,,,,,isb,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,isb,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel
,,,,,,,,,,,,,,,,,,,,,,,,,,,iel,iel,iel",
			"unique_tiles": ",iel,isb",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": 0,
			"y_speed": 100,
			"zorder": -7
		},
		{
			"tiles": ",
,
,",
			"unique_tiles": "",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": 0,
			"y_speed": 100,
			"zorder": "exterior_decor"
		},
		{
			"tiles": ",
,
,",
			"unique_tiles": "",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": 0,
			"y_speed": 100,
			"zorder": "interior_decor"
		},
		{
			"tiles": ",
,
,",
			"unique_tiles": "",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": 0,
			"y_speed": 100,
			"zorder": "npcs"
		},
		{
			"tiles": ",
,
,",
			"unique_tiles": "",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": 0,
			"y_speed": 100,
			"zorder": "player"
		},
		{
			"tiles": ",
,
,
,
,
,
,,,,,,,,,grt,grt,grt,grt,grt,grt
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,",
			"unique_tiles": ",grt",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": 0,
			"y_speed": 100,
			"zorder": 9
		},
		{
			"tiles": ",
,
,",
			"unique_tiles": "",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": 0,
			"y_speed": 100,
			"zorder": "foreground_parallax_objects"
		},
		{
			"tiles": ",
,
,",
			"unique_tiles": "",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": 0,
			"y_speed": 100,
			"zorder": "in_front_of_everything"
		}
	],
	"title": "Nene's House",
	"touch_controls": 1,
	"version": "1.4",
	"water_resistance": 100,
	"xscale": 100,
	"yscale": 100
}

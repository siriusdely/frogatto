{
	"air_resistance": 20,
	"auto_move_camera": [0,0],
	"camera": {
		"position": [0.0,0.0,10.0]
	},
	"character": [
		{
			"_addr": "0x3505c00",
			"current_frame": "normal",
			"custom": 1,
			"label": "lower_door",
			"on_interact": "[if(not level.player.get_stored_event('town_elder_fight_won'), swallow_event())]",
			"property_data": {
				"_dest_door": "elder_door",
				"_dest_level": "crevice-village-heights.cfg"
			},
			"type": "seaside_house_interior_door_large",
			"x": 736,
			"y": 384
		},
		{
			"_addr": "0x34e8800",
			"current_frame": "normal",
			"custom": 1,
			"is_human": 1,
			"label": "_22f9134b",
			"type": "frogatto_playable",
			"x": 704,
			"y": 448
		},
		{
			"_addr": "0x34e8e00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_179d5ba",
			"property_data": {
				"is_burning": false
			},
			"type": "fireplace",
			"x": 173,
			"y": 410
		},
		{
			"_addr": "0x34ea000",
			"current_frame": "normal",
			"custom": 1,
			"label": "_465681f9",
			"type": "painting_leaf",
			"x": 256,
			"y": 352
		},
		{
			"_addr": "0x350f400",
			"current_frame": "normal",
			"custom": 1,
			"label": "_3bc59655",
			"type": "wooden_bed",
			"x": 640,
			"y": 192
		},
		{
			"_addr": "0x350fa00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_3b5dd44f",
			"type": "chair_red",
			"x": 448,
			"y": 416
		},
		{

		property_data: {
			},

			"_addr": "0x3510000",
			"current_frame": "normal",
			"custom": 1,
			"label": "_7040295",
			"type": "ceiling_lamp",
			"x": 544,
			"y": -64
		},
		{

		property_data: {
			},

			"_addr": "0x3510600",
			"current_frame": "normal",
			"custom": 1,
			"label": "_7cd66e86",
			"type": "ceiling_lamp",
			"x": 416,
			"y": -64
		},
		{
			"_addr": "0x3510c00",
			"current_frame": "normal",
			"custom": 1,
			"face_right": 0,
			"label": "town_elder",
			"on_create": "if(level.player.get_stored_event('town_elder_fight_won'),set(turning_behaviour, 'face_player'))",
			"on_see_juggling": "if(level.player is obj frogatto_playable, if(not level.player.get_stored_event('elders_house_juggled') = 1,
										[schedule(10, transient_speech_dialog(self, 250,
											self, [~HA HA HA HA HA!\\nWell done, my boy!~],
											self, [~In light of your newfound talent,\\nI've decided to throw a festival!~],
											self, [~And you'll be center stage,\\nyou dashing rogue, you!~],
											/*spawn('coin_silver_bouncy', x+if(facing > 0, img_w, 0), midpoint_y, facing, [  TODO:  fix bouncy coins
												set(velocity_xy, [125*facing,-1600]),
												set(time_to_live, 10^8),
												set(damping, 0.25), ]),
											self, [~Here, take this down to Chopple's\\nand go buy yourself something fancy.~],*/
											
											)),
										level.player.store_event('elders_house_juggled',1)]))",
			"on_talk": "speech_dialog(self,
													set(self.animation, 'mutter_begin'),
													[~How's that business with Milgram going?~],
													set(level.player.animation, 'emote_talk'),
									level.player,	[~I'm working on it.~],
													set(self.animation, 'mutter_begin'),
									self,			[~That's good to hear!~])",
			"property_data": {
				"turning_behaviour": "never",
				"consider_object": "if(obj.juggled > 3, fire_event(me,'see_juggling'))",
			},
			"type": "town_elder_npc",
			"x": 384,
			"y": 416
		},
		{
			"_addr": "0x34e1000",
			"current_frame": "normal",
			"custom": 1,
			"label": "bad_kitty",
			"on_become_enemy": "[swallow_event(),remove_object(me), set(boss_kitty.mid_x, mid_x), set(boss_kitty.mid_y, mid_y), set(boss_kitty.facing, facing), add_object(boss_kitty)] where boss_kitty = (custom_obj <- (obj level_controller <- get_object_or_die(level,'elder_fight_storage')).custom_storage['sword_kitty_boss'])",
			"type": "kitty_sword_npc",
			"x": 285,
			"y": 437,
			"property_data": {
				"start_mode": "stand",
			},


			"on_dialog_1": "
				[begin_skip_dialog_sequence(),set(level.zoom, 2),
				set(level.focus, [self, the_elder]),
				speech_dialog(
					set(level.player.facing, -1),
					self, [~Ugh.~],
						[~For the last time, we <em>know</em> you've\\ngot the money somewhere.~],
						[~Make this easy on yourself.~],
						set(the_elder.animation, 'emote_caneshake'),
					the_elder,	[~I have no idea what you're talking about.~],
					set(self.animation, 'extend_sword'),
					self, [~Are you <em>absolutely</em> sure about that?~],
						set(the_elder.animation, 'mutter_begin'),
					the_elder,	[~Er... no, I'm not.  I ... lied.\\nListen, I'm sorry... I'm just scared, here!~],
						set(the_elder.animation, 'emote_emphatic'),
					the_elder,	[~I've never been threatened like this!\\nI just can't think straight.~],
					the_elder,	[~...~],
					self, [~Go on...~],
						set(the_elder.animation, 'mutter_begin'),
					the_elder,	[~Listen... if you just follow me,\\nI'll lead you to it.~],
						set(the_elder.facing, 1),
						set(the_elder.animation, 'run_scared'),
						schedule(50,set(the_elder.animation, 'stand')),
						set(self.facing, 1),
						set(self.animation, 'walk'),
						schedule(10, [set(self.animation, 'jump'), set(self.velocity_y, -1800),set(self.velocity_x, 1300)]),
						schedule(60, set(self.animation, 'stand')),
						schedule(61,set(self.facing, -1)),
					self, [~Oh, no you don't!~],
						[~You're not going out that door first.\\nI'm not <em>that</em> stupid.~],
						[~Now, listen up,\\nYou're SERIOUSLY testing my patience.~],
						[~You're gonna <em>sit down,</em>\\nand tell me...  uh...~],
						set(self.facing, 1),
					set(level.focus, [level.player]),	
					self, [~...~],
					set(level.player.animation, 'emote_confused'),
					level.player, [~Oh, hi, what's going on here?~],
						set(the_elder.facing, -1),
						set(the_elder.animation, 'run_scared'),
					set(level.focus, [self]),
					self, [~Who the hell are you?~],
					set(level.focus, [level.player]),	
					set(level.player.animation, 'emote_raisedfinger'),
					level.player, [~I sometimes ask myself that question.~],
					set(level.focus, [self]),
					self, [~...~],
					set(level.zoom, 3),
						[~I don't have to put up with this.~],
						set(level.zoom, 2),
						set(self.facing, -1),
						[~Excuse me whilst I vent a little frustration.~],
						set(self.facing, 1),
						remove_object(the_elder),
						remove_object(me),
						fire_event('become_enemy'),
						music('FrogattoBossBattleSpastic.ogg'),
						end_skip_dialog_sequence(),
				
					set(level.focus, []),
					set(level.zoom, 1)
				) ] where the_elder = get_object_or_die(level,'town_elder')
			",
			
			
			"on_postdeath_dialogue_2": "[set(level.zoom, 3),
			set(level.focus, [self]),
			begin_skip_dialog_sequence(),
			set(me.animation, 'extend_sword'),
			schedule(100,
			speech_dialog(
				set(level.player.facing, -1),
				self, if(not animation in ['swordBreak'],animation('swordBreak')), 
					[~<em>ouch</em>~],
					[~Okay, I've had enough!  I'm going home.~],
					set(level.zoom, 1),
					schedule(1,fire_event('postdeath_dialogue_3'))
			)) ]",

			"on_postdeath_dialogue_3": "[
				if(is_standing_on_platform,set(fall_through_platforms, 100)),
				
				walk_sadly_to(780, bind_command(def() schedule(20,
						[fire_event(get_object_or_die(level,'lower_door'),'open'),
						[fire_event(get_object_or_die(level,'elder_fight_storage'),'postdeath_dialogue_4'), remove_object(me)],
						set(level.focus, [])  ]))
				)		
			]",
		},
		{
			"_addr": "0x34e3400",
			"current_frame": "normal",
			"custom": 1,
			"label": "elder_fight_storage",
			"property_data": {
				"custom_storage": { "sword_kitty_boss": "@eval deserialize('0x3c80600')",
									"sword_kitty_npc": null },
				"_x2_bound": 918,
				"_x_bound": 668,
				"_y2_bound": 534,
				"_y_bound": 284
			},
			"type": "level_controller",
			"x": 768,
			"y": 384,
			
			"on_postdeath_dialogue_4": "[
				(obj frogatto_playable <- level.player).do_post_victory_without_transport( [def() fire_event(me,'postdeath_dialogue_5')] )
			]",
			
			"on_postdeath_dialogue_5": "schedule(100, [
				set(frogatto.fall_through_platforms, 300),

				frogatto.scripted_move_to_x(465,-1, fire_event(me,'postdeath_dialogue_6') )
			] where frogatto = (obj frogatto_playable <- level.player))",
			
			"on_postdeath_dialogue_6": "[
				schedule(100,
					[
					set(level.player.control_lock, []),
					set(level.focus, [level.player]),
					set(level.zoom, 2),
					speech_dialog(level.player,
						set(level.player.facing, -1),
						set(level.player.animation, 'emote_raisedfinger'),
						[~Well!\\nThat went better than expected.~],
						set(level.player.animation, 'emote_confused'),
						set(level.player.facing, 1),
						[~Say ...\\nWhat happened to the elder?~],
						fire_event(get_object_or_die(level,'secret_passage'),'open'),
						[~...~],
						set(level.player.facing, -1),
						set(level.player.animation, 'emote_talk'),
						[~Whoa...\\n... is that what I think it is?~],
						schedule(1,fire_event('postdeath_dialogue_7'))
				)])]",

			"on_postdeath_dialogue_7": "[add_object(new_elder),
						speech_dialog(new_elder,
														set(new_elder.animation, 'mutter_begin'),
									new_elder,			[~It is indeed, my boy!~],
														set(new_elder.animation, 'emote_emphatic'),
									new_elder,			[~It's my very own safe room.~],
														music('ElderChief.ogg'),
														set(frogatto.animation, 'emote_talk'),
									frogatto,		[~^Wow.~],
														set(new_elder.animation, 'mutter_begin'),
									new_elder,			[~Built it for exactly this sort of crisis.~],
														set(frogatto.animation, 'emote_confused'),
									frogatto,		[~...~],
														set(frogatto.animation, 'emote_raisedfinger'),
									frogatto,		[~That's really amazing.\\nUh...~,
									~Whatever prompted you to build this?~, [speech_dialog(
															set(frogatto.animation, 'emote_talk'),
										frogatto,		[~I guess I have to ask:\\nWhatever prompted you to build this?~],
															set(frogatto.animation, 'emote_geez'),
										frogatto,		[~Were you <em>expecting</em> some sort of crisis?~],
															set(frogatto.animation, 'emote_raisedfinger'),
										frogatto,		[~Did you con the wrong people?\\nGive someone a reason to hate you?~],
															set(new_elder.animation, 'emote_emphatic'),
										new_elder,			[~I'm told I have a habit of doing that.~],
															set(frogatto.animation, 'emote_geez'),
										frogatto,		[~That's all well and good,\\nbut normally it doesn't fall out on us.~],
															set(new_elder.animation, 'emote_confused'),
										new_elder,			[~It doesn't?~],
										)],
									~This had to be really expensive.~, [speech_dialog(
															set(frogatto.animation, 'emote_geez'),
										frogatto,		[~This HAD to be expensive.\\nI mean ... <em>really</em> ... expensive.~],
															set(new_elder.animation, 'emote_confused'),
										new_elder,			[~Yes.\\nYes it was.~],
															set(frogatto.animation, 'emote_impatient'),
										frogatto,		[~...And?~],
															set(new_elder.animation, 'mutter_begin'),
										new_elder,			[~And what?~],
															set(frogatto.animation, 'emote_geez'),
										frogatto,		[~And where the hell would <em>you</em>\\nget the money to pay for it!?~],
															set(new_elder.animation, 'emote_caneshake'),
										new_elder,			[~What makes you think\\nI couldn't afford it myself?~],
															set(frogatto.animation, 'emote_angry'),
										frogatto,		[~Oh for crying out loud,\\nwould you NOT play coy with me!~],
															set(frogatto.animation, 'emote_geez'),
										frogatto,		[~This is serious business, okay!~],
															set(frogatto.animation, 'emote_geez'),
										frogatto,		[~You had to have gotten the money\\nfor this <em>from</em> someone.~],
															set(new_elder.animation, 'emote_canestomp'),
										new_elder,			[~And if I did,\\nam I under any obligation to tell you?~],
															set(frogatto.animation, 'emote_angry'),
															set(level.zoom, 2.25),
										frogatto,		[~YEAH, I THINK YOU ARE!~],
															set(level.zoom, 2),
										)],
									~Who built this for you?~, [speech_dialog(
															set(frogatto.animation, 'emote_talk'),
										frogatto,		[~This is incredible - really.\\nWho did you hire to build this?~],
															set(new_elder.animation, 'mutter_begin'),
										new_elder,			[~Hmm?~],
															set(frogatto.animation, 'emote_geez'),
										frogatto,		[~Well, it just doesn't seem like anyone\\nin this town would be up to the job.~],
															set(new_elder.animation, 'mutter_begin'),
										new_elder,			[~Oh, right - I hired some of\\nMilgram's folks to do it.~],
															set(frogatto.animation, 'emote_confused'),
															set(level.zoom, 2.25),
										frogatto,		[~So wait ... you hid from his own guys\\nin a contraption they had built?~],
															set(new_elder.animation, 'emote_confused'),
										new_elder,			[~Well, I can only assume it wasn't\\nthose exact individuals, but yes.~],
															set(frogatto.animation, 'emote_confused'),
										frogatto,		[~...~],
															set(frogatto.animation, 'emote_raisedfinger'),
										frogatto,		[~<em>Man</em> you have a brass neck.\\nWow.~],
															set(new_elder.animation, 'emote_caneshake'),
															set(level.zoom, 2),
										new_elder,			[~I feel proud, frankly.\\nHoisted them with their own petard, eh!~],
															set(frogatto.animation, 'emote_impatient'),
										frogatto,		[~Right, that's nice and all,\\nbut ... uh ...~],
										)],
									],
														set(frogatto.animation, 'emote_geez'),
									frogatto,		[~Seriously, <em>what</em> just happened here?~],
														set(new_elder.animation, 'emote_confused'),
									new_elder,			[~I think you saw all there is to see.~],
														frogatto.scripted_move_to_x(490,1, speech_dialog(
														
														set(frogatto.animation, 'emote_impatient'),
									frogatto,		[~No, I'm sorry, not this time, bud.\\nI demand some answers.~],
														set(frogatto.animation, 'emote_geez'),
														[~This has been a really crazy day,\\nand I'm fresh out of patience.~],
														set(frogatto.animation, 'emote_raisedfinger'),
														[~I set out for just a routine errand run,\\nyou know?~],
														set(frogatto.facing, -1),
														set(frogatto.animation, 'emote_talk'),
														[~Just gonna run by town, check the news.~],
														set(frogatto.animation, 'emote_angry'),
														set(level.zoom, 3),
														[~Next thing I know, people are SHOOTING at me!\\nI WANT TO KNOW WHY!~],
														set(level.focus, [frogatto,new_elder]),
														frogatto.scripted_move_to_x(440,-1, speech_dialog(
														set(frogatto.animation, 'emote_impatient')
														[~And from the conversation I just overheard,\\nI KNOW you have something to do with it.~],
														set(frogatto.animation, 'emote_geez'),
														set(level.zoom, 2),
									frogatto,		[~I insist - it's the <em>least</em> you can do\\nto thank me for saving your hide.~],
														set(new_elder.animation, 'emote_confused'),
									new_elder,			[~Ugh, I suppose you're right.~],
														set(frogatto.animation, 'emote_nod'),
									frogatto,		[~You bet I am.~],
														set(new_elder.animation, 'emote_emphatic'),
									new_elder,			[~Hmm... boy, where do I start?~,
									~Why was that guy asking about money?~, [speech_dialog(
														set(frogatto.animation, 'emote_raisedfinger'),
									frogatto,		[~Why don't we start with:\\nWhy was that guy asking about money?~],
														set(new_elder.animation, 'mutter_begin'),
									new_elder,			[~Well, I am the mayor, after all,\\nand mayors are well endowed.~],
														set(frogatto.animation, 'emote_geez'),
									frogatto,		[~Cute.  I'm serious, though.\\nWhy were you getting shaken down?~],
														set(frogatto.animation, 'emote_raisedfinger'),
									frogatto,		[~Have you been doing business\\nwith dangerous people?~],
														set(new_elder.animation, 'emote_confused'),
									new_elder,			[~I ... I'm not sure\\nI feel comfortable talking about this.~],
										)],
									~Why are we being attacked?~, [speech_dialog(
														set(frogatto.animation, 'emote_geez'),
									frogatto,		[~I think the most important question\\nis why we just got attacked.~],
														frogatto.scripted_move_to_x(460,1,  speech_dialog(
														set(frogatto.animation, 'emote_raisedfinger'),
									frogatto,		[~I mean seriously.\\nThis is the craziest thing I've seen.  Ever.~],
														set(frogatto.animation, 'emote_confused'),
									frogatto,		[~Who would want to attack our town?\\nAnd why?~],
														frogatto.scripted_move_to_x(440,-1,  speech_dialog(
														set(frogatto.animation, 'emote_geez'),
									frogatto,		[~What would we even have worth taking?~],
														set(new_elder.animation, 'mutter_begin'),
									new_elder,			[~What makes you think they came here to steal?~],
														set(frogatto.animation, 'emote_impatient'),
									frogatto,		[~The conversation I just overheard.\\nCome on...~],
										)))))],
									],
					
									set(new_elder.label, 'town_elder'),
									schedule(1,fire_event(me, 'postdeath_dialogue_8'))
			)))))
			] where new_elder = object('town_elder_npc', secret_psg.mid_x, secret_psg.mid_y+30, {label: 'town_elder'}),
			where secret_psg = get_object_or_die(level,'secret_passage'),
			where frogatto = (obj frogatto_playable <- level.player)",


			"on_postdeath_dialogue_8": "[
						speech_dialog(new_elder,
											set(frogatto.animation, 'emote_geez'),
							frogatto,	[~Seriously - <em>I'm on your side,</em> here!\\nI just risked my butt fighting that guy off.~],
											set(frogatto.animation, 'emote_geez'),
											[~I know you're trying to hide something,\\nbut throw me a line here.~],
											set(frogatto.animation, 'emote_raisedfinger'),
											[~Maybe ...\\nI can actually <em>help</em> you?~],
											set(new_elder.animation, 'emote_confused'),
							new_elder,		[~Okay.\\nWhat have I got to lose, eh?~],
											set(new_elder.animation, 'emote_emphatic'),
											[~I'm afraid if this gets out,\\nthe town might blame <em>me</em> for this incident.~],
											set(new_elder.animation, 'emote_caneshake'),
											[~See, some years ago,\\nMilgram approached me with a proposition.~],
											set(new_elder.animation, 'mutter_begin'),
											[~He was going to invest a\\nsizeable amount of money, here.~],
											set(frogatto.animation, 'emote_confused'),
							frogatto,	[~Wait,\\ndid he think you were actually the mayor?~],
											set(new_elder.animation, 'emote_canestomp'),
											set(level.focus, [new_elder]),
											set(level.zoom, 2.25),
							new_elder,		[~YES!~],
											set(level.zoom, 2),
											set(new_elder.animation, 'mutter_begin'),
											[~Anyhow, I was all too happy to accept,\\nbut it wasn't long before I realized\\nwhat was <em>really</em> afoot.~],
											set(new_elder.animation, 'emote_emphatic'),
											[~I realized this was all a scam.\\nHe was establishing a claim, you see.~],
											set(frogatto.animation, 'emote_confused'),
											set(level.focus, [frogatto]),
							frogatto,	[~I'm not sure I follow you...~],
											set(new_elder.animation, 'emote_confused'),
							new_elder,		[~Okay, do you know what 'usury' is?~,
										~Not exactly...~, [speech_dialog(
												set(frogatto.animation, 'emote_confused'),
								frogatto,	[~Not exactly...~],
												set(new_elder.animation, 'mutter_begin'),
								new_elder,		[~See, Milgram was being\\nwhat's called a 'loan shark'.~],
												set(new_elder.animation, 'emote_emphatic'),
												[~He gives me money,\\nthen he just 'decides' what I owe him.~],
												set(new_elder.animation, 'emote_emphatic'),
												[~That I owe him more money\\nthan I could ever repay.~],
												set(new_elder.animation, 'emote_caneshake'),
												[~See, then he can just take\\nwhatever he wants, as payment.~],
												set(new_elder.animation, 'emote_emphatic'),
												[~He was going to use this as an excuse\\nto take over the town.~],
												set(frogatto.animation, 'emote_confused'),
								frogatto,	[~Okay... I guess that sorta makes sense,\\nalthough it's a bit convoluted.~],
												set(frogatto.animation, 'emote_talk'),
												[~I don't see why he'd need an excuse.\\nIf he wanted to take over the town,\\nhe could just ... do it.~],
												set(new_elder.animation, 'emote_emphatic'),
								new_elder,		[~No!\\nYou <em>always</em> need an excuse.\\nOtherwise, no one would support your claim!~],
												set(frogatto.animation, 'emote_impatient'),
								frogatto,	[~Uhh, okay...\\nAnyways, what are we gonna do here?~],			
								)],
									~I don't have time for this.~, [speech_dialog(
												set(frogatto.animation, 'emote_geez'),
								frogatto,	[~You know,\\nI really don't have time for this.~],
												set(frogatto.animation, 'emote_impatient'),
												[~I can see where you're going with this,\\nso let's get to the point.~],
												set(frogatto.animation, 'emote_talk'),
												[~So you've got some cockamamie idea\\nthat Milgram wants to annex us?~],
												set(new_elder.animation, 'emote_caneshake'),
								new_elder,		[~I beg your pardon!\\nThis is a very real threat!~],
												set(frogatto.animation, 'emote_nod'),
								frogatto,	[~Sure, I'll take that as a 'yes'.~],
												set(frogatto.animation, 'emote_geez'),
												[~More importantly,\\nWhat are we going to do about it?~],
								)],
							],
											set(new_elder.animation, 'emote_canestomp'),
							new_elder,		[~Well, I think we should form a militia,\\nand bring the fight to Milgram!~],
											set(frogatto.animation, 'emote_oh'),
							frogatto,	[~A militia?\\nMade of what?~],
											set(new_elder.animation, 'emote_confused'),
							new_elder,		[~Well ... made of <em>us!</em>\\nIsn't that obvious?~],
											set(frogatto.animation, 'emote_confused'),
							frogatto,	[~... uh.\\nWhat?~],
											set(frogatto.animation, 'emote_geez'),
											[~That's the dumbest idea I've ever heard!~],
											set(new_elder.animation, 'emote_confused'),
							new_elder,		[~Well!  Fine then, smartarse ...\\nWhat's <em>your</em> great strategy?!~],
											set(frogatto.animation, 'emote_geez'),
							frogatto,	[~If you ask me, I think we need to go\\nhear Milgram's side of the story.~],
											set(frogatto.animation, 'emote_raisedfinger'),
											[~Talk it over.  See if we can reach\\nsome mutually amicable agreement.~],
											set(new_elder.animation, 'emote_confused'),
							new_elder,		[~I don't think that would work.~],
											set(frogatto.animation, 'emote_geez'),
							frogatto,	[~I sure do!\\nCripes - I tell you what: I'll do it.~],
											set(frogatto.animation, 'emote_raisedfinger'),
											[~I'll go talk to Milgram,\\nand get this all sorted out.  Okay?~],
											set(frogatto.animation, 'emote_talk'),
											[~I just think this is a big misunderstanding,\\nand I'd rather not see anyone get hurt.~],
											set(new_elder.animation, 'emote_confused'),
							new_elder,		[~Well, if you say so, I suppose I can't object.\\nIn fact, it might be a good stalling tactic.~],
											set(new_elder.animation, 'emote_canestomp'),
											[~Why, I'll even show you the way...~],

						end_skip_dialog_sequence(),
						
						set(frogatto.control_lock, null),
						set(level.focus, []),
						set(level.zoom, 1),
						
						schedule(50, teleport('crevice-village-heights.cfg', 'target_tree', 'iris')),
						frogatto.store_event('town_elder_fight_won',1))											
			] where new_elder = find_or_die(level.active_chars, value is obj town_elder_npc),
			where secret_psg = get_object_or_die(level,'secret_passage'),
			where frogatto = (obj frogatto_playable <- level.player)",
	
		},
		{
			"_addr": "0x34e3000",
			"current_frame": "normal",
			"custom": 1,
			"label": "elder_fight_trigger",
			"on_triggered": "[die(), if( level.player.get_stored_event('town_elder_fight_won'), remove_object(kitty),
							 [fire_event(kitty,'dialog_1'), set((obj level_controller <- get_object_or_die(level,'elder_fight_storage')).custom_storage['sword_kitty_npc'], kitty)]
							)] where kitty = get_object_or_die(level,'bad_kitty')",
			"property_data": {
				"_x2_bound": 918,
				"_x_bound": 668,
				"_y2_bound": 534,
				"_y_bound": 284
			},
			"type": "level_controller",
			"x": 768,
			"y": 384
		},
		{
			"_addr": "0x34e6200",
			"current_frame": "normal",
			"custom": 1,
			"label": "_68191743",
			"type": "kettle_brass",
			"x": 415,
			"y": 217
		},
		{
			"_addr": "0x34e6800",
			"current_frame": "normal",
			"custom": 1,
			"label": "_10494ead",
			"on_talk": "speech_dialog(
                            set(level.player.animation, 'emote_talk'),
                            level.player, [~It says,\\n\"How to Win Friends and Influence People.\"~])",
			"type": "wooden_shelves_big_books3",
			"x": 544,
			"y": 352
		},
		{
			"_addr": "0x3520800",
			"current_frame": "normal",
			"custom": 1,
			"label": "secret_passage",
			"type": "seaside_house_bookshelf_secret_passage",
			"x": 320,
			"y": 352
		},
		{
			"_addr": "0x3520e00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_47d33586",
			"property_data": {
				"sound_file": "ambient/house-interior-seaside.ogg"
			},
			"type": "sound_source_constant",
			"x": 512,
			"y": 192
		},
		{
			"_addr": "0x3521400",
			"current_frame": "normal",
			"custom": 1,
			"label": "_44896263",
			"type": "seaside_interior_window_large",
			"x": 640,
			"y": -32
		},
		{
			"_addr": "0x3521a00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_5b7de6aa",
			"type": "seaside_interior_window_large",
			"x": 256,
			"y": -32
		},
		{
			"_addr": "0x3522000",
			"current_frame": "normal",
			"custom": 1,
			"label": "_3e7b4d53",
			"type": "wooden_table",
			"x": 448,
			"y": 196
		},
		{
			"_addr": "0x3522600",
			"current_frame": "normal",
			"custom": 1,
			"label": "_2341c234",
			"type": "plant_potted",
			"x": 467,
			"y": 168
		},
		{
			"_addr": "0x3522c00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_70ecbaba",
			"type": "standing_globe",
			"x": 864,
			"y": 128
		},
		{
			"_addr": "0x3523200",
			"current_frame": "normal",
			"custom": 1,
			"label": "_791f9e45",
			"type": "wall_clock",
			"x": 480,
			"y": 288
		},
		{
			"_addr": "0x3523800",
			"current_frame": "normal",
			"custom": 1,
			"label": "_633ce75",
			"type": "chair_red",
			"x": 96,
			"y": 162
		},
		{
			"_addr": "0x3523e00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_617e2c7f",
			"type": "painting_leaf",
			"x": 480,
			"y": 96
		},
		{
		property_data: {
			},

			"_addr": "0x3524400",
			"current_frame": "normal",
			"custom": 1,
			"label": "_6c7c7c0e",
			"type": "ceiling_lamp",
			"x": 832,
			"y": -64
		},
		{
		property_data: {
			},

			"_addr": "0x3524a00",
			"current_frame": "normal",
			"custom": 1,
			"label": "_69b22457",
			"type": "ceiling_lamp",
			"x": 128,
			"y": -64
		}
	],
	"dimensions": [-416,-288,1410,1025],
	"id": "crevice-village-house-elder.cfg",
	"music": "ElderChief.ogg",
	"preloads": "",
	"segment_height": 0,
	"segment_width": 0,
	"serialized_objects": {
		"character": [
			{
				"_addr": "0x3c80600",
				"custom": 1,
				"type": "kitty_sword",
				"on_die": "[swallow_event(), remove_object(self), 
							set(npc_kitty.mid_x, mid_x),
							set(npc_kitty.mid_y, mid_y),
							set(npc_kitty.facing, facing),
							add_object(npc_kitty),
							set(npc_kitty.animation, 'extend_sword'),
							fire_event(npc_kitty, 'postdeath_dialogue_2')				
				] where npc_kitty = (custom_obj <- (obj level_controller <- get_object_or_die(level,'elder_fight_storage')).custom_storage['sword_kitty_npc'])",
				"x": 278,
				"y": 128,
			}
		]
	},
	"set_screen_resolution_on_entry": 0,
	"tile_map": [
		{
			"tiles": ",
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,",
			"unique_tiles": ",ins",
			"variations": "",
			"x": -96,
			"x_speed": 100,
			"y": -2176,
			"y_speed": 100,
			"zorder": "interior_background_tiles"
		},
		{
			"tiles": ",
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,int,int,int,int,int,int,int,int,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,int,int,int,int,int,int,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,",
			"unique_tiles": ",int",
			"variations": "",
			"x": -672,
			"x_speed": 100,
			"y": -2432,
			"y_speed": 100,
			"zorder": "interior_solid_ground_tiles"
		},
		{
			"tiles": ",
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,,,,,isb,isb,isb,isb,isb,isb,isb,isb,isb,isb,isb,isb,isb,isb,isb,isb,isb,isb,isb,isb,isb,isb
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,
,",
			"unique_tiles": ",isb",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": -2048,
			"y_speed": 100,
			"zorder": "interior_shelves_and_stairs"
		}
	],
	"title": "The Elder's House",
	"touch_controls": 1,
	"version": "1.4",
	"water_resistance": 100,
	"xscale": 100,
	"yscale": 100
}
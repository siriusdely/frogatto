{
id: "trap_door",
activation_area: 100,
is_strict: true,
zorder: "@include data/zorder.cfg:interior_decor",
properties: {
	should_trigger: "if(level.cycle - _last_triggered > 10, 1, 0)",
	
	_last_triggered: { type: "int", default: -10 },
	_left_paddle: { type: "obj trap_door.paddle", init: "object('trap_door.paddle', mid_x-54*facing, y+72, facing)", persistent: false },
	_right_paddle: { type: "obj trap_door.paddle", init: "object('trap_door.paddle', mid_x+56*facing, y+72, -facing)", persistent: false },
},
on_create: "[animation('hidden'),
				add_object(_left_paddle),
				add_object(_right_paddle),
				spawn('trap_door.support',mid_x-64*facing,y+96,facing),
				spawn('trap_door.support',mid_x+64*facing,y+96,-facing,set(child.zsub_order,-3))
				]",

on_process: "if(level.player.standing_on = _left_paddle or level.player.standing_on = _right_paddle, schedule(10,fire_event('falldown')))",
on_falldown: "if(should_trigger,[set(_last_triggered,level.cycle),sound('trapdoor-open'+1d3+'.wav',0.8),fire_event(_left_paddle, 'falldown'),fire_event(_right_paddle, 'falldown'),schedule(100,fire_event('rise'))])",
on_rise: "[fire_event(_left_paddle, 'rise'),fire_event(_right_paddle, 'rise')]",
editor_info: {
	category: "enemies, milgramen",
},
animation: [
	{
		image: "props/trap-door.png",
		rect: [32,64,127,127],
		duration: 10000000,
		id: "editor",
		palettes: "@include data/palettes.cfg:dungeon_palettes",
	},
	{
		image: "props/trap-door.png",
		rect: [16,64,17,65],
		duration: 10000000,
		id: "hidden",
		palettes: "@include data/palettes.cfg:dungeon_palettes",
	},
],
object_type: [
	{
		id: "support",
		zorder: "@include data/zorder.cfg:interior_decor",
		zsub_order: -2,
		animation: {
			image: "props/trap-door.png",
			id: "normal",
			rect: [96,0,127,31],
			palettes: "@include data/palettes.cfg:dungeon_palettes",
		},
	},
	{
		id: "paddle",
		zorder: "@include data/zorder.cfg:interior_decor",
		zsub_order: -1,
		properties: {
			material_sound: "'metal'",
		},
		platform_area: [0,23,54,24],
		on_create: "[fire_event('solidify')]",
		on_falldown: "[animation('falling'),set(platform_area, [])]",
		on_process_falling: "if(abs(rotate) < 90, add(rotate, facing*time_in_animation*20), set(rotate, 90*facing))",
		on_rise: "animation('rising')",
		on_process_rising: "if(abs(rotate) > 0, add(rotate, -1*facing), fire_event('solidify'))",
		on_solidify: "[if(cycle>10,sound('trapdoor-close'+1d3+'.wav',0.6)),set(rotate, 0),set(platform_area, null), animation('walkable')]",
		animation: [

			#no_remove_alpha_borders="props/trap-door.png"
			{
				image: "props/trap-door.png",
				duration: 10000000,
				no_remove_alpha_borders: true,
				id: "walkable",
				rect: [0,0,54,54],
				palettes: "@include data/palettes.cfg:dungeon_palettes",
			},

			#no_remove_alpha_borders="props/trap-door.png"
			{
				image: "props/trap-door.png",
				duration: 10000000,
				no_remove_alpha_borders: true,
				id: "falling",
				rect: [0,0,54,54],
				palettes: "@include data/palettes.cfg:dungeon_palettes",
			},

			#no_remove_alpha_borders="props/trap-door.png"
			{
				image: "props/trap-door.png",
				duration: 10000000,
				no_remove_alpha_borders: true,
				id: "rising",
				rect: [0,0,54,54],
				palettes: "@include data/palettes.cfg:dungeon_palettes",
			},
		],
	},
],
}

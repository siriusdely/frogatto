{
id: "sinusoidal_flier_shooter",
activation_border: 1000,
prototype: ["ant_flying"],
properties: {
	try_facing: "def(direction) if(direction != facing,fire_event('turn'))",
	sine_magnitude: "abs(vars.desired_height - vars.magnitude)",
	shooting_appropriate: "if( (abs(mid_y - level.player.mid_y) < 20) and (level.cycle - vars.last_fired) > 50 and (facing = sign(level.player.mid_x - mid_x)),1,0)",
	shoot: "def() [set(vars.last_fired, level.cycle),spawn('thang.shot',mid_x+20*facing,mid_y,facing)]",
	points_value: 14,
},
on_create: "[			proto_event('ant_flying','create'),
						set(vars.randphase, 1d500),
						set(vars.init_y, midpoint_y),
						set(vars.init_x, midpoint_x)
					]",
on_test_bounds: "[debug(x),if( should_turn,
					fire_event('turn'))] where should_turn = ((not animation in ['turn']) and (facing < 0 and x < vars.x_bound or
	                facing > 0 and x2 > vars.x2_bound))",

#
#Note:  the proto will set our y velocity for regular soaring.  We only override this if we're busy diving or climbing.
on_process_cling: "if(should_dive, begin_dive())",
on_process_fly: "[fire_event('test_bounds'),
	            set(velocity_y, wave( min(250,max(-250, destination_height-midpoint_y ) ) )), if(shooting_appropriate, shoot()) ] where destination_height = vars.desired_height + (sin(cycle*2 + vars.randphase)*sine_magnitude)",
on_process_turn: "fire_event('process_fly')",
on_lose_wings: "#don't lose wings#",

#solid_area=5,10,20,25
solid_area: null,
editor_info: {
	category: "enemies, experimental",
	var: [
		{
			name: "x_bound",
			type: "x",
			value: "x - 200",
		},
		{
			name: "x2_bound",
			type: "x",
			value: "x2 + 200",
		},
		{
			name: "desired_height",
			type: "y",
			value: "midpoint_y",
		},
		{
			name: "magnitude",
			type: "y",
			value: "midpoint_y+300",
		},
	],
},
animation: [
	{
		image: "enemies/bat-black.png",
		pad: 3,
		body_area: "all",
		accel_y: 0,
		feet_x: 12,
		feet_y: 25,
		id: "cling",
		rect: [1,1,18,28],
		frames: 2,
		duration: 16,
		accel_x: 0,
	},
	{
		image: "enemies/bat-black.png",
		pad: 3,
		body_area: "all",
		accel_y: 0,
		feet_x: 12,
		feet_y: 25,
		id: "wake",
		rect: [43,1,60,28],
		frames: 1,
		duration: 6,
		accel_x: 0,
	},
	{
		image: "enemies/bat-black.png",
		pad: 3,
		body_area: "all",
		accel_y: 0,
		feet_x: 12,
		feet_y: 25,
		id: "fly",
		rect: [1,32,26,70],
		frames: 4,
		duration: 4,
		accel_x: 4,
	},
	{
		image: "enemies/bat-black.png",
		pad: 3,
		body_area: "all",
		accel_y: 0,
		feet_x: 12,
		feet_y: 25,
		id: "spring",
		rect: [1,32,26,70],
		frames: 1,
		duration: 3,
	},
	{
		image: "enemies/bat-black.png",
		pad: 3,
		body_area: "all",
		accel_y: 0,
		feet_x: 12,
		feet_y: 25,
		id: "turn",
		rect: [1,74,26,112],
		frames: 2,
		duration: 3,
	},
	{
		image: "enemies/bat-black.png",
		pad: 3,
		body_area: "all",
		accel_y: 0,
		feet_x: 12,
		feet_y: 25,
		id: "hurt",
		rect: [120,32,145,70],
	},
],
object_type: [
	{
		id: "shot",
		prototype: ["shot"],
		traction_in_air: 1000,
		timer_frequency: 200,
		on_timer: "die()",
		animation: {
			image: "enemies/generic.png",
			id: "normal",
			duration: 60,
			rect: [90,5,102,17],
			frames: 1,
			attack_area: "all",
			accel_x: 20,
		},
	},
	{
		id: "thrown",
		prototype: ["throwable_small_enemy"],

		properties: {
			acquirable_item_drop_value: 10,					
			points_value: 14,
		},
		#specifically trigger death here because non-solid objects don't have a water-level
		on_enter_water: "[handle_death({damage_type: 'neutral'}),die()]",
		on_die: "if(me.underwater, null, proto_event('throwable_small_enemy', 'die'))",
		animation: [
			{
				image: "enemies/bat-black.png",
				id: "thrown",
				thrown_area: "all",
				duration: 60,
				rect: [149,32,174,70],
				frames: 1,
				body_area: null,
			},
			{
				image: "enemies/bat-black.png",
				id: "on_back",
				rect: [149,32,174,70],
				frames: 2,
				duration: 5,
				body_area: "all",
			},
		],
	},
],
}

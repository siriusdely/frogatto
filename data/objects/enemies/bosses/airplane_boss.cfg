{
id: "airplane_boss",
prototype: ["hittable"],
always_active: true,
hitpoints: 10000000,   #bogus, gets reset in on_create
zorder: "@include data/zorder.cfg:player",


mass: 5,
ignore_collide: true,
traction_in_air: 1000,
properties: {
	team: "'evil'",
	boss_hitpoints: "hitpoints",
	boss_max_hitpoints: "max_hitpoints",
	armor: "standard_thrown_damage - 1",
	flinch_threshold: 9999999,
	alive: "(not _has_died)",
	points_value: "2000",

	vary_smoke_density: "set(particle_systems['smoke'].spawn_rate, abs(3000*(sin(cycle*8.0)+1) ))",
	change_height: "[set(y, _heights[next_height]), set(_heights_index, int(next_height))]",
	next_height: "(_heights_index+1)%size(_heights)",
	the_mine_swoop: "4",
	the_low_swoop: "3",
	play_airplane_engine_sound: "if(next_height = the_low_swoop, sound('airplane-fly-low.wav'), sound('airplane-fly-high.wav'))",
	
	add_boss_hp_bar: "map(level.gui, set(gui_vars.bosses, current_bosses + [me]) where current_bosses = [object] <- gui_vars.bosses where gui_vars = object <- value.vars)",
	remove_boss_hp_bar: "map(level.gui, set(gui_vars.bosses, []) where current_bosses = [object] <- gui_vars.bosses where gui_vars = object <- value.vars)",
	
	
	engine_sound_list: "['airplane-fly-low.wav','airplane-fly-high.wav']",
	pan_engine_sounds: "map(engine_sound_list, sound_pan(value, [1.0 + lib.math.constrain(-1.0,-the_ratio, 0),1.0 + lib.math.constrain(-1.0,the_ratio, 0)]))  where the_ratio = (me.mid_x - level.player.mid_x)/600.0",
	
#--------------------------  vars --------------------------#
	_left_bound: { type: "decimal", init: "400-level.camera_position[2]/2-300", persistent: false },
	_right_bound: { type: "decimal", init: "400+level.camera_position[2]/2+300", persistent: false },
	_left_bound_missile: { type: "decimal", init: "400-level.camera_position[2]/2-100", persistent: false },
	_right_bound_missile: { type: "decimal", init: "400+level.camera_position[2]/2+100", persistent: false },
	_strafing: { type: "int", init: "-1", persistent: false  },

	_pilot: { type: "obj kitty_pilot", init: "object('kitty_pilot', x, y, {facing: facing, zorder: zorder-1})", persistent: false  },
	_propeller: { type: "obj airplane_boss.propeller", init: "object('airplane_boss.propeller', x, mid_y - 50, {facing: facing, zorder: zorder+1})", persistent: false  },
	_heights: "[int] :: [-20,00,20,370,60]",
	_heights_index: { type: "int", init: "0", persistent: false },
	
	_last_dropped_mine: { type: "int", init: "0", persistent: false },
	
	_has_died: { type: "bool", default: false, persistent: false },
},

on_create: "[set_max_hitpoints({casual: standard_thrown_damage * 3, challenging: standard_thrown_damage * 6}),
				play_airplane_engine_sound,
				animation('fly'),add_particles('smoke'),
				add_object(_pilot), set(_pilot.parent, me),
				add_object(_propeller), set(_propeller.parent, me),
				set(_pilot.relative_x, 0),
				set(_pilot.relative_y, -8),
				set(_propeller.relative_x, 38),
				set(_propeller.relative_y, 20),
				
				add_boss_hp_bar
				]",
on_end_anim: "animation('fly')",
on_die: "[set(hitpoints, 1), if(not _has_died,[set(_has_died, true), remove_boss_hp_bar ])]",
on_player_death: "[stop_sound('airplane-fly-low.wav'), stop_sound('airplane-fly-high.wav')]",

on_process: "[	pan_engine_sounds,
				vary_smoke_density,
				set(velocity_y, 50* sin(cycle*8.0)),
				if(_heights_index != the_low_swoop, set(accel_x, 8), set(accel_x, 16)),

	         if((not alive) and (cycle%10 =1),
	             [spawn('explosion_big',  mid_x + 1d50 - 1d50, mid_y + 1d70 - 1d70, {facing:-facing, rotate: -45}),sound('BombExplode.wav')]),
	
	               if((facing < 0 and x < _left_bound or facing > 0 and x > _right_bound),
	               [set(_strafing, -1), facing(-facing), set(_pilot.facing, -facing), set(_propeller.facing, -facing), animation('fly'), set(velocity_x, 0),
	               change_height, play_airplane_engine_sound,
	               if(not alive, remove_object(me) /*note that this full removal will only happen when offscreen*/)  ])]",
timer_frequency: 20,
on_timer: "[
	     if(alive and x > _left_bound_missile and x2 < _right_bound_missile and cycle > 200,
	          if(_strafing > 0, [set(_strafing, _strafing - 1),
	          	if(_heights_index != the_low_swoop and _heights_index != the_mine_swoop,
					[switch(1d2,
						1, spawn('${type}.dud_bomb', mid_x, mid_y+40, facing, [set(child.velocity_x, velocity_x/3)]),
						2, spawn('${type}.bomb', mid_x, mid_y+40, facing, [set(child.velocity_x, velocity_x/3)]) )
					,sound('MissileDrop.wav')]),
	          	if(_heights_index = the_mine_swoop,
	          			if(level.cycle - _last_dropped_mine > 150,
						[spawn('${type}.mine', mid_x, mid_y+40, facing, [set(child.velocity_x, velocity_x/3)]), sound('MissileDrop.wav'), set(_last_dropped_mine, level.cycle)])
				)
					],
				if(_strafing = -1 and (level.player.mid_x - mid_x)*facing < (200 + (level.player.y - y)), [set(_strafing, 8)])))
				]",
animation: [
	{
		"@base": true,
		image: "vehicles/plane-milgram.png",
		pad: 3,
		body_area: "all",
		id: "fly",
		rect: [1,1,69,69],
		frames: 5,
		duration: 3,
		reverse: true,
		accel_x: 8,
	},
	{
		duration: 8,
	},
	{
		duration: 7,
	},
	{
		duration: 6,
	},
	{
		duration: 5,
	},
],
particle_system: {
	id: "smoke",
	type: "simple",
	spawn_rate: 100,
	time_to_live: 100,
	min_x: -30,
	max_x: -20,
	min_y: 60,
	max_y: 80,
	velocity_y: -300,
	velocity_x: 260,
	velocity_x_random: 800,
	velocity_y_random: 600,

	#color=255,255,255,255
	delta_a: 15,
	animation: {
		id: "sparkle",
		image: "effects/explosion.png",
		x: 198,
		y: 5,
		w: 17,
		h: 16,
		pad: 3,
		frames: 8,
		frames_per_row: 2,
		scale: 2,
		duration: 6,
	},
},
object_type: [
	{
		id: "propeller",
		prototype: ["hittable"],
		properties: {
			attack_damage: "if(higher_difficulty, 4,1)",
		},
		
		always_active: true,
		on_end_anim: "set(animation, 'normal')",
		animation: [
			{
				id: "normal",
				image: "vehicles/plane-milgram.png",
				rect: [1,73,28,116],
				pad: 3,
				frames: 4,
				duration: 1,
				attack_area: "all"
			},
		]
	},
	{
		id: "bomb",
		prototype: ["throwable_projectile"],
		always_active: true,
		dies_on_inactive: true,
		solid_area: [15,15,20,22],
		solid_dimensions: ["enemy","common"],

		properties: {
			swallowable: "bool :: false",
			attack_damage: "if(higher_difficulty, 2,1)",
			damage_cooldown: 5,
			team: "'evil'",
			left_bound: "480 - screen_w/2 where screen_w = level.camera_position[2]",
			right_bound: "480 + screen_w/2 where screen_w = level.camera_position[2]",
			
			is_a_shot: "bool :: true",
			goes_through_enemy_shots: "bool :: false",

			
			cease_motion: "[set(velocity_x,0),set(velocity_y,0)]",
			test_collision:  "def(custom_obj|null collide_with, string event_name) -> commands if(collide_with is obj hittable, if(collide_with.team != team, proto_event('throwable_projectile', event_name)))",
		},
		on_create: "[if(time_spat, animation('thrown'),animation('spawn')),add_particles('fuse_sparks')]",
		on_end_spawn_anim: "animation('thrown')",

		on_die: "[spawn('explosion_big',mid_x,mid_y,facing),sound('BombExplode.wav'),spawn('explosion_spark_bright',mid_x,mid_y,facing)]",

		on_process: "[if((mid_x < left_bound + 20) or (mid_x > right_bound -20),remove_object(me))]",
		on_collide_object_thrown: "test_collision(arg.collide_with, 'collide_object_thrown')",
		on_collide_head: "fire_event('die')",
		on_collide_feet: "test_collision(arg.collide_with, 'collide_feet')",
		
		animation: [
			{
				"@base": true,
				image: "effects/bomb.png",
				pad: 3,
				accel_y: 80,
				frames: 1,
				//body_area: [15,10,30,25,"solid"]
			},
			{
				id: "thrown",
				rect: [57,2,81,29],
				body_area: "all",
				thrown_area: "all",
				duration: 10,
			},
			{
				id: "spawn",
				rect: [1,2,25,29],
				frames: 3,
				duration: 6,
				thrown_area: "all",
			},
			{
				id: "on_back",
				rect: [57,2,81,29],
				body_area: "all",
				frames: 1,
				duration: 2,
			},
		],
		particle_system: {
			id: "fuse_sparks",
			type: "simple",
			spawn_rate: 1500,
			time_to_live: 6,
			min_x: 0,
			max_x: 10,
			min_y: 4,
			max_y: 14,
			velocity_y: -500,
			velocity_x: -500,
			velocity_x_random: 1000,
			velocity_y_random: 1000,
			animation: {
				id: "sparkle",
				image: "effects/particles2.png",
				rect: [6,30,12,36],
				frames: 3,
				duration: 2,
				pad: 4,
			},
		},
	},
	{
		id: "dud_bomb",
		prototype: ["throwable_projectile"],
		always_active: true,
		dies_on_inactive: true,
		solid_area: [15,15,20,22],
		solid_dimensions: ["enemy"/*"common"*/],

		properties: {
			attack_damage: "standard_thrown_damage",
			attack_damage_to_player: "if(higher_difficulty, 2,1)",
			left_bound: "480 - screen_w/2 where screen_w = level.camera_position[2]",
			right_bound: "480 + screen_w/2 where screen_w = level.camera_position[2]",
			play_bounce_sound: "if(abs(velocity_y) > 180, sound('metal-slam'+1d2+'.wav', lib.math.constrain(0.0, abs(velocity_y/2000.0), 0.6) ))",
			
			dampen_motion: "def(int pol_x, int pol_y) -> commands [set(velocity_x, if(abs(velocity_x) < 70, 0, velocity_x*0.5 * pol_x)), set(velocity_y, if(abs(velocity_y) < 70, 0, velocity_y*0.5 * pol_y)), play_bounce_sound]",
			test_collision:  "def(custom_obj|null collide_with, string event_name, int pol_x, int pol_y) -> commands if(collide_with is obj hittable, if(collide_with.team = 'neutral', [set(animation, 'on_back'),dampen_motion(pol_x,pol_y)], proto_event('throwable_projectile', event_name)))",
		},
		on_create: "if(time_spat, animation('thrown'),animation('spawn'))",
		on_end_spawn_anim: "animation('thrown')",

		on_die: "spawn('explosion_spark_bright',mid_x,mid_y,facing)",
		on_explode: "[spawn('explosion_big',mid_x,mid_y,facing),sound('BombExplode.wav'),die()]",

		on_process: "[if((mid_x < left_bound + 20) or (mid_x > right_bound -20),remove_object(me))]",
		on_collide_object_thrown: "test_collision(arg.collide_with, 'collide_object_thrown', -1, -1)",
		on_collide_feet: "test_collision(arg.collide_with, 'collide_feet', 1, -1)",
		on_collide_side: "test_collision(arg.collide_with, 'collide_side', -1, 1)",
		
		animation: [
			{
				"@base": true,
				image: "effects/bomb.png",
				pad: 3,
				accel_y: 80,
				frames: 1,
				body_area: [15,10,30,25,"solid"]
			},
			{
				id: "thrown",
				rect: [57,2,81,29],
				body_area: null,
				thrown_area: "all",
				duration: 10,
			},
			{
				id: "spawn",
				rect: [1,2,25,29],
				frames: 3,
				duration: 6,
				thrown_area: "all",
			},
			{
				id: "on_back",
				rect: [57,2,81,29],
				body_area: "all",
				frames: 1,
				duration: 2,
			},
		],
	},
	{
		id: "mine",
		prototype: ["throwable_projectile"],
		always_active: true,
		dies_on_inactive: true,
		solid_area: [15,15,20,22],
		solid_dimensions: ["enemy","common"],

		properties: {
			swallowable: "bool :: false",
			attack_damage: "if(higher_difficulty, 2,1)",
			damage_cooldown: 5,
			team: "'evil'",
			left_bound: "480 - screen_w/2 where screen_w = level.camera_position[2]",
			right_bound: "480 + screen_w/2 where screen_w = level.camera_position[2]",
			
			is_a_shot: "bool :: true",
			goes_through_enemy_shots: "bool :: false",
			on_back_duration: "30",

			
			cease_motion: "[set(velocity_x,0),set(velocity_y,0)]",
		test_collision:  "def(custom_obj|null collide_with, string event_name) -> commands if(collide_with is obj hittable, if(collide_with.team = 'neutral', [set(animation, 'on_back'),cease_motion], proto_event('throwable_projectile', event_name)))",
		},
		on_create: "[animation('spin'), sound('mine-beep.wav')]",
		on_end_on_back_anim: "animation('on_back')",

		on_die: "[	spawn('explosion_big',mid_x,mid_y,facing),sound('BombExplode.wav'),spawn('explosion_spark_bright',mid_x,mid_y,facing),
					spawn('effect_initiator', mid_x, mid_y, 1, [child.set_time_to_live( 2000 ), 
					map( range(15), schedule(value*9, spawn('airplane_boss.shockwave', mid_x + 60 * value, mid_y - 70, 1 ))),
					map( range(15), schedule(value*9, spawn('airplane_boss.shockwave', mid_x - 60 * value, mid_y - 70, 1 )))
					])
					]",

		on_process: "[if((mid_x < left_bound + 20) or (mid_x > right_bound -20),remove_object(me))]",
		on_collide_object_thrown: "test_collision(arg.collide_with, 'collide_object_thrown')",
		on_collide_head: "fire_event('die')",
		on_collide_feet: "[test_collision(arg.collide_with, 'collide_feet'), sound('mine-stick.wav')]",
		
		animation: [
			{
				"@base": true,
				image: "effects/bomb.png",
				pad: 3,
				accel_y: 80,
				//body_area: [15,10,30,25,"solid"]
			},
			{
				id: "spin",
				rect: [1,64,25,91],
				body_area: "all",
				thrown_area: "all",
				frames: 8,
				duration: 2,
				
			},
			{
				id: "detonate",
				rect: [197,33,221,60],
				frames: 1,
				duration: 1,
				thrown_area: "all",
			},
			{
				id: "on_back",
				rect: [1,64,25,91],
				body_area: "all",
				frames: 8,
				duration: 2,
			},
		],
		particle_system: {
			id: "fuse_sparks",
			type: "simple",
			spawn_rate: 1500,
			time_to_live: 6,
			min_x: 0,
			max_x: 10,
			min_y: 4,
			max_y: 14,
			velocity_y: -500,
			velocity_x: -500,
			velocity_x_random: 1000,
			velocity_y_random: 1000,
			animation: {
				id: "sparkle",
				image: "effects/particles2.png",
				rect: [6,30,12,36],
				frames: 3,
				duration: 2,
				pad: 4,
			},
		},
	},
	{
		id: "shockwave",
		prototype: ["shot"],
		always_active: true,
		dies_on_inactive: true,

		properties: {
			swallowable: "bool :: false",
			attack_damage: "if(higher_difficulty, 2,1)",
			damage_cooldown: 50,
			team: "'evil'",
			dies_upon_dealing_damage: "bool :: false",
			teams_which_wont_get_hurt_by_me: "['neutral']",
		},
		on_end_anim: "die()",

		animation: [
			{
				image: "effects/explosion-shockwave.png",
				id: "normal",
				rect: [0,0,70,111],
				frames: 14,
				frames_per_row: 7,
				duration: 2,
				attack_area: [0,50,70,111],
			},
		]
	},
],
}

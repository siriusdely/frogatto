{
id: "moth_boss",
zorder: "@include data/zorder.cfg:in_front_of_parallax_objects",
prototype: ["hittable"],
mass: 5,
friction: 5000,
traction: 1000,
traction_in_air: 1000,
has_feet: false,
hitpoints: 6000,

solid_dimensions: ["enemy","common"],
always_active: true,
on_wingflap: "sound_falloff('moth-boss-wing-flap'+1d5+'.wav',500,1.0)",
properties: {
	attack_damage: "1",
	team: "'evil'",
	hurt_velocity_y: "0",
	hurt_velocity_x: "0",
	
	uninterruptible_animations: "[string] :: ['turn']",
	change_action_cooldown_time: "20",
	timeout: "int :: 1d100+100",
	schedule_next_action: "schedule(timeout,bind_command(def() change_action))",

	movement_speed: "75",
	
	#-------------------------- custom death logic --------------------------#
	death_fx_type: "'moth-boss'",
	taxonomy: "'bug'",
	corpse_object_type: "'${me.type}.corpse'",
	death_fx_ignore_damage_type: "true",
	
	#-------------------------- boss HUD stuff --------------------------#
	add_boss_hp_bar: "map(level.gui, set(gui_vars.bosses, current_bosses + [me]) where current_bosses = [object] <- gui_vars.bosses where gui_vars = object <- value.vars)",
	remove_boss_hp_bar: "map(level.gui, set(gui_vars.bosses, []) where current_bosses = [object] <- gui_vars.bosses where gui_vars = object <- value.vars)",

	
	#-------------------------- general functions --------------------------#
	setup: "[	if(lower_difficulty, set(max_hitpoints, 2400)), add_boss_hp_bar]",	
	
	try_facing: "def(int direction) -> commands if(direction != facing,fire_event('turn'))",
	
	floor_height: "def(int x, int y) -> int|null if(floor_h, floor_h[1], null) where floor_h = _find_floor_standable(x,y,level.player)",

	#-------------------------- attack modes --------------------------#
	enter_mode: "def(string mode, commands command) -> commands [set(_state, mode), command, debug(mode+' '+cycle)]",
	change_action: "commands <- if(cycle - _last_changed_action > change_action_cooldown_time, [set(_last_changed_action, cycle),
					if(_state = 'moving_to_prep_windgust', enter_mode('windgust',wind_gust),
						if(_state != 'moving', enter_mode('moving',choose_target_pos),
							switch(1d3, 
								1, if(should_lay_egg, enter_mode('egg-laying',lay_egg), enter_mode('shooting',prepare_shot) ),
								2, enter_mode('shooting',prepare_shot),
								3, enter_mode('moving_to_prep_windgust',choose_windgust_target_pos)  )))])",

	choose_first_target_pos: "[ set(_target_x, (_x2_bound - _x_bound)/2), set(_target_y, _y2_bound)]",

	choose_target_pos: "[	set(_target_x, min(_x_bound,_x2_bound) + 1d(abs(_x2_bound - _x_bound))), 
									set(_target_y, min(_y_bound,_y2_bound) + 1d(abs(_y2_bound - _y_bound)))]",
	choose_windgust_target_pos: "if(1d2=2,	[	set(_target_x, _x_bound), 
												set(_target_y, _y_bound + (_y2_bound - _y_bound)/2)],
											[	set(_target_x, _x2_bound), 
												set(_target_y, _y_bound + (_y2_bound - _y_bound)/2)])",
	do_wind_gust: "if(not animation in (['flapfast'] + uninterruptible_animations), animation('flapfast'))",
	wind_gust: "[ schedule_next_action,
				spawn('current_generator',midpoint_x,midpoint_y, {facing:1, invisible:false, _x_bound:_x_bound-96, _x2_bound:_x2_bound+96, _y_bound:_y_bound-96, _y2_bound:_y2_bound+512, strength:4000, current_vel_x:if(mid_x > _x_bound + (_x2_bound - _x_bound)/2, -600, 600), current_vel_y:0, always_active:true},
[sound_falloff('moth-boss-wind1.ogg'),schedule(timeout,[stop_sound('moth-boss-wind1.ogg'),die()])]),
			 ]",
	
	seek_position: "		[if(midpoint_x < _target_x, [try_facing(1),add(velocity_x, movement_speed)],[try_facing(-1),add(velocity_x,-movement_speed)] ),
								if(midpoint_y < _target_y, add(velocity_y, movement_speed),add(velocity_y,-movement_speed) ),
								if(is_at_target, change_action)]",
	is_at_target: "if((abs(midpoint_x - _target_x) < 50) and (abs(midpoint_y - _target_y) < 50), 1, 0)",


	should_lay_egg: "can_lay_egg_at_current_pos and (size(filter(level.chars, value.type in ['moth_boss.egg','moth_small'])) < 5)",
	lay_egg: "[sound('moth-boss-lay-egg'+1d5+'.wav'), schedule(timeout/2, spawn('moth_boss.egg',mid_x,mid_y,{time_spat:level.cycle, animation:'on_back'})), schedule_next_action]",
	
	
	
	prepare_shot:	"[spawn('moth_boss.warning', midpoint_x+32*facing, midpoint_y - 60, facing, [set(child.parent, me), set(child.zorder, lib.zorder.get_zorder('in_front_of_everything'))]),
										sound_falloff('moth-boss-shot'+1d7+'.wav'),
										schedule(30, bind_command(def() launch_shot)), 
										schedule_next_action]",
	launch_shot: "[spawn('moth_boss.flash', midpoint_x+16*facing, midpoint_y - 30, 1),
					spawn('moth_boss.shot',midpoint_x+16*facing, midpoint_y - 30, 1,
					[set(child.zorder, lib.zorder.get_zorder('in_front_of_everything')),
					set(child.velocity_x, max(-300,min(300,((1000*(level.player.x-x))/abs(level.player.y-y)) / 2))),
					set(child.velocity_y, max(-300,min(300,((1000*(level.player.y-y))/abs(level.player.x-x)) / 2) ))])]",
					
	can_lay_egg_at_current_pos: "if( floor_height(me.mid_x, me.mid_y), true, false)",
	
#-------------------------- vars --------------------------#
	_last_turned: { type: "int", default: 0, persistent: false },
	_last_changed_action: { type: "int", default: 0, persistent: false },
	_target_x: { type: "int", default: 0, persistent: false },
	_target_y: { type: "int", default: 0, persistent: false },
	_state: { type: "string", default: 'moving', persistent: false },
	

	_x_bound: { type: "int", editor_info: { type: "x", value: "mid_x-200" } },
	_x2_bound: { type: "int", editor_info: { type: "x", value: "mid_x+200" } },
	_y_bound: { type: "int", editor_info: { type: "y", value: "mid_y-200" } },
	_y2_bound: { type: "int", editor_info: { type: "y", value: "mid_y+200" } },
},

on_create: "[setup, choose_first_target_pos]",

#-------------------------- animation switching --------------------------#
on_turn: "if(cycle-_last_turned > 30 and (not animation in ['turn']),[set(_last_turned,cycle),animation('turn')])",
on_leave_turn_anim: "set(facing, -facing)",
on_end_anim: "animation('fly')",

## boss swaps randomly between several states;  egg-laying, flapping-to-make-wind, and diving, with an additional "cruising" mode for moving to a goal
## each state has a goal position; randomly placed in the air.  The bug flies to the position, and enters one of the attack states.
on_process: "[if(animation = 'fly',	switch(_state,
												'moving',						seek_position,
												'egg-laying',					null,
												'moving_to_prep_windgust',		seek_position,
												'windgust',						do_wind_gust,
												null)),
				set(rotate, sin(cycle*7) * 2.0)]",

editor_info: {
	category: "enemies, forest",
},
animation: [
	{
		"@base": true,
		body_area: "all",
		feet_x: 96,
		feet_y: 152,
		pad: 0,
		rect: [0,0,191,191],
	},
	{
		image: "enemies/moth-boss1.png",
		attack_area: "all",
		id: "fly",
		events:"16:wingflap",
		frames: 8,
		frames_per_row: 4,
		duration: 4,
	},
	{
		image: "enemies/moth-boss1.png",
		id: "flapfast",
		events:"4:wingflap",
		frames: 8,
		frames_per_row: 4,
		duration: 1,
	},
	{
		image: "enemies/moth-boss2.png",
		id: "turn",
		frames: 5,
		duration: 5,
	},
	{
		image: "enemies/moth-boss1.png",
		id: "hurt",
		frames: 1,
		duration: 18,
	},
],
object_type: [
	{
		id: "flash",
		zorder: "@include data/zorder.cfg:near_player_foreground_effects",
		activation_border: 500,
		on_end_anim: "die()",
		on_create: "[add_particles('particles'),schedule(4,fire_event('stop_spawning_particles'))]",
		on_stop_spawning_particles: "[set(particle_systems['particles'].spawn_rate, 0),set(alpha,0)]",
		animation: {
			no_remove_alpha_borders: true,
			id: "normal",
			image: "enemies/moth-big.png",
			rect: [191,83,226,118],
			pad: 3,
			frames: 1,
			duration: 70,
			scale: 4,
		},
		particle_system: {
			id: "particles",
			type: "simple",
			spawn_rate: 8000,
			time_to_live: 40,
			min_x: 18,
			max_x: 20,
			min_y: 18,
			max_y: 20,
			velocity_magnitude: 1000,
			velocity_magnitude_random: 500,
			velocity_rotate_random: 360,
			animation: {
				id: "sparkle",
				image: "enemies/moth-big.png",
				x: 191,
				y: 4,
				w: 7,
				h: 7,
				pad: 3,
				frames: 4,
				duration: 10,
			},
		},
	},
	{
		id: "warning",
		zorder: "@include data/zorder.cfg:near_player_foreground_effects",
		activation_border: 500,
		dies_on_inactive: true,
		timer_frequency: 30,
		on_timer: "die()",
		on_end_anim: "animation('normal')",
		animation: {
			no_remove_alpha_borders: true,
			id: "normal",
			image: "enemies/moth-big.png",
			rect: [191,31,213,53],
			pad: 3,
			frames: 4,
			frames_per_row: 2,
			duration: 2,
			scale: 4,
		},
	},
	{
		id: "shot",
		prototype: ["shot"],
		dies_on_inactive: true,
		activation_border: 500,
		is_strict: true,
		affected_by_currents: true,
		object_level_collisions: true,
		properties: {
			attack_damage: "if(higher_difficulty, 4, 2)",
			
			subshot_speed: "hypot(velocity_x,velocity_y)",
			shot_rotation: "atan(velocity_y/velocity_x) - if(velocity_x < 0, 180, 0)",

			subshot_offset: "def(decimal angle_offset) -> {x: decimal, y: decimal} {x: mid_x + offset[0], y: mid_y + offset[1]} where offset = orbit(0, 0, shot_rotation + angle_offset, mid_y-10-y)",
			subshot_vel: "def(decimal angle_offset) -> {x: decimal, y: decimal} {x: subshot_speed * cos(angle_offset + shot_rotation), y: subshot_speed * sin(angle_offset + shot_rotation)}",
			spawn_individual_subshot: "def(decimal angle_offset) -> commands spawn('moth_big.shot', subshot_offset(angle_offset).x, subshot_offset(angle_offset).y, {rotate: angle_offset, velocity_x: subshot_vel(angle_offset).x, velocity_y: subshot_vel(angle_offset).y})",

			fire_subshots: "[sound('laser-raspberry.wav'), spawn_individual_subshot(-40), spawn_individual_subshot(-20), spawn_individual_subshot(0), spawn_individual_subshot(20), spawn_individual_subshot(40)]",

		},
		on_create: "[add_particles('particles'),schedule(50,die())]",
		on_end_anim: "animation('normal')",
		timer_frequency: 4,
		on_timer: "set(rotate, cycle*10)",
		on_die: "[execute(me,fire_subshots), spawn('moth_big.flash', midpoint_x, midpoint_y, facing)]",
		animation: {
			no_remove_alpha_borders: true,
			id: "normal",
			image: "enemies/moth-big.png",
			rect: [191,13,205,27],
			pad: 3,
			frames: 2,
			duration: 2,
			reverse: true,
			body_area: "all",
			attack_area: "all",
			scale: 4,
		},
		particle_system: {
			id: "particles",
			type: "simple",
			spawn_rate: 500,
			time_to_live: 40,
			min_x: 0,
			max_x: 20,
			min_y: 0,
			max_y: 20,
			velocity_magnitude: 100,
			velocity_magnitude_random: 100,
			velocity_rotate_random: 360,
			animation: {
				id: "sparkle",
				image: "enemies/moth-big.png",
				x: 191,
				y: 4,
				w: 7,
				h: 7,
				pad: 3,
				frames: 4,
				duration: 10,
			},
		},
	},
	{
		id: "egg",
		prototype: ["throwable_projectile"],
		properties: {
			is_player_ammo: "true",
		},
		solid_area: [16,16,31,31],

		on_process_on_back: "[proto_event('throwable_projectile','process_on_back'), if(_on_back_count = (on_back_duration*3)/4, sound_falloff('egg-hatch-squishy.wav'))]",

		on_return_to_normal: "[sound_falloff('egg-hatch-crunch'+1d3+'.wav'),spawn('moth_small',mid_x,y,{facing:facing, _x_bound:mid_x-200, _x2_bound:mid_x+200, _desired_height:y-150-1d100}, [set(child.always_active,true)]),
								die()]",
		animation: [
		{
			"@base": true,
			image: "enemies/moth-boss-egg.png",
			rect: [0,0,47,47],
			accel_y: 80,
			frames: 1,
			duration: 10,
		},
		{
			id: "normal",
			body_area: "all",
		},
		{
			id: "thrown",
			body_area: null,
			thrown_area: "all",
		},
		{
			id: "on_back",
			body_area: "all",
			thrown_area: null,
		}],
	},
	{
		id: "corpse",
		always_active: true,
		prototype: ["standard_values"],

		on_create: "[set(level.focus, [me]),sinusoidal_transition({period: 200, _init_theta:1.0, _length_theta:-1.0, addend:0, coefficient:255, obj:me, aspect:'alpha'})]",
		
		on_end_anim: "[set(level.focus, []), if(controller, fire_event(controller, 'postfight_outro')) where controller = get_object(level,'begin_fight_controller'), die()]",
		animation: {
			image: "enemies/moth-boss1.png",
			pad: 3,
			feet_x: 96,
			feet_y: 152,
			id: "fly",
			rect: [0,0,191,191],
			accel_y: 1,
			duration: 200,
		},
	},
	{
		id: "perched",
		always_active: true,
		on_end_anim: "animation(animation)",

		animation: {
			image: "enemies/moth-boss3.png",
			pad: 0,
			feet_x: 96,
			feet_y: 152,
			id: "fly",
			rect: [0,0,191,191],
			duration: 10,
			frames: 3,
			reverse: true,
		},
	},
],
}

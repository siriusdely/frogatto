{
id: "mushroom_captosser_blue",
prototype: ["ant"],
editor_info: {
	category: "enemies, forest",
},

properties: {
	points_value: "4",
	taxonomy: "'mushroom'",
	counter_value: "4+1d2",
	should_throw_cap:  "(1d2=2 and  (sign(level.player.mid_x - me.mid_x) = facing))",
	throw_cap: "commands :: spawn(type+'.thrown_cap',mid_x+20*facing, mid_y, facing, [set(child.velocity_x, 900*facing+1d800*facing),set(child.velocity_y, -200-1d500)])",
	physical_size: "32",
	material_sound: "'fungus'",
	
},

hitpoints: 200,

on_end_anim: "[if(animation in ['stand', 'walk', 'turn', 'hurt', 'spring'], if(should_throw_cap,animation('half_turn_to_center'),animation('walk')))]",

on_end_half_turn_to_center_anim: "animation('attack')",
on_end_attack_anim: "animation('attack_recover')",
on_end_attack_recover_anim: "animation('half_turn_from_center')",
on_end_half_turn_from_center_anim: "animation('walk')",
on_footfall: "[sound('mushroom-footstep'+1d11+'.wav', volume)] where volume = lib.math.constrain(0, 300.0/lib.math.length(self, level.player),1.0)",
on_regenerate:"[sound('Mushroom-Pop-Top-Struggle'+1d4+'.wav', volume)] where volume = lib.math.constrain(0, 300.0/lib.math.length(self, level.player),1.0)",
on_rip_cap:"[sound('Mushroom-Rip'+1d2+'.wav', volume)] where volume = lib.math.constrain(0, 300.0/lib.math.length(self, level.player),1.0)",
on_throw_cap: "throw_cap",
on_bounced_on: "[sound('bug-bounce.wav'),null #animation('spring')#]",

platform_area: [8,17,23,32],
solid_area: [8,17,23,32],

on_timer: "[set(rotate, slope_standing_on/3), if(is_standing and animation in ['walk','run'] and (should_turn_away_from_cliff or should_turn_towards_player),turn_around,null)]",

animation: [

	{
		"@base": true,
		image: "enemies/mushroom-captosser-blue.png",
		pad: 2,
		accel_x: 0,
		accel_y: 80,
		body_area: "all",
		attack_area: "all",
	},
	{
		id: "stand",
		rect: [1,387,31,423],
		frames: 1,
		duration: 6,
	},
	{
		id: "hurt",
		rect: [1,387,31,423],
		frames: 1,
		duration: 15,
	},
	{
		id: "turn",
		rect: [67,387,97,423],
		frames: 5,
		duration: 4,
	},
	{
		id: "spring",
		rect: [1,387,31,423],
		frames: 1,
		duration: 6,
	},
	{
		id: "walk",
		rect: [1,426,31,462],
		frames: 8,
		accel_x: 220,
		duration: 5,
		events: "15:35:footfall",
	},
	{
		id: "attack",
		rect: [1,1,88,37],
		frames: 35,
		frames_per_row: 5,
		events: "35:throw_cap, 3:rip_cap",
		duration: 2,
		solid_area: [35,17,50,32],  #38, 32 vs 11,32 = +27 +0  [8,17,23,32]
		
	},
	{
		id: "attack_recover",
		rect: [1,348,31,384],
		frames: 12,
		duration: 5,
		events: "0:regenerate",
	},
	{
		id: "half_turn_from_center",
		rect: [133,387,163,423],
		frames: 3,
		duration: 4,
	},
	{
		id: "half_turn_to_center",
		rect: [133,387,163,423],
		frames: 3,
		duration: 4,
		play_backwards: true,
	},
],
object_type: [{
	id: "thrown",
	prototype: ["throwable_small_enemy"],
	animation: [
		{
			image: "enemies/ant-flying-black.png",
			id: "thrown",
			thrown_area: "all",
			duration: 60,
			rect: [31,33,55,60],
			frames: 1,
			body_area: null,
		},
		{
			image: "enemies/ant-flying-black.png",
			id: "on_back",
			rect: [31,33,55,60],
			frames: 2,
			duration: 5,
			body_area: "all",
		},
	],
	},
	{
		id: "thrown_cap",
		dies_on_inactive: true,
		timer_frequency: 450,
		friction: 1000,
		object_level_collisions: true,
		solid_dimensions: ["player"],
		prototype: ["shot"],
		properties: {
			attack_damage: "if(higher_difficulty,3,2)",
			animation_suffix: "lib.math.round(sin(cycle*20)*1.0+1.0)+1",  //smoothly oscillate between 1 -> 3
		},
		on_end_anim: "animation(animation)",
		on_collide_level: "if(cycle > 30, die())",
		on_die: "spawn('effect_initiator',mid_x,mid_y,facing, child.death_effects('medium'))",
		on_timer: "die()",
		on_create: "set(accel_y,0)",
		on_process: "[ set(rotate, sin(cycle*8) * 20.0),
						if(accel_y < 80 and (cycle%2=0), add(accel_y,1)),
					set(animation, 'tilt'+animation_suffix), set(time_in_animation, time_in_animation+1)]", 
		animation: [
			{
				"@base": true,
				image: "enemies/mushroom-captosser-blue.png",
				attack_area: "all",
				pad: 2,
				frames: 6,
				duration: 2,
				no_remove_alpha_borders: true,
			},
			{
				id: "tilt1",
				rect: [1,283,27,297],
			},
			{
				id: "tilt2",
				rect: [1,300,27,314],
			},
			{
				id: "tilt3",
				rect: [1,317,27,331],
			},
		],
	},
	]
}
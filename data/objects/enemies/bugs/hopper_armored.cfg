{
id: "hopper_armored",
prototype: ["ant"],
solid_area: [5,7,28,23],
activation_border: 500,
hitpoints: 200,
properties: {

	points_value: "13",
	/*---------------- overriding hittable behavior ----------------*/
	armor: "if(animation='turtled',500,0)",
	handle_special_damage_response: "def(obj hittable|null collide_with) -> commands if(armor > 0, sound('hopper-block1.wav'))",
	hurt_velocity_y: "0",
	hurt_velocity_x: "0",
	handle_base_damage_reductions: "def(int amount) -> int if(animation = 'cooloff', amount, amount/10)",
	cause_hurt_anim: "def(obj hittable|null collide_with) -> commands  execute(me, if(animation in ['cooloff', 'cooloff_hurt'],set(me.animation, 'cooloff_hurt'),set(me.animation, 'hurt')))",

	/*---------------- general properties ----------------*/
	attack_damage: "if(higher_difficulty,2,1)",
	shot_speed: 900,
	jump_power: "-1000 - 1d1500",
	to_player: "mid_x-level.player.mid_x",
	should_hop: "(abs(_last_hopped -level.cycle) > 200 and (not should_walk) and (not should_turn) and (not being_stood_on))",
	should_walk: "(abs(to_player) > 300 and sign(to_player) = -facing)",
	should_turn: "sign(to_player) = facing",
	turn_around: "[facing(-facing),animation('turn')]",
	should_shoot: "(abs(velocity_y) < 40 and past_shooting_interval)",
	past_shooting_interval: "(abs(level.cycle - _last_fired) > 60) and animation = 'hop'",
	needs_to_recover: "(abs(level.cycle - _last_fired) < 120)",
	
	player_is_facing_us: "(sign(to_player) = level.player.facing)",

	shoot_plasma: "[set(_last_fired, level.cycle),
			add(velocity_x, -70*facing), add(velocity_y, -800),
			sound('fireball-soft'+1d5+'.wav'),
			spawn('hopper_armored.shot',mid_x+20*facing,mid_y,1,[set(child.velocity_x,xVel),set(child.velocity_y,yVel),set(child.rotate,lib.math.angle(me,level.player))]),
			spawn('hopper_armored.shot_bloom',mid_x,mid_y,facing,[set(child.zorder,me.zorder+1)])
			] 
			where xVel = (shot_speed*cos(lib.math.angle(me,level.player)))
			where yVel = (shot_speed*sin(lib.math.angle(me,level.player)))",
			
	control_brightness: "if((past_shooting_interval), add(brightness,50),set(brightness,255))",
	
	//this is a horrible, performance-killing hack, because we don't have proper support:
	being_stood_on: "(size(filter(level.chars, me = value.standing_on)) > 0)",
	
	
	play_jump_sound: "if(should_play_sound, [sound('backflip-whirl-short.wav'),set(_last_played_sound,level.cycle)])
				where should_play_sound = [if(level.cycle - _last_played_sound > 100,1,0)]",
	play_jump_sound_at_apex: "[if(sign(_prev_vel_y) = -1 and sign(velocity_y) = 1, play_jump_sound),  set(_prev_vel_y, velocity_y)]",

	physical_size: 32,

	_last_played_sound: { type: "int", default: 0 },
	_prev_vel_y: { type: "int", default: 0 },
	_last_fired: { type: "int", default: 0 },
	_last_hopped: { type: "int", default: 0 },
	_cool_off: { type: "int", default: 0 },
},

on_hop: "[
			play_jump_sound,
			set(_last_hopped, level.cycle),
			animation('hop'),
			set(velocity_y, jump_power),
			]",
on_littlehop: "[
			set(_last_hopped, level.cycle),
			animation('littlehop'),
			set(velocity_y, jump_power/4.0),
			]",
			
on_end_hurt_anim: "null",
on_end_anim: "[switch(animation,
							'cooloff',   if(_cool_off > 3, [set(_cool_off, 0),fire_event('littlehop')],[animation('cooloff'),add(_cool_off,1)]),
							'walk',   if(should_walk,animation('walk'),animation('stand')),
							'hop', if(not is_standing, animation('hop'), animation('stand')),
							'stand', if(should_turn, turn_around, if(should_walk, animation('walk'), if(should_hop, fire_event('hop'), animation('stand')))),
							'hurt', if(is_standing, animation('turtled'), animation('stand')),
							'turtled', if(is_standing and (player_is_facing_us or abs(to_player) < 250), animation('turtled'), animation('stand')),
							animation('stand'))
							
							,control_brightness]",

on_bounced_on: "[if(animation in ['turtled'],sound('hopper-block1.wav'),sound('bug-bounce.wav')),if(not animation in ['cooloff','turtled'],animation('spring'))]",
on_process_hop: "[if(should_shoot, shoot_plasma), control_brightness]",
on_collide_feet: "if(needs_to_recover, [animation('cooloff'),sound('Hopper-Clumsy-Thump'+1d3+'.wav')],animation('stand'))",
on_collide_head: "[if(past_shooting_interval, shoot_plasma),set(velocity_y,velocity_y/2)]",
on_enter_walk_anim: "",
on_process_stand: "",
on_timer: "",
editor_info: {
	category: "enemies, cave",

},
animation: [
	{
		"@base": true,
		image: "enemies/hopper.png",
		pad: 3,
		accel_x: 0,
		accel_y: 80,
		body_area: "all",
		rotate_on_slope: true,
	},
	{
		id: "stand",   #blink_variant
		rect: [1,128,32,155],
		attack_area: [26,18,35,28],
		duration: 5,
		frames: 3,
		reverse: true,
	},
	{
		id: "stand",
		rect: [1,32,32,59],
		attack_area: [26,18,35,28],
		duration: 5,
		frames: 3,
		reverse: true,
	},
	{
		id: "cooloff",
		rect: [143,159,174,186],
		duration: 5,
		frames_per_row: 1,
		frames: 2,
		reverse: true,
	},
	{
		id: "cooloff_hurt",
		rect: [108,159,139,186],
		frames: 1,
		duration: 18,
	},
	{
		id: "hop",
		rect: [1,66,32,93],
		frames_per_row: 4,
		frames: 8,
		duration: 4,
		attack_area: [26,18,35,28],
	},
	{
		id: "littlehop",
		rect: [1,66,32,93],
		frames_per_row: 4,
		frames: 8,
		duration: 2,
		attack_area: [26,18,35,28],
	},
	{
		accel_x: 450,
		id: "walk",
		rect: [1,1,32,28],
		attack_area: [26,18,35,28],
		frames: 4,
		duration: 2,
	},
	{
		id: "spring",
		rect: [141,1,172,28],
		frames: 1,
		duration: 5,
	},
	{
		id: "turn",
		rect: [143,35,174,62],
		frames: 3,
		duration: 5,
		frames_per_row: 1,
		attack_area: [11,18,35,28],
	},
	{
		id: "hurt",
		rect: [143,128,174,155],
		frames: 1,
		duration: 18,
	},
	{
		id: "turtled",
		rect: [108,190,139,217],
		frames: 1,
		duration: 50,
	},
],
object_type: [
	{
		id: "shot_bloom",
		on_end_anim: "die()",
		animation: {
			id: "normal",
			image: "enemies/hopper.png",
			pad: 3,
			duration: 3,
			rect: [178,1,219,42],
			frames: 5,
			frames_per_row: 1,
		},
	},
	{
		id: "shot_impact",
		on_end_anim: "die()",
		animation: {
			no_remove_alpha_borders: true,
			image: "enemies/hopper.png",
			id: "normal",
			duration: 2,
			rect: [3,184,34,215],
			frames: 6,
			pad: 3,
			frames_per_row: 3,
			attack_area: "all",
		},
	},
	{
		id: "shot",
		prototype: ["shot"],
		traction_in_air: 1000,
		timer_frequency: 200,
		on_timer: "die()",
		on_end_anim: "animation('normal')",
		on_collide_level: "if(cycle > 30,die())",
		on_die: "spawn('hopper_armored.shot_impact', mid_x,mid_y,1,[set(child.rotate,rotate)])",
		activation_border: 500,
		on_process: "set(lights, [circle_light(me, wave(cycle*100+1d20)/50)])", 
		properties: {
			attack_damage: "if(higher_difficulty,3,1)",
		},
		animation: {
			no_remove_alpha_borders: true,
			image: "enemies/hopper.png",
			id: "normal",
			duration: 2,
			rect: [223,1,254,32],
			frames: 5,
			pad: 3,
			frames_per_row: 1,
			attack_area: "all",
		},
	},
],
}

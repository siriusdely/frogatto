{
id: "nene_playable",
prototype: ["player_controlled_platformer_character"],
hitpoints: 4,
feet_width: 1,
mass: 6,
springiness: 100,
friction: 2000,
solid_area: [15,10,29,36],
functions: "
	  #function which returns true if the object is in an animation that
	   requires Nene be on the ground#	
	  def animation_requires_standing(obj)
	    obj.animation in ['stand', 'stand_up_slope', 'stand_down_slope', 'walk', 'lookup', 'crouch', 'enter_crouch', 'leave_crouch', 'turn', 'skid'];
	  def set_facing(object_type obj, facing) if(obj.facing != facing and (not (obj.animation in ['interact'])),
	           [facing(facing), if(obj.is_standing, animation('turn'))]);

	  def stand(obj)
	   if(abs(obj.velocity_x) > 240 and (not obj.animation in ['walk']), animation('skid'),
	     if(abs(obj.slope_standing_on) < 20, animation('stand'),
		   if(obj.slope_standing_on*obj.facing > 0, animation('stand_down_slope'),
			                                animation('stand_up_slope'))));


	  #make Nene walk. anim can be either 'walk'. Does checking
	   to make sure Nene is in a state where she can walk.
	   Will make Nene 'glide' if in mid air.#
	  def walk(object_type obj, dir, anim)
	    if(obj.is_standing and (not (obj.animation in ['walk', 'walk_back', 'jump', 'turn', 'crouch', 'enter_crouch', 'interact'])),
		   [animation(anim)],
	       #Nene is in the air, so make her glide.#
		   if(not obj.is_standing, set(obj.velocity_x, obj.velocity_x + obj.jump_glide*dir)));

	  #Function to attempt to make Nene crouch; does checking to make
	   sure she's in a state that allows entering a crouch.#
	  def crouch(obj)
	  	if(((not obj.animation in ['crouch', 'enter_crouch', 'interact'] ) and obj.is_standing), animation('enter_crouch'));
	  
	  #Function to make Nene attack. Does checking and chooses the
	   appropriate type of attack animation, if any.#
	  def attack(object_type obj, charge_cycles)
		[];

	  #Function to enter swimming frames.#
	  def swim(obj,dirx,diry)
	    if(dirx or diry,
	    [if(obj.underwater and (not (obj.animation in ['swim_side','swim_down','swim_up'])), [if(dirx,animation('swim_side')),if(diry < 0,animation('swim_up')),if(diry > 0,animation('swim_down'))]), if(obj.underwater,
		[set(velocity_x, obj.velocity_x + obj.swim_accel*dirx),
		 set(velocity_y, obj.velocity_y + obj.swim_accel*diry)
		])]);
	   
		   

	  # Stolen from old can_slide, not sure if this is wanted.#
	  def can_bounce(obj)
        solid(obj.level, if(obj.facing > 0, obj.solid_rect.x2+1, obj.solid_rect.x-1), obj.solid_rect.y) and
        solid(obj.level, if(obj.facing > 0, obj.solid_rect.x2+1, obj.solid_rect.x-1), obj.solid_rect.y2) and
		obj.velocity_y < 300 and
		abs(obj.velocity_x) > 200;

	   def swallowing_object(object_type frog)
	     if(frog.attached_objects, map(frog.attached_objects, 'obj',
	      if(abs(obj.midpoint_x - context.frog.midpoint_x) < 4, set(attached_objects, []), set(obj.midpoint_x, obj.midpoint_x + if(obj.midpoint_x > context.frog.midpoint_x, -4, 4)))
		  ));

	  1",
properties: {
	team: "'player'",
	is_player_body_part: true,
},
vars: {
	jump_power: 1000,
	jump_boost: 70,
	jump_glide: 40,
	glide_limiter: 100,
	swim_accel: 140,
	unlocked_items: ["heart_object","mana_cube","mana_cube"],
	tank_fuel: 1000,
	name: "Nene",
},
consts: {
	tank_size: 1000,
	tank_loss: 250,
	tank_gain: 2,
},
on_create: "[animation('stand')]",

on_enter_level: "[animation('stand')]",

on_die: "[spawn('die_cloud', midpoint_x, midpoint_y, facing)]",

on_end_ctrl_up: "if((animation in ['enter_lookup', 'lookup']), stand(self))",

on_process: "[
	    if(not ctrl_attack, set(vars.tank_fuel, min(consts.tank_size, vars.tank_fuel + consts.tank_gain))),
		if(ctrl_attack and (cycle%4 = 0) and vars.tank_fuel > 0, [set(vars.tank_fuel, vars.tank_fuel - consts.tank_loss/2), spawn('nene_flameshot',midpoint_x + 30*facing,midpoint_y+if(animation = 'lookup', -15, 20),facing, [set(velocity_x, velocity_x), if(animation = 'lookup', set(velocity_y, -500))])]),
	    if((not is_standing) and animation_requires_standing(self), [animation('fall')]),
	    if(ctrl_up and (animation in ['stand','stand_up_slope','stand_down_slope']), animation('enter_lookup')),
	    if((animation in ['enter_lookup', 'lookup']) and (not ctrl_up), stand(self)),
			if(underwater,[
				swim(self, ctrl_right - ctrl_left, ctrl_down - ctrl_up),
			   if((not (ctrl_left or ctrl_right or ctrl_up or ctrl_down)) and (animation in ['swim_side','swim_up','swim_down']),
				   float(self)),
                   if(ctrl_left != ctrl_right, set(facing, ctrl_right - ctrl_left))],
			   [[if(ctrl_right, 
					if(ctrl_attack,
						if(facing=1,
							walk(self, 1, 'walk'), 
						    walk(self, 1, 'walk_back')),
						[set_facing(self, 1),
						 walk(self, 1, 'walk')]
					)
				),
			   ],
			   [if(ctrl_left, 
					if(ctrl_attack,
						if(facing=1,
							walk(self, -1, 'walk_back'), 
						    walk(self, -1, 'walk')),
						[set_facing(self, -1),
						 walk(self, -1, 'walk')]
					)
				),
			   ],
			   if(ctrl_down, crouch(self)),
				   if((not (ctrl_left or ctrl_right)) and (animation in ['walk', 'walk_back']),
					   stand(self))])]",
					   
on_process_fall: "if(ctrl_jump, animation('begin_glide'), proto_event('playable_unstable', 'process_fall'))",
on_process_glide: "if(velocity_y > glide_limiter, set(velocity_y, glide_limiter))",
on_process_lookup: "[set(tmp.lookup_time, tmp.lookup_time+1), if(tmp.lookup_time = 50, set(vertical_look, -200))]",
on_process_crouch: "[set(tmp.lookdown_time, tmp.lookdown_time+1), if(tmp.lookdown_time = 50, set(vertical_look, 200))]",
on_leave_lookup_anim: "[set(tmp.lookup_time, 0), set(vertical_look, 0)]",
on_leave_crouch_anim: "[set(tmp.lookdown_time, 0), set(vertical_look, 0)]",

on_enter_water: "[float(self)]",
on_exit_water: "[animation('fall'), if(velocity_y < 0, set(velocity_y, velocity_y*3))]",
on_end_enter_crouch_anim: "animation('crouch')",
on_end_crouch_anim: "if(ctrl_down, animation('crouch'), animation('leave_crouch'))",
on_end_leave_crouch_anim: "stand(self)",
on_enter_skid_anim: "if(abs(velocity_x) > 300, spawn('dust_cloud_skid', midpoint_x + 36*facing, y2 - 10, facing))",
on_end_turn_anim: "stand(self)",
on_end_jump_anim: "if(ctrl_jump,animation('begin_glide'),animation('fall'))",
on_end_begin_glide_anim: "if(ctrl_jump,animation('glide'),animation('fall'))",
on_end_glide_anim: "if(ctrl_jump,animation('glide'),animation('fall'))",
on_end_walk_anim: "animation('walk')",
on_end_walk_back_anim: "stand(self)",
on_end_stand_anim: "stand(self)",
on_end_skid_anim: "stand(self)",
on_end_stand_up_slope_anim: "stand(self)",
on_end_stand_down_slope_anim: "stand(self)",

on_ctrl_tongue: "
	if(not underwater,
		if(mana.get-consts.tank_loss >= 0,
			[
			if(not animation in ['crouch', 'enter_crouch', 'leave_crouch'],
				if(not animation in ['lookup', 'enter_lookup'],
					[
						spawn('blue_ball',midpoint_x+(50*facing),midpoint_y+20,1,[set(velocity_x, 1000*facing+velocity_x), set(velocity_y, velocity_y)]),
						//mana.set(mana.get - consts.tank_loss),
						set(velocity_x, velocity_x - 1000*facing)],
					[
						spawn('blue_ball',midpoint_x+(40*facing),midpoint_y-20,1,[set(velocity_x, 800*facing+velocity_x), set(velocity_y, -1600+velocity_y)]),
						//mana.set(mana.get - consts.tank_loss),
						set(velocity_x, velocity_x - 800*facing),
						set(velocity_y, velocity_y + 1600)]),
				[
					spawn('blue_ball',midpoint_x+(50*facing),midpoint_y+25,1,[set(velocity_x, 1500*facing+velocity_x), set(velocity_y, velocity_y)]),
					mana.set(mana.get - consts.tank_loss),
					set(velocity_x, velocity_x - 25*facing)]),
				sound('chuff.ogg')],
			sound('')),
		spawn('water_bubble',midpoint_x+(50*facing),midpoint_y+20,1))",
			
on_end_energyshot_anim: "stand(self)",
on_end_up_energyshot_anim: "stand(self)",
on_end_attack_anim: "[
		 if(('fat' in variations), animation('swallow')),
	                               stand(self)]",
on_leave_attack_anim: "set(attached_objects, [])",
on_leave_up_attack_anim: "set(attached_objects, [])",
on_leave_jump_attack_anim: "set(attached_objects, [])",
on_end_swallow_anim: "stand(self)",
on_end_enter_lookup_anim: "animation('lookup')",
on_end_lookup_anim: "animation('lookup')",
on_end_swim_side_idle_anim: "float(self)",
on_end_swim_side_anim: "if(underwater,animation('swim_side'),stand(self))",
on_end_swim_up_anim: "if(underwater,animation('swim_up'),stand(self))",
on_end_swim_down_anim: "if(underwater,animation('swim_down'),stand(self))",
on_collide_feet: "if(collide_with and collide_with.springiness > 0, [set(velocity_y, -((velocity_y*collide_with.springiness)/100 + collide_with.spring_amount)), fire_event(collide_with, 'bounced_on')],
	    [set(velocity_x, velocity_x - velocity_x/4), stand(self)])",
on_collide_head: "[if(animation = 'jump', animation('fall')), if(velocity_y < 0, set(velocity_y, 0))]",
on_collide: "[if((animation in ['jump', 'fall', 'glide', 'begin_glide']) and can_bounce(self), [set(velocity_x, -velocity_x), set_facing(self, -facing)], set(velocity_x, 0))]",
on_collide_object_grab: "if(collide_with_area = 'body',
	                        [remove_object(collide_with), set(attached_objects, [collide_with]), set(tmp.swallowed, collide_with), set(variations, 'fat')])",
on_collide_damage: "if((not is_invincible(self)), [add(hitpoints, -max(1, surface_damage)), animation('hurt'), set(tmp.time_last_hit, level.cycle)])",
on_end_emote_geez_anim: "animation('stand')",
on_end_emote_oh_anim: "animation('stand')",
on_end_emote_impatient_anim: "animation('stand')",
on_end_emote_raisedfinger_anim: "animation('stand')",
on_end_emote_confused_anim: "animation('stand')",
on_end_emote_talk_anim: "animation('stand')",
on_end_emote_nod_anim: "animation('stand')",
editor_info: {
	category: "player",
},
animation: [
	{
		"@base": true,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "stand",
		rect: [2,2,43,39],
		duplicates: 6,
		frames: 3,
		duration: 6,
		reverse: true,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "emote_geez",
		rect: [2,2,43,39],
		duplicates: 6,
		frames: 3,
		duration: 6,
		reverse: true,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "emote_oh",
		rect: [2,2,43,39],
		duplicates: 6,
		frames: 3,
		duration: 6,
		reverse: true,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "emote_impatient",
		rect: [2,2,43,39],
		duplicates: 6,
		frames: 3,
		duration: 6,
		reverse: true,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "emote_raisedfinger",
		rect: [2,2,43,39],
		duplicates: 6,
		frames: 3,
		duration: 6,
		reverse: true,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "emote_confused",
		rect: [2,2,43,39],
		duplicates: 6,
		frames: 3,
		duration: 6,
		reverse: true,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "emote_talk",
		rect: [2,2,43,39],
		duplicates: 6,
		frames: 3,
		duration: 6,
		reverse: true,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "emote_nod",
		rect: [2,2,43,39],
		duplicates: 6,
		frames: 3,
		duration: 6,
		reverse: true,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 1600,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "walk",
		rect: [2,43,52,87],
		solid_area: [15,10,29,42],
		frames: 3,
		reverse: true,
		duration: 5,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "stand",

		#blink variant
		rect: [137,2,178,39],
		frames: 3,
		duration: 6,
		reverse: true,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "stand_up_slope",
		rect: [2,2,43,39],
		duplicates: 6,
		frames: 3,
		duration: 6,
		reverse: true,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "stand_down_slope",
		rect: [2,2,43,39],
		duplicates: 6,
		frames: 3,
		duration: 6,
		reverse: true,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "lookup",
		rect: [318,43,359,80],
		frames: 1,
		duration: 3,
		reverse: true,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "enter_lookup",
		rect: [318,43,359,80],
		frames: 1,
		duration: 3,
		reverse: true,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "crouch",
		rect: [363,2,412,39],
		frames: 1,
		duration: 1,
		rotate_on_slope: true,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "enter_crouch",
		rect: [363,2,412,39],
		frames: 1,
		duration: 3,
		rotate_on_slope: true,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "leave_crouch",
		rect: [363,2,412,39],
		frames: 1,
		duration: 3,
		play_backwards: true,
		rotate_on_slope: true,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 1000,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "roll",
		sound: "roll.ogg",
		velocity_x: 500,
		x: 107,
		y: 197,
		w: 32,
		h: 33,
		frames: 11,
		duration: 3,
		scale: 2,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: -1600,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "walk_back",
		rect: [2,43,52,87],
		solid_area: [15,10,29,42],
		frames: 3,
		reverse: false,
		duration: 5,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "skid",
		rect: [2,91,50,131],
		frames: 1,
		duration: 10,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "turn",
		rect: [318,2,359,39],
		frames: 1,
		duration: 5,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "jump",
		sound: "FrogJump1.ogg,FrogJump2.ogg",
		rect: [2,135,48,176],
		frames: 4,
		duration: 6,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "begin_glide",
		rect: [2,180,48,231],
		frames: 3,
		duration: 4,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "glide",
		rect: [2,235,48,286],
		frames: 8,
		duration: 2,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "fall",
		rect: [202,135,248,176],
		y: 38,
		w: 32,
		h: 48,
		duration: 12,
		frames: 1,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: [6,11,24,36],
		id: "attack",
		sound: "punch.ogg",
		events: "3:side_attack_fx_one,6:side_attack_fx_two,9:side_attack_fx_three,8:side_attack_contact",
		x: 2,
		y: 269,
		w: 49,
		h: 37,
		grab_area: [32,24,49,34],
		frames: 8,
		duration: 3,
		reverse: false,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "up_attack",
		sound: "punch.ogg",
		events: "6:up_attack_contact",
		x: 2,
		y: 351,
		w: 41,
		h: 44,
		attack_area: [16,0,28,10],
		frames: 6,
		duration: 2,
		reverse: false,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 3200,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "run_attack",
		events: "6:7:8:9:10:11:run_attack_contact",
		sound: "slash.ogg",
		x: 2,
		y: 403,
		w: 68,
		h: 29,
		attack_area: [20,14,70,40],
		frames: 5,
		duration: 3,
		reverse: false,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: [6,11,24,36],
		id: "jump_attack",
		events: "3:side_attack_fx_one,6:side_attack_fx_two,9:side_attack_fx_three,8:side_attack_contact",
		sound: "kick.ogg",
		x: 2,
		y: 310,
		w: 49,
		h: 37,
		grab_area: [28,19,43,31],
		frames: 9,
		duration: 2,
		reverse: false,
	},
	{
		image: "characters/nene-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "hurt",
		sound: "TakeDamage.wav",
		velocity_x: -1000,
		velocity_y: -1000,
		rect: [273,2,314,39],
		frames: 1,
		duration: 18,
		events: "1:6:12:18:hurtflicker",
	},
	{
		image: "characters/frogatto-spritesheet1.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "interact",
		collide_x: 10,
		collide_y: 6,
		collide_w: 15,
		collide_h: 16,
		feet_x: 16,
		feet_y: 32,
		x: 72,
		y: 161,
		w: 32,
		h: 32,
		frames: 4,
		duration: 4,
		scale: 2,
		events: "15:interacting",
	},
	{
		image: "characters/frogatto-spritesheet2.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "push",
		x: 413,
		y: 49,
		w: 47,
		h: 48,
		frames: 6,
		frames_per_row: 2,
		duration: 5,
	},
	{
		image: "characters/frogatto-spritesheet2.png",
		accel_x: 0,
		accel_y: 0,
		pad: 3,
		body_area: "all",
		id: "swim_side_idle",
		x: 3,
		y: 85,
		w: 39,
		h: 36,
		frames: 6,
		frames_per_row: 3,
		duration: 6,
		reverse: true,
	},
	{
		image: "characters/frogatto-spritesheet2.png",
		accel_x: 0,
		accel_y: 0,
		pad: 3,
		body_area: "all",
		id: "swim_down_idle",
		x: 129,
		y: 85,
		w: 39,
		h: 36,
		frames: 6,
		frames_per_row: 3,
		duration: 6,
		reverse: true,
	},
	{
		image: "characters/frogatto-spritesheet2.png",
		accel_x: 0,
		accel_y: 0,
		pad: 3,
		body_area: "all",
		id: "swim_up_idle",
		x: 255,
		y: 85,
		w: 39,
		h: 36,
		frames: 6,
		frames_per_row: 3,
		duration: 6,
		reverse: true,
	},
	{
		image: "characters/frogatto-spritesheet2.png",
		accel_x: 0,
		accel_y: 5,
		pad: 3,
		body_area: "all",
		id: "swim_side",
		sound: "Paddle4.ogg,Paddle5.ogg,Paddle6.ogg,Paddle7.ogg",
		x: 3,
		y: 163,
		w: 39,
		h: 36,
		frames: 3,
		duration: 6,
	},
	{
		image: "characters/frogatto-spritesheet2.png",
		accel_x: 0,
		accel_y: 0,
		pad: 3,
		body_area: "all",
		id: "swim_down",
		sound: "Paddle4.ogg,Paddle5.ogg,Paddle6.ogg,Paddle7.ogg",
		x: 129,
		y: 163,
		w: 39,
		h: 36,
		frames: 3,
		duration: 6,
	},
	{
		image: "characters/frogatto-spritesheet2.png",
		accel_x: 0,
		accel_y: 0,
		pad: 3,
		body_area: "all",
		id: "swim_up",
		sound: "Paddle4.ogg,Paddle5.ogg,Paddle6.ogg,Paddle7.ogg",
		x: 255,
		y: 163,
		w: 39,
		h: 36,
		frames: 3,
		duration: 6,
	},
	{
		image: "characters/frogatto-spritesheet3.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "emote_confused",
		rect: [1,40,32,72],
		frames: 14,
		frames_per_row: 7,
		duration: 6,
	},
	{
		image: "characters/frogatto-spritesheet3.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "emote_impatient",
		rect: [286,1,317,33],
		frames: 16,
		frames_per_row: 4,
		duration: 6,
	},
	{
		image: "characters/frogatto-spritesheet3.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "emote_raisedfinger",
		rect: [1,116,32,148],
		frames: 14,
		frames_per_row: 7,
		duration: 6,
	},
	{
		image: "characters/frogatto-spritesheet3.png",
		accel_x: 0,
		accel_y: 80,
		pad: 3,
		body_area: "all",
		id: "emote_talk",
		rect: [1,189,32,221],
		frames: 16,
		frames_per_row: 8,
		duration: 6,
	},
],
}

{
id: "minecart",
hitpoints: 3,
zorder: 5,
solid_area: [0,0,34,22],
is_human: true,
prototype: ["player_controlled_platformer_character"],
properties: {
	launch: "def()[
			debug('launch ', y),
			set(me.vars.launch, {'y' -> y, 'x' -> x, 'energy' -> me.vars.energy}),
			]",
	land: "def(sso)[debug('land ', y),
			set(me.vars.energy, me.vars.energy + ((y - me.vars.launch.y)*(90-sin(sso)))/90),
			]",
	velocity: "def() llib.math.length(0,0,me.velocity_x,me.velocity_y)",
	speed: "def(sso) if(s < 100 and sso > 0, 100, s) where s = max(0, sqrt(vars.gravitational_acceleration*2*(y-me.vars.energy)))",
},
on_create: "[
		set(vars.energy, self.y),
		set(vars.gravitational_acceleration, 987),
	]",
on_done_create: "if(not is_standing, self.launch())",
on_ctrl_jump: "if(is_standing, [set(velocity_y, velocity_y - 900), animation('jump')])",
on_end_jump_anim: "animation('normal')",
on_process: "[
		if(is_standing, [
			set(rotate, slope_standing_on+vars.on_slope.rotate),
			set(velocity_x, speed(slope_standing_on+vars.on_slope.rotate)),
			debug((slope_standing_on+vars.on_slope.rotate), vars.on_slope),
			]),		
		set(tmp.was_standing, is_standing),
		if(tmp.was_standing != is_standing,
			if(tmp.was_standing < is_standing,
				land(slope_standing_on+vars.on_slope.rotate), launch()
				)
			),			
		if(animation = 'jump' and (not ctrl_jump), fire_event('end_jump_anim')),
		set(tmp.x, x),
		if(x=tmp.x, set(vars.energy, self.y)),
		]",
on_collide_feet: "[land(collide_with.rotate), set(vars.on_slope, collide_with), debug('hi')]",
editor_info: {
	category: "player",
},
animation: [
	{
		image: "vehicles/minecart.png",
		rect: [14,21,49,44],
		body_area: "all",
		accel_y: 98,
		id: "normal",
	},
	{
		image: "vehicles/minecart.png",
		rect: [14,21,49,44],
		body_area: "all",
		accel_y: 40,
		id: "jump",
		duration: 10,
	},
],
}

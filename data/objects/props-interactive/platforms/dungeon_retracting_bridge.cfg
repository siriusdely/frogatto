{
id: "dungeon_retracting_bridge",
zorder: -1,
surface_friction: 100,
platform_area: [0,0,48,1],
on_create: "[
		map(segs, 'seg', add_object(seg)),
		set(vars.segments, segs)
		] where segs = map(map(range(vars.segments-1), value + 1), 'itr', object('${self.type}.segment', midpoint_x, midpoint_y-itr*6, facing, {'brightness' -> 255-itr*15, 'brightness_' -> 255-itr*15, 'slot' -> itr}))",
on_button_pressed: "if(vars.ran=0, [
		map(vars.segments, 'seg', [
			map(range(seg.vars.slot*steps), 'offset', 
				schedule(offset, set(seg.x, ((offset+1)*32*3*if(expand_left,-1,1))/steps+seg.x))
				),
			schedule(seg.vars.slot*steps+20, map(range(max_offset), 'offset', schedule(offset, [
					set(seg.y, seg.y*(1-percent) + self.y*percent),
					set(seg.brightness, seg.brightness_*(1-percent) + 255*percent),
					] where percent = decimal(offset+1)/decimal(max_offset),
					)) where max_offset = seg.vars.slot*out
		)])where steps = 40 where out = 5,
		set(vars.ran, 1)])",
editor_info: {
	category: "platforms",
	help: "When triggered, by a switch or pressure plate, this platform
			expands into a proper bridge.
			    segments: The number of segments to expand into.
			    expand_left: Expand left, as opposed to right?",
	var: [
		{
			name: "segments",
			type: "int",
			value: 5,
		},
		{
			name: "expand_left",
			type: "boolean",
			value: 0,
		},
	],
},
properties: {
	material_sound: "'metal'",
},
animation: {
	id: "normal",
	image: "props/dungeon-platform.png",
	x: 0,
	y: 0,
	w: 48,
	h: 16,
},
object_type: {

	#This is a dumb copy of the bridge object. It's also used in a couple other objects, so avoid wanton modification.
	#
	id: "segment",
	zorder: -1,
	surface_friction: 100,
	platform_area: [0,0,48,1],
	animation: {
		id: "normal",
		image: "props/dungeon-platform.png",
		x: 0,
		y: 0,
		w: 48,
		h: 16,
	},
},
}
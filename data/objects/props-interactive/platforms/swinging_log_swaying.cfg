{
id: "swinging_log_swaying",
is_strict: true,
activation_border: 500,
zorder: "@include data/zorder.cfg:in_front_of_everything",
editor_info: {
	category: "platforms",
	help: "A swinging log.",
},

properties: {
	length: "abs(mid_y - rope_length)",
	tilt: "((sin(cycle*2)*swingpower)/20+90)",
	swinging_right: "if(sin(cycle*2 +90) > 0, 0,1)",

#-------------------------- vars --------------------------#
	rope_length: { type: "int", editor_info: { type: "x", value: "mid_y+(4*32)" } },

	swingpower: { type: "int", default: 100, persistent: false },
	_platform: { type: "obj swinging_log_swaying.platform", init: "object('swinging_log_swaying.platform',x,y,{facing:facing, anchor_obj:me})", persistent: false },
	_cross_rope: { type: "obj rope_angled_controller", init: "object('rope_angled_controller',x,y,facing)", persistent: false },
},

## origin is done by the controller
## set up the object straight vertical, give it a editor-specced distance
## it's already given a base momentum.
##
## treat the whole object as having a second "key point" where the platform should be
## each frame, 'orbit' the key point by some sine function, relative to the current momentum, and relative to the period.  Period determines where we are in the swing, momentum determines the width of the swing.
## also, each frame, modify the momentum depending on which side of the object (relative to the swing direction) that frogatto is standing on.
on_create: "[
		set(alpha, 0),
		//y+length
		spawn('${self.type}.mount', x,y,facing),
		add_object(_platform),
		add_object(_cross_rope)
		]",
on_process: "[		set(_platform.mid_x, orbit_pos[0]-2),
					set(_platform.mid_y, orbit_pos[1]),
					set(_platform.rope_angle, (tilt -90)/1.3),
					_cross_rope.set_ends(x,y,orbit_pos[0],orbit_pos[1])]
					 where orbit_pos = orbit(x,y,tilt,length)",
timer_frequency: 5,
on_timer: "if(swingpower > 100, add(swingpower,-6))",


animation: {
	id: "normal",
	image: "effects/particles.png",
	x: 210, y: 166, w: 28, h: 28,
	duration: -1,
},
object_type: [
	{
		id: "platform",
		zorder: -1,
		is_strict: true,
		properties: {
			being_stood_on: "(level.player.is_standing_on_platform and lib.math.length(level.player, self) < 200)",
			material_sound: "'wood_solid'",
			platform_width: "60",

			#Properties for the positions of the platform.
			platform_y_pos: "mid_y + 86",
			platform_x1_pos: "mid_x - platform_width",
			platform_x2_pos: "mid_x + platform_width",

			#The platform area when the platform is at rest.
			base_rect: "[x1pos, ypos,
			             x2pos, ypos,
			             x2pos, ypos,
			             x1pos, ypos]
						   where x1pos = platform_x1_pos,
						         x2pos = platform_x2_pos,
								 ypos = platform_y_pos",

			#Rotation of the platform to account for the platform rotating.
			rotated_rect: "rotate_rect(mid_x, mid_y, rope_angle, base_rect)",
			                           

		#-------------------------- vars --------------------------#
			rope_angle: { type: "decimal", default: 0, persistent: false },
			anchor_obj: { type: "obj swinging_log_swaying", dynamic_initialization: true, persistent: false },

		},
		on_process: "[set(rotate, rope_angle),
		       if(being_stood_on, 
							[if(level.player.mid_x > mid_x and anchor_obj.swinging_right, if(anchor_obj.swingpower < 1800, add(anchor_obj.swingpower, 3))),
							
							if(level.player.mid_x < mid_x and (not anchor_obj.swinging_right), if(anchor_obj.swingpower < 1800, add(anchor_obj.swingpower, 3)))]),
							
			set(platform_area, [(rotated_rect[0] - x)/2, (rotated_rect[1] - y)/2,
			                    (rotated_rect[2] - x)/2]),
			set(platform_offsets, [0, (rotated_rect[3] - rotated_rect[1])]),
			
			if(level.player.standing_on = me and abs(rope_angle) > 30, add(level.player.velocity_x, (rope_angle - 30*if(rope_angle > 0, 1, -1))*6.0))
		   	]",
		on_end_anim: "animation('normal')",
			
		platform_area: [0,108,63,109],
		animation: [{
			image: "props/forest/log-swing-animated.png",
			id: "normal",
			rect: [1,1,70,130],
			pad: 3,
			frames: 9,
			duration: 4,
			reverse: true,
			no_remove_alpha_borders: true,
		},
		{
			image: "props/forest/log-swing-animated.png",
			id: "normal",
			rect: [74,1,143,130],
			pad: 3,
			frames: 7,
			duration: 4,
			reverse: true,
			no_remove_alpha_borders: true,
		}],
	},
	{
		id: "mount",
		zorder: -1,
		animation: {
			image: "props/forest/log-swing.png",
			id: "normal",
			rect: [64,0,95,31],
		},
	},
],
}

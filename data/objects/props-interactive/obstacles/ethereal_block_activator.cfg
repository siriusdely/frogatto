{
id: "ethereal_block_activator",
prototype: ["standard_values"],
next_animation: "'normal'",
always_active: true,
is_strict: true,
zorder: "@include data/zorder.cfg:exterior_decor",
zsub_order: 0,
editor_info: {
	category: "props",
},
properties: {
	toggle_blocks_off: "map(filter(level.chars, 'foo', foo is obj ethereal_block and foo.variations = context.variations), 'bar', fire_event(bar, 'toggled_off'))",
	toggle_blocks_on: "map(filter(level.chars, 'foo', foo is obj ethereal_block and foo.variations = context.variations), 'bar', fire_event(bar, 'toggled_on'))",
	toggle_blocks: "map(filter(level.chars, 'foo', foo is obj ethereal_block and foo.variations = context.variations), 'bar', fire_event(bar, 'toggled'))",

	toggle_activators: "map(filter(level.chars, value is obj ethereal_block_activator and value.variations = me.variations), fire_event(value, 'triggered'))",


#-------------------------- vars --------------------------#
	_last_triggered: { type: "int", default: -400, persistent: false },

	color: { type: "string", default: "grey", editor_info: { type: "enum", enum_values: ["grey", "blue", "red", "green"] } },
	is_glowing: { type: "bool", default: false },
	glowing_light: { type: "obj ethereal_block_activator.glow", init: "object('ethereal_block_activator.glow', mid_x, mid_y+if(upside_down>0, -4,0), {zsub_order:zsub_order+1})" },
	big_glowing_light: { type: "obj ethereal_block_activator.soft_glow", init: "object('ethereal_block_activator.soft_glow', mid_x+1, mid_y+if(upside_down>0, -3,1), {zsub_order:zsub_order+2, alpha:0})" },
},

on_start_level: "[set(variations, [color]), animation('normal'), set(glowing_light.animation, color)]",

on_end_anim: "animation('normal')",


on_collide_object_activate: "if(arg.collide_with_area in ['body', 'thrown'], [set(_last_triggered, cycle), if(cycle > _last_triggered + 10, fire_event('bumped'))])",

on_bumped: "[sound_falloff('ethereal-block-shift.wav'),if(is_glowing, toggle_blocks, toggle_blocks), toggle_activators]",

on_triggered: "if(is_glowing,
					[remove_object(glowing_light), remove_object(big_glowing_light), set(is_glowing, false)],
					[add_object(glowing_light), add_object(big_glowing_light), set(is_glowing,true)]
				)",

on_process: "[set(glowing_light.alpha, lib.math.round(val)),set(big_glowing_light.alpha,  lib.math.round(val/2)),set(big_glowing_light.scale, 0.3*val/255.0 +0.1)] where val = (150 +65*sin(level.cycle*10) +15*sin(level.cycle*2)+10*min(1,tan(level.cycle*33)))",

on_editor_changed_variable: "fire_event('start_level')",

		
animation: {
	id: "normal",
	no_remove_alpha_borders: true,
	image: "props/cement-block-ethereal-activator.png",
	rect: [0,0,31,47],
	frames: 1,
	duration: 1000,
	activate_area: "all",
},
variations: {
	grey:	"null",
	blue:	"[map(filter(doc.animation, value.rect = [0,0,31,47]), 'anim', set(anim.rect, [32,0,63,47]))]",
	red:	"[map(filter(doc.animation, value.rect = [0,0,31,47]), 'anim', set(anim.rect, [64,0,95,47]))]",
	green:	"[map(filter(doc.animation, value.rect = [0,0,31,47]), 'anim', set(anim.rect, [96,0,127,47]))]",
},

object_type: [
	{
		id: "soft_glow",
		animation:		{
				no_remove_alpha_borders: true,
				id: "normal",
				image: "effects/silhouette/soft-glow.png",
				rect: [0,0,255,255],
				frames: 1,
				duration: 1000,
				feet_x: 63,
				feet_y: 63,
		},

	},
	{
		id: "glow",
		
		on_create: "[set(brightness, 500),set(alpha,100)]",
		
		animation: [
			{
				"@base": true,
				no_remove_alpha_borders: true,
				image: "props/cement-block-ethereal-activator.png",
				frames: 1,
				duration: 1000,
			},
			{
				id: "grey",
				rect: [0,48,31,95],
			},
			{
				id: "blue",
				rect: [32,48,63,95],
			},
			{
				id: "red",
				rect: [64,48,95,95],
			},
			{
				id: "green",
				rect: [96,48,127,95],
			},
		],
	}],
}

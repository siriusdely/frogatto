{
id: "fan_horizontal",
affected_by_currents: false,
zorder: "@include data/zorder.cfg:interior_decor",
has_feet: false,
solid_area: [7,6,24,47],
prototype: ["triggerable"],
properties: {
	set_activation_border:  "set(activation_border,max(abs(_x_bound - _x2_bound), abs(_y_bound - _y2_bound))*1.5)",

	sfx: { type: "obj sound_source_individual", init: "object('sound_source_individual',mid_x,mid_y,{sound_file:'ambient/fan.ogg'})", persistent: false },

	is_active: "if(event = '', true, bool(level.player.get_stored_event(event)))",

	_x_bound: { type: "int", editor_info: { type: "x", value: "if(facing > 0, x2, x-300)" } },
	_x2_bound: { type: "int", editor_info: { type: "x", value: "if(facing > 0, x2+300, x)" } },
	_y_bound: { type: "int", editor_info: { type: "y", value: "y" } },
	_y2_bound: { type: "int", editor_info: { type: "y", value: "y + img_h" } },
	_strength: { type: "int", editor_info: { type: "int", value: 100 } }, #if there's an event, this flips/xors the meaning; 0 means on, 1 means off.
	_current_vel_x: { type: "int", editor_info: { type: "int", value: 300 } }, #if there's an event, this flips/xors the meaning; 0 means on, 1 means off.
	_current_vel_y: { type: "int", editor_info: { type: "int", value: 0 } }, #if there's an event, this flips/xors the meaning; 0 means on, 1 means off.
},

on_create: "schedule(2,fire_event('check_state'))",

on_start_level: "set_activation_border",
on_check_state: "[if(is_active, schedule(1,fire_event('button_pressed')), schedule(1,fire_event('button_released'))),
		add_particles('particles'),
		add_object(sfx),
		fire_event('setup_particles')]",
on_setup_particles: "[
			set(particle_systems['particles'].velocity_x, facing * _current_vel_x*10),
			set(particle_systems['particles'].velocity_y, _current_vel_y*10),
			set(particle_systems['particles'].min_x, min(_x_bound, _x2_bound) - x),
			set(particle_systems['particles'].max_x, max(_x_bound, _x2_bound) - x),
			set(particle_systems['particles'].min_y, min(_y_bound, _y2_bound) - y),
			set(particle_systems['particles'].max_y, max(_y_bound, _y2_bound) - y)
		]",
on_end_on_anim: "animation('on')",
on_end_off_anim: "animation('off')",
on_button_pressed: "[animation('on'), set(sfx.sound_enabled, true), set(particle_systems['particles'].spawn_rate,3000), set(current_generator, rect_current(min(_x_bound, _x2_bound), min(_y_bound, _y2_bound) ,abs(_x_bound - _x2_bound) ,abs(_y_bound - _y2_bound) , _current_vel_x * facing, _current_vel_y, _strength*10))]",
on_button_released: "[animation('off'), set(sfx.sound_enabled, false), set(particle_systems['particles'].spawn_rate,0),set(current_generator, null )]",
editor_info: {
	category: "props",
},
animation: [
	{
		id: "on",
		image: "props/fan.png",
		rect: [0,0,31,47],
		frames: 4,
		duration: 2,
		pad: 0,
	},
	{
		id: "off",
		image: "props/fan.png",
		rect: [0,0,31,47],
		frames: 1,
		duration: 200,
		pad: 0,
	},
],
particle_system: {
	id: "particles",
	type: "simple",
	spawn_rate: 3000,
	time_to_live: 50,
	animation: {
		id: "sparkle",
		image: "effects/particles.png",
		x: 86,
		y: 3,
		w: 4,
		h: 4,
		pad: 3,
		frames: 5,
		duration: 10,
		accel_y: -1,
		scale: 2,
	},
},
}
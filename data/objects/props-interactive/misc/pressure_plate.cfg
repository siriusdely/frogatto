{
id: "pressure_plate",
zorder: "@include data/zorder.cfg:player",
solid_area: [2,16,42,16],
solid_shape: "flat",
editor_force_standing: true,
prototype: ["pullable"],
editor_info: {
	category: "keys & triggers",
	help: "A lever that can be pushed one way or the other. Can be connected to gates and such.",
},

properties: {
	objects_standing_on: { type: "[custom_obj]", default:[], persistent: false },

	visually_turn_on: "[sound('click.wav'), set(animation, 'pushed')]",
	visually_turn_off: "[sound('click.wav'), set(animation, 'normal')]",
	
	set_event_to_false_upon_being_released: { type:"bool", default: false, editor_info: { type: "boolean", value: "false" } },
},
on_create: "if(down > 0, move_to_standing())",

//By default, what we want is that, once the event has been set, the button will visually click inwards/outwards, but it won't actually change the event after the very first time (unless set_event_to_false_upon_being_released is set).  Do note that "do_toggle" wraps visually_turn_on/off
on_jumped_on: "[if((set_event_to_false_upon_being_released),
						do_toggle,
						if(_event = 0, do_toggle, visually_turn_on)),
					set(objects_standing_on, objects_standing_on + [(custom_obj <- arg.jumped_on_by)])]",
	               
on_process_pushed: "[set(objects_standing_on, filter(objects_standing_on, value.standing_on = me and (not value.destroyed))), if(size(objects_standing_on) = 0,  if(set_event_to_false_upon_being_released, do_toggle, visually_turn_off))]",
animation: [
	{
		id: "normal",
		image: "props/interactive-props.png",
		rect: [0,121,47,143],
	},
	{
		id: "pushed",
		image: "props/interactive-props.png",
		rect: [48,121,95,143],
	},
],
}
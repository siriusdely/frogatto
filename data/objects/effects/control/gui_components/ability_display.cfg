//Show the currently selected ability, such as 'tongue' or 'firebreath'.
{
	id: "ability_display",
	is_strict: true,
	use_absolute_screen_coordinates: true,
	hidden_in_game: true,
	serializable: false,
	
	zorder: "@include data/zorder.cfg:in_front_of_everything",

	properties: {
		target: "obj frogatto_playable <- lp asserting lp where lp = level.local_player",
		
		//Generate a widget for each ability to display, to be swapped out as needed.
		ability_image_rects: "{string -> [int,int,int,int]} :: {
								'tongue': 		[79,36,98,55],
								'firebreath':	[53,36,72,55],
								'energyshot':	[27,36,46,55],
								'homingshot':	[53,62,72,81],
								'acidbreath':	[79,62,98,81],
							}",
								
		initialize_widgets: "set(ability_display,
				fold(map(ability_image_rects, { keys(ability_image_rects)[index] : 
					widget(me, {
						type: 'image', 
						image: 'gui/hud.png', 
						area: img_rect, 
					}) where img_rect = ability_image_rects[key] }),
				a + b)
			)
			
			//make sure the names of the abilities we're looking for exist
			asserting fold(map(ability_image_rects, key in (obj frogatto_playable <- level.local_player).ability_list_full), a and b)",
		
		ability_display: { type: "{string -> widget}", dynamic_initialization: true },
		
		last_displayed_ability: { type: "string", default: 'tongue' },
	},
	
	on_create: "[initialize_widgets, fire_event('create_first_widget')]",
	on_create_first_widget: "set(me.widgets.child, ability_display['tongue'])",
	
	on_process: "if(last_displayed_ability != target.current_ability_name, [
		set(last_displayed_ability, target.current_ability_name),
		set_widgets(ability_display[target.current_ability_name]),
	])"
}

/* PREVIOUSLY, IN hud.cfg:
	//// The portraitsâ€¦
	if(level.local_player,
		if(level.local_player is obj frogatto_playable,
			if(is_int(level.local_player.current_ability),
				switch(level.local_player.ability_list[level.local_player.current_ability],
					   'tongue',     draw_animation('frogatto_tongue_portrait',     10, 10),
					   'firebreath', draw_animation('frogatto_firebreath_portrait', 10, 10),
					   'energyshot', draw_animation('frogatto_energyshot_portrait', 10, 10),
					   'homingshot', draw_animation('frogatto_homingshot_portrait', 10, 10),
					   'acidbreath', draw_animation('frogatto_acidbreath_portrait', 10, 10),
									 draw_animation('frogatto_portrait',            10, 10))))),
*/
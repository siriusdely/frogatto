{
id: "sound_source_area",
zorder: "@include data/zorder.cfg:in_front_of_everything",
prototype: ["sound_source"],
hidden_in_game: true,
always_active: true,
ignore_collide: true,

properties: {

	_sound_distance: "def(obj sound_source source, obj player_controlled reciever) -> decimal decimal(max( if(reciever.x > source_area._x_bound and reciever.x < source_area._x2_bound, 1,
			min(abs(reciever.x - source_area._x_bound),abs(reciever.x - source_area._x2_bound))),
		if(reciever.y > source_area._y_bound and reciever.y < source_area._y2_bound, 1,
			min(abs(reciever.y - source_area._y_bound),abs(reciever.y - source_area._y2_bound))) )) where source_area = (obj sound_source_area <- source)",


#-------------------------- vars --------------------------#
	_x_bound: { type: "int", editor_info: { type: "x", value: "x-400" } },
	_x2_bound: { type: "int", editor_info: { type: "x", value: "x+400" } },
	_y_bound: { type: "int", editor_info: { type: "y", value: "y-400" } },
	_y2_bound: { type: "int", editor_info: { type: "y", value: "y+400" } },
},

editor_info: {
	category: "controllers, sound",
	help: "Plays a sound that comes from a rectangular area, and only diminishes in volume if it's outside of that area.\nsound_file: The filename, relative to the 'sounds/ambient' folder; eg., 'cannon.ogg'.",
},

on_end_anim: "animation('normal')",

animation: {
	id: "normal",
	image: "effects/particles.png",
	x: 179,
	y: 166,
	w: 28,
	h: 28,
	frames: 1,
	duration: 1000,
},
}

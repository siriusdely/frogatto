{
id: "sound_emitter_intermittent",
hidden_in_game: true,
is_strict: true,
always_active: true,
ignore_collide: true,
zorder: "@include data/zorder.cfg:in_front_of_everything",
editor_info: {
	category: "controllers, sound",
},


properties: {
	available_audio_files: "map(get_files_in_dir('sounds/ambient-intermittent'), 'ambient-intermittent/'+value)",
	stripped_core_names: "map(available_audio_files, regex_replace(value, q((\\d)*\\.(wav|ogg)), ''))",
	effect_name_count: "size(filter(stripped_core_names, value = effect_name_path + effect_name_root))",
	effect_name_root: "regex_replace(_filename, '\\.(wav|ogg)', '')",
	effect_name_path: "'ambient-intermittent/'",
	effect_name_extension: "'.' + regex_replace(_filename, '\\D+([.]){1}', '')",
	final_sound_name: "effect_name_path + effect_name_root + if(effect_name_count > 0, _variant_prng.get_next_value, '') + effect_name_extension",
	
	delay_random: "if(effect_name_root in keys(sound_file_properties), sound_file_properties[effect_name_root].delay_random, 100)",
	delay_forced: "if(effect_name_root in keys(sound_file_properties), sound_file_properties[effect_name_root].delay_forced, 100)",
	effect_volume: "if(effect_name_root in keys(sound_file_properties), sound_file_properties[effect_name_root].volume, 1.0)",
	
	sound_file_properties: "{ string -> {delay_random: int, delay_forced: int, volume: decimal} } ::
					{
						'cave-drip': {
							delay_random: 200,
							delay_forced: 50,
							volume:	1.0,						
						},
						'eldritch-rumination': {
							delay_random: 500,
							delay_forced: 500,							
							volume:	1.0,						
						},
						'factory-hammer': {
							delay_random: 200,
							delay_forced: 200,							
							volume:	1.0,						
						},
						'lurking-horror': {
							delay_random: 200,
							delay_forced: 500,							
							volume:	1.0,						
						},
					}",

#-------------------------- vars --------------------------#
	//e.g. 'Cave-Drip.wav' <- 'ambient-intermittent/Cave-Drip5.wav'
	_filename: { type: "string", default: "", editor_info: { type: "enum", enum_values: "@eval unique(map(map(get_files_in_dir('sounds/ambient-intermittent'), value), regex_replace(value, q((\\d)*), '')))" } },

	_variant_prng:	{ type: "class pseudo_random_numbers", init: "construct('pseudo_random_numbers')", persistent: false }
},

on_create: "[
				if(effect_name_root and effect_name_count,fire_event('play_sound')),
				if(effect_name_count > 0, _variant_prng.init_pool({pool_size:effect_name_count, pool_depth: 1}))
			]",
			
on_play_sound: "[
					schedule(1d(delay_random)+delay_forced,fire_event('play_sound')),
					sound(final_sound_name, effect_volume),
					_variant_prng.iterate_random_pool	
				]",

animation: {
	id: "normal",
	image: "effects/particles.png",
	x: 179,
	y: 166,
	w: 28,
	h: 28,
	duration: -1,
},
}
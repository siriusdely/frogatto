
# Level controllers are generic objects designed to be used as triggers for scripts.
# Various usages include modifying:
#  - on_create to trigger something on the start of a level.
#  - on_touch to trigger something when the player reaches a certain spot
{
id: "rope_bridge_controller_swaying",
next_animation: "'normal'",
always_active: true,
timer_frequency: 3,
properties: {
	bcurve: "def(points, percent) 
		if(size(points)=2, 
			[(points[0][0]*(100-percent) + points[1][0]*percent)/100.0, 
			(points[0][1]*(100-percent) + points[1][1]*percent)/100.0], 
			bcurve(map(range(size(points)-1), 'ind', bcurve(points[ind:ind+2], percent)), percent)
			)",
	level_points: "map(level_points_objs, 'point', [point.midpoint_x, point.midpoint_y])",
	level_points_objs: "sort(filter(level.chars, value.linked_object=sl) where sl=self.label, a.number < b.number)",
},
on_timer: "if(level_points, [
			map(lpo[1:size(lpo)-1], 'lp', set(lp.x, lp.x+delta)) where delta = sin((cycle+vars.center)*vars.frequency)/vars.sway where lpo=level_points_objs,
			fire_event('set_segments'),
		])",
on_create: "if(level_points, [set(alpha, 0), 
		[map(segments, 'seg', add_object(seg)),
		set(vars.segments, segments),
		fire_event('set_segments'),
		]
			where segments = map(range(0,resolution), 'point', object('track_angled_controller', bcurve(level_points, ind)[0], bcurve(level_points, ind)[1], 0, {'index' -> ind})
				where ind = point * (100.0/resolution) 
			)]
			)
		where resolution = vars.resolution",
on_set_segments: "map(vars.segments, 'segment', [
			segment.set_ends(
				bcurve(level_points, segment.vars.index+0/resolution)[0], 
				bcurve(level_points, segment.vars.index+0/resolution)[1], 
				bcurve(level_points, segment.vars.index+100.0/resolution+1)[0], 
				bcurve(level_points, segment.vars.index+100.0/resolution+1)[1]
			),
		]) where resolution = vars.resolution",
zorder: "@include data/zorder.cfg:in_front_of_everything",
editor_info: {
	category: "controllers",
	help: "Assign the bridge controller a label. Assign another
		object a label_of_this_object space sequencial_number.
		---
		Resolution: Number of subsections. Lower is faster.
		Sway: How much to move (x axis).
		Frequency: How fast to move.
		Center: Center of sway. (wind)",
	var: [
		{
			name: "resolution",
			type: "int",
			value: 10,
		},
		{
			name: "sway",
			type: "int",
			value: 70,
		},
		{
			name: "frequency",
			type: "int",
			value: 2,
		},
		{
			name: "center",
			type: "int",
			value: 40,
		},
	],
},
animation: {
	id: "normal",
	image: "effects/particles.png",
	x: 179,
	y: 104,
	w: 28,
	h: 28,
},
}

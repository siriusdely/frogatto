{
id: "bouncing_debris_chunk",
zorder: "@include data/zorder.cfg:near_player_foreground_effects",
dies_on_inactive: true,
solid_dimensions: ["effects"],
friction: 2000,
has_feet: false,
solid_area: [9,9,10,10],

on_create: "[animation('normal'), set(rotate, 1d4*90)]",
timer_frequency: 5,
on_timer: "if(animation in ['normal'],add(rotate, 15))",

on_collide_feet: "[set(velocity_y, -(velocity_y*600)/1000),if(velocity_y < 200 and animation='normal', [animation('settled'),set(rotate,0)]),if(velocity_y < 40, set(velocity_y,0)),  if(abs(velocity_y) > 100, play_sound)]",
on_collide_side: "set(velocity_x, -(velocity_x*850)/1000)",
on_end_anim: "animation('normal')",
on_end_settled_anim: "die()",
on_enter_water: "animation('settled')",
on_die: "[spawn('bouncing_debris_chunk.particle_system_holder', x,y,facing, add(child.variations, [particle_colors]))]",


properties: {
	init_vel: "def(string style) -> commands execute(me, switch(style,
					'burst',		[set(velocity_x, (1d1000-500)), set(velocity_y, -1d600-200)],
					'fall_down',	[set(velocity_x, (1d500-250)), set(velocity_y, -1d100+200)],
					))",
	particle_colors: "if(not size(variations), 'stone', switch(variations[0],
								'wooden_corner',		'wooden',
								'wooden_flat',			'wooden',
								'metal_corner',			'metal',
								'metal_flat',			'metal',
								'metal_round',			'metal',
								'glass_small',			'metal',
								'ceramic',				'stone',
								'rock_big_cement',		'stone',
								'rock_small_cement',	'stone',
								'rock_big_cave',		'stone',
								'rock_small_cave',		'stone',
								'rock_big_dungeon',		'stone',
								'rock_small_dungeon',	'stone',
								'bone_straight',		'stone',
								'bone_skull',			'stone',
								))",
	sound_type: "if(not size(variations), null, switch(variations[0],
						'bone_straight', 'bone',
						'bone_skull', 'bone',
						'metal_flat',	'metal-medium',
						'metal_round',	'metal-medium',
						'glass_small',	'metal',
						'wooden_corner', 'wooden',
						'wooden_flat',	 'wooden-big',
						'rock_big_cement',		'big stone',
						'rock_small_cement',	'stone',
						'rock_big_cave',		'big stone',
						'rock_small_cave',		'stone',
						'rock_big_dungeon',		'big stone',
						'rock_small_dungeon',	'stone',
						'bone_straight',		'stone',
						'bone_skull',			'stone',
				))",
				
	play_sound:	"if(not sound_type = null, switch(sound_type,
						'bone', sound('clatter-bone'+1d10+'.wav',0.8),
						'metal', sound('collide-metal'+1d10+'.wav',0.8),
						'metal-medium', sound('collide-metal-medium'+1d9+'.wav'),
						'wooden', sound('collide-wood-hollow'+1d30+'.wav',0.65),
						'wooden-big', sound ('collide-wood-large'+1d11+'.wav',0.65),
						'stone', sound ('Collide-Gravel'+1d10+'.wav',0.8),
						'big stone', sound ('Collide-Rock'+1d8+'.wav',0.8),
						'ceramic', sound('collide-ceramic'+1d13+'.wav',0.8),
				))",
},

animation: [
	{
		image: "effects/particles3.png",
		accel_y: 40,
		duration: 5,
		pad: 3,
		body_area: null,
		id: "normal",
		rect: [1,1,17,17],
		frames: 7,
		palettes: "@include data/palettes.cfg:dungeon_palettes + cave_palettes",
	},
	{
		image: "effects/particles3.png",
		accel_y: 40,
		duration: 100,
		pad: 3,
		body_area: null,
		id: "settled",
		rect: [1,1,17,17],
		frames: 1,
		palettes: "@include data/palettes.cfg:dungeon_palettes + cave_palettes",
	},
],

load_variations: "wooden_corner,wooden_flat,metal_corner,metal_flat,metal_round",

variations: {
	wooden_corner:		"null",
	wooden_flat:		"[map(filter(doc.animation, value.rect = [1,1,17,17]), 'anim', set(anim.rect, [1,21,17,37])), 
					 	map(filter(doc.animation, value.frames = 7), 'anim', set(anim.frames, 6))]",
	metal_corner:		"[map(filter(doc.animation, value.rect = [1,1,17,17]), 'anim', set(anim.rect, [1,41,17,57]))]",
	metal_flat:			"[map(filter(doc.animation, value.rect = [1,1,17,17]), 'anim', set(anim.rect, [1,61,17,77])), 
						 map(filter(doc.animation, value.frames = 7), 'anim', set(anim.frames, 6))]",
	metal_round:		"[map(filter(doc.animation, value.rect = [1,1,17,17]), 'anim', set(anim.rect, [1,121,17,137]))]",
	glass_small:		"[map(filter(doc.animation, value.rect = [1,1,17,17]), 'anim', set(anim.rect, [147,1,154,8])), 
						 map(filter(doc.animation, value.frames = 7), 'anim', set(anim.frames, 6))]",
	ceramic:			"[map(filter(doc.animation, value.rect = [1,1,17,17]), 'anim', set(anim.rect, [1,141,17,157])), 
						 map(filter(doc.animation, value.frames = 7), 'anim', set(anim.frames, 6))]",
	rock_big_cement:	"[map(filter(doc.animation, value.rect = [1,1,17,17]), 'anim', set(anim.rect, [1,81,17,97]))]",
	rock_small_cement:	"[map(filter(doc.animation, value.rect = [1,1,17,17]), 'anim', set(anim.rect, [1,101,17,117])), 
						 map(filter(doc.animation, value.frames = 7), 'anim', set(anim.frames, 6))]",
	rock_big_cave:		"[map(filter(doc.animation, value.rect = [1,1,17,17]), 'anim', set(anim.rect, [1,161,17,177]))]",
	rock_small_cave:	"[map(filter(doc.animation, value.rect = [1,1,17,17]), 'anim', set(anim.rect, [1,181,17,197])), 
						 map(filter(doc.animation, value.frames = 7), 'anim', set(anim.frames, 6))]",
	rock_big_dungeon:	"[map(filter(doc.animation, value.rect = [1,1,17,17]), 'anim', set(anim.rect, [1,201,17,217]))]",
	rock_small_dungeon:	"[map(filter(doc.animation, value.rect = [1,1,17,17]), 'anim', set(anim.rect, [1,221,17,237])), 
						 map(filter(doc.animation, value.frames = 7), 'anim', set(anim.frames, 6))]",
	bone_straight:		"[map(filter(doc.animation, value.rect = [1,1,17,17]), 'anim', set(anim.rect, [146,81,165,100])), 
						 map(filter(doc.animation, value.frames = 7), 'anim', set(anim.frames, 9)),
						 map(filter(doc.animation, value.frames = 7), 'anim', set(anim.frames_per_row, 3))]",
	bone_skull:			"[map(filter(doc.animation, value.rect = [1,1,17,17]), 'anim', set(anim.rect, [221,28,240,47])), 
						 map(filter(doc.animation, value.frames = 7), 'anim', set(anim.frames, 9)),
						 map(filter(doc.animation, value.frames = 7), 'anim', set(anim.frames_per_row, 1))]",
},




object_type: [{
		variations: {
			wooden:	"map(doc.particle_system, set(value.colors, ['f9f9dbff','ffc20eff','ffc20eaa','ff7e0088','ae4a2855']))",
			metal:	"map(doc.particle_system, set(value.colors, ['fceec5ff','dfd7d3ff','a99e96aa','796d6288','584d4055']))",
			stone:	"map(doc.particle_system, set(value.colors, ['f4dcbbff','cdbaa7ff','a88e81aa','7b535e88','692c4155']))",
		},

		id: "particle_system_holder",
		zorder: 100,
		hitpoints: 300,
		dies_on_inactive: true,
		timer_frequency: 10,
		on_create: "[set(velocity_x, 0), set(velocity_y, 0), set(animation, 'normal'), add_particles('particles')]",
		on_timer: "set(hitpoints, hitpoints-10)",
		properties: {
			set_time_to_live:  "def(int time) -> commands [set(max_hitpoints, time),set(hitpoints,time)]",
		},
		
		on_turnOff: "[set(particle_systems['particles'].generation_rate, 0)]",
		animation: {
			accel_y: 0,
			accel_x: 0,
			id: "normal",
			image: "effects/particles2.png",
			events: "2:turnOff",
			duration: 10000,
			x: 0,
			y: 0,
			w: 0,
			h: 0,
		},
		particle_system: {
			id: "particles",
			type: "point",
			dot_rounded: true,
			generation_rate_millis: 10000,
			time_to_live: 60,
			time_to_live_rand: 24,
			colors: ["fceec5ff","dfd7d3ff","a99e96aa","796d6288","584d4055"],
			pos_x: 0,
			pos_y: 0,
			pos_x_rand: 30,
			pos_y_rand: 30,
			velocity_x: -500,
			velocity_x_rand: 1000,
			velocity_y: -500,
			velocity_y_rand: 1000,
			dot_size: 3,
		},
	}],
}
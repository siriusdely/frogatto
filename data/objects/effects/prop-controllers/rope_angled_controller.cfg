{
id: "rope_angled_controller",
is_strict: true,
ignore_collide: true,
no_compile_image: "props/rope-vertical.png,props/rope-vertical-dark.png,props/chainbit.png,props/elevator-track.png,props/dungeon-conveyor-belt-top.png,props/dungeon-conveyor-belt-supports.png,props/dungeon-conveyor-belt-bottom.png,effects/arrow-ribbon.png",

properties: {
	length: "decimal :: lib.math.length(x_1,y_1,x_2,y_2)",
	set_ends: "def(decimal new_x1, decimal new_y1, decimal new_x2, decimal new_y2) -> commands [set(x_1,new_x1),set(y_1,new_y1),set(x_2,new_x2),set(y_2,new_y2),fire_event(me,'create'),]",
	set_offset: "def(decimal pixels) -> commands execute(me, [set(draw_area, [0, pixels, img_w/2, length/2]), set(offset,(offset+pixels)%img_w)])",

	set_ends_and_offset: "def(decimal new_x1, decimal new_y1, decimal new_x2, decimal new_y2, decimal pixels) -> commands
	  [
	   set(self.x_1, new_x1),
	   set(self.y_1, new_y1),
	   set(self.x_2, new_x2),
	   set(self.y_2, new_y2),
	   set(self.offset, offset),
	   set(self.midpoint_x, (new_x2 + new_x1)/2),
	   set(self.y, (new_y2+new_y1)/2 - len/2),
	   set(self.draw_area, [0, offset, self.img_w/2, len/2]),
	   set(self.activation_area, [min(new_x1,new_x2) - 200, min(new_y1,new_y2) - 200, abs(new_x1 - new_x2) + 200, abs(new_y1 - new_y2) + 200]),
	   set(self.rotate, (angle(new_x1, new_y1, new_x2, new_y2) - 90))
	  ] where len = lib.math.length(new_x1, new_y1, new_x2, new_y2),
	          offset = (self.offset+pixels)%self.img_w",
	
#-------------------------- vars --------------------------#
	x_1: { type: "decimal", editor_info: { type: "x", value: "x - 100" }, default: 0  },
	y_1: { type: "decimal", editor_info: { type: "y", value: "y - 100" }, default: 0  },
	x_2: { type: "decimal", editor_info: { type: "x", value: "x + 100" }, default: 0  },
	y_2: { type: "decimal", editor_info: { type: "y", value: "y + 100" }, default: 0  },
	offset: { type: "decimal", set: "set(_data, value%img_w)", default: 0 },
},

on_create: "
[
		set(midpoint_x, (x_2+x_1)/2),
		set(y, (y_2+y_1)/2 - (length/2)),
		set(draw_area, [0, offset, img_w/2, length/2]),
		set(activation_area, [min(x_1,x_2) -200, min(y_1,y_2) -200, abs(x_1-x_2) +200, abs(y_1-y_2) +200]),  #xywh#
		set(rotate,(angle(x_1,y_1,x_2,y_2)-90) )
		]
",
on_load: "[fire_event('create')]",
	
editor_info: {
	category: "controllers",
	help: "A controller which draws a patterned line between two points, usually used for ropes, but also used for pipes and platform tracks.",
},

animation: [
	{
		image: "props/rope-vertical.png",
		id: "normal",
		x: 0,
		w: 4,
		y: 0,
		h: 4,
		palettes: "@include data/palettes.cfg:seaside_palettes + forest_palettes + cave_palettes",
	},
	{
		image: "props/rope-vertical-dark.png",
		id: "dark",
		x: 0,
		w: 4,
		y: 0,
		h: 4,
		palettes: "@include data/palettes.cfg:seaside_palettes + forest_palettes + cave_palettes",
	},
	{
		image: "props/chainbit.png",
		id: "chain",
		x: 0,
		w: 16,
		y: 0,
		h: 16,
		palettes: "@include data/palettes.cfg:dungeon_palettes",
	},
	{
		image: "props/elevator-track.png",
		id: "track",
		x: 0,
		w: 8,
		y: 0,
		h: 16,
		palettes: "@include data/palettes.cfg:dungeon_palettes",
	},
	{
		id: "tongue",
		image: "characters/frogatto-tongueB.png",
		rect: [0,0,7,7],
		frames: 1,
		no_remove_alpha_borders: true,
	},
	{
		image: "effects/arrow-ribbon.png",
		id: "arrow ribbon",
		x: 0,
		w: 8,
		y: 0,
		h: 16,
	},
],
}

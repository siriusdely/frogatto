{
id: "rope_controller",
ignore_collide: true,
no_compile_image: "props/rope-vertical.png,props/rope-vertical-dark.png,props/chainbit.png,props/elevator-track.png,props/dungeon-conveyor-belt-top.png,props/dungeon-conveyor-belt-supports.png,props/dungeon-conveyor-belt-bottom.png",

properties: {
	size: "lib.math.length(uv, st)",
	
	ends: "def(p1=null,p2=null) if(p1, execute(self, [ //Set ends to points if provided, otherwise return points.
			set(uv, p1),
			set(st, p2),
			set(draw_area, [0.0, offset_counter, img_w/2.0, lib.math.length(p1,p2)/2.0]),
			set(rotate, lib.math.angle(p1,p2)+90),
			set(mid_x, p1[0]/2 + p2[0]/2),
			set(mid_y, (p1[1]/2 + p2[1]/2) - lib.math.length(p1,p2)/2 + img_h/2),
			set(activation_area, [min(p1[0],p2[0]) -200, min(p1[1],p2[1]) -200, abs(p1[0]-p2[0]) +200, abs(p1[1]-p2[1]) +200]),  #xywh#
		]),
		[self.vars.uv, self.vars.st]
	)",
	
	offset: "def(pixels=null) if(pixels,
		execute(self, [
			set(draw_area, [0, pixels, img_w/2, length/2]), 
			set(offset_counter,(offset_counter+pixels)%img_w),
			]),
		self.vars.offset_counter)",

	look: "def(look=null) if(look, execute(self, 
		if(look in available_animations, 
			[	animation(look),
				schedule(2, fire_event('refresh_ends_')), //We have got to wait for img_w to refresh.
			],
			debug(q(Warning - '${look}' isn't a valid animation for the object labelled ${label}.))
			)),
		animation
	)",
},

vars: {
	st: [-96,-96],
	uv: [96,96],
	offset_counter: 0.0,
},

on_create: "[
	look(vars.look),
	ends([u,v],[s,t]),
	]",

on_editor_changed_variable: "fire_event('create')",

on_refresh_ends_: "[ends(uv, st)]",
	
editor_info: {
	category: "controllers",
	help: "A rope graphic that stretches between two points.",
	var: [
		{
			name: "s",
			type: "x",
			value: "x-96",
		},
		{
			name: "t",
			type: "y",
			value: "y-96",
		},
		{
			name: "u",
			type: "x",
			value: "x+96",
		},
		{
			name: "v",
			type: "y",
			value: "y+96",
		},
		{
			name: "look",
			type: "enum",
			value: "'rope'",
			enum_values: ["rope", "dark rope", "chain", "track", "tongue"],
		},
	],
},

animation: [
	{
		image: "props/rope-vertical.png",
		id: "rope",
		x: 0, w: 4, y: 0, h: 4,
		palettes: "@include data/palettes.cfg:seaside_palettes + forest_palettes + cave_palettes",
	},
	{
		image: "props/rope-vertical-dark.png",
		id: "dark rope",
		x: 0, w: 4, y: 0, h: 4,
		palettes: "@include data/palettes.cfg:seaside_palettes + forest_palettes + cave_palettes",
	},
	{
		image: "props/chainbit.png",
		id: "chain",
		x: 0, w: 16, y: 0, h: 16,
		palettes: "@include data/palettes.cfg:dungeon_palettes",
	},
	{
		image: "props/elevator-track.png",
		id: "track",
		x: 0, w: 8, y: 0, h: 16,
		palettes: "@include data/palettes.cfg:dungeon_palettes",
	},
	{
		id: "tongue",
		image: "characters/frogatto-tongueB.png",
		rect: [0,0,7,7],
		frames: 1,
		no_remove_alpha_borders: true,
	},
],
}

{
id: "menu_item_textual",
prototype: ["standard_values"],
ignore_collide: true,
hidden_in_game: true,
zorder: 0,
is_strict: true,
editor_info: {
	category: "controllers",
	help: "Group items which make a menu. Each menu gets its own selector icon.",
},

properties: {
	chars_in_group: "filter(level.chars, value is obj menu_item_textual and value.group = me.group)",
	
	default_in_group: "
		if(group = -1 or size(chars_in_group) < 2, self,
			if(find(chars_in_group, value.default_selection), find(chars_in_group, value.default_selection),
				(find(chars_in_group, 'base_val', not find(chars_in_group, value.y < base_val.y
		                                                          or value.x < base_val.x)))))",
	
	create_selector: "[
		add_object(arrow),
		set(arrow.x, x-50),
		set(arrow.y, y-6),
		set(arrow.targeting, (obj menu_item_textual <- me)),
		//set(arrow.targeting, me),
		map(chars_in_group, set(value.selector, arrow)),
		] where arrow = object('menu_selector.arrow_selected', x, y, facing)",
	
	move_selector: "[
		set(arrow.targeting, (obj menu_item_textual <- me)),
		set(arrow.x, x-50),
		set(arrow.y, y-6),
		] where arrow = (obj menu_selector.arrow_selected <- selector)",
		
	show_selector: "set(arrow.alpha, 255) where arrow = (obj menu_selector.arrow_selected <- selector)",
	hide_selector: "set(arrow.alpha, 0) where arrow = (obj menu_selector.arrow_selected <- selector)",
	

#-------------------------- vars --------------------------#
	selector: { type: "obj menu_selector.arrow_selected|null", default: null },
	index_in_group: { type: "int", default: 0 }, //currently we've cheapassed this - it has to be manually set, and has no internal meaning.  It got used for the load-game screen.

	default_selection: { type: "bool", editor_info: { type: "bool", value: false  }, default: false },
	msg: { type: "string", editor_info: { type: "string", value: "TEXT" }, default: "TEXT" },
	align: { type: "string", editor_info: { type: "enum", enum_values: ["left", "center", "right"]  }, default: "left" },
	size: { type: "int", editor_info: { type: "int", value: 2 }, default: 2 },
},

on_load: "fire_event('display_text')",
on_editor_changed_variable: "fire_event('display_text')",
on_display_text: "text(msg, 'white_outline', size, align)",

on_create: "[
	fire_event('display_text'),
	if(self = default_in_group, create_selector),
	]",
	
on_activate: "move_selector",

animation: {
	id: "normal",
	image: "effects/particles.png",
	x: 148,
	y: 42,
	w: 28,
	h: 28,
	frames: 1,
	duration: 1000,
}}
{
id: "bridge_retracting",
properties: {
	right_x: "midpoint_x",
	rightmost: "parts[parts.size - 1]",
},
vars: {
	anchor: null,
	parts: [],
},
on_create: "spawn('bridge_retracting.anchor',other_x,other_y,facing)",
on_child_spawned: "switch(child.type,
    'bridge_retracting.anchor', [set(anchor, child), spawn('bridge_retracting.part', midpoint_x + (child.midpoint_x - midpoint_x)/2, midpoint_y + (child.midpoint_y - midpoint_y)/2, facing, [ set(child.vars.left, me), set(child.vars.right, child), set(child.vars.spring_constant, spring_constant) ])],
    'bridge_retracting.part', [set(parts, parts + [child]), if(parts.size < nparts - 1, spawn('bridge_retracting.part', midpoint_x + (anchor.midpoint_x - midpoint_x)/2, midpoint_y + (anchor.midpoint_y - midpoint_y)/2, facing, [set(child.vars.left, child), set(child.vars.right, anchor), set(child.vars.spring_constant, spring_constant)])), if(parts.size > 0, set(rightmost.right,child))])",
editor_info: {
	category: "platforms",
	var: [
		{
			name: "other_x",
			type: "x",
			value: "x + 100",
		},
		{
			name: "other_y",
			type: "y",
			value: "y",
		},
		{
			name: "nparts",
			value: 5,
		},
		{
			name: "spring_constant",
			value: 5,
		},
	],
},

# It seems that the new child isn't added to the array unit *after* the entire list of commands is executed
	animation: {
		id: "normal",
		image: "props/spiked-ball.png",
		rect: [0,0,15,31],
		duration: -1,
		palettes: "@include data/palettes.cfg:dungeon_palettes",
	},
object_type: [
	{
		id: "anchor",
		properties: {
			left_x: "midpoint_x",
		},
		animation: {
			image: "props/spiked-ball.png",
			id: "normal",
			rect: [0,0,15,31],
		},
	},
	{
		id: "part",
		platform_area: [0,3,48,10],
		properties: {
			left_x: "midpoint_x - X_ADJUST",
			right_x: "midpoint_x + X_ADJUST",
		},
		vars: {

			# spring_constant, left and right are set by bridge_dynamic
			force_x: 0,
			force_y: 0,
		},
		consts: {
			X_ADJUST: 20,
			PLAYER_WEIGHT: 150,
			PART_WEIGHT: 25,
		},

		# The below math is all wrong, it's just a placeholder.
		on_process: "[
    #start comment##
        set(force_x, 0), set(force_y, 0),
        set(vars.dx, (left.right_x - left_x) + (right.left_x - right_x)),
        set(vars.dy, (left.y - y) - (right.y _y)),
        set(vars.force, sqrt(dx^2 + dy^2)),
        if(dy > 0, set(vars.angle, acos(dx*10/dy)), set(vars.angle,
        TODO: trigonometric math here
    ##end comment#

        set(force_x, (left.right_x - left_x)*spring_constant + (right.left_x - right_x)*spring_constant),
        set(force_y, (left.y - y)*spring_constant + (right.y - y)*spring_constant + if(level.player.standing_on = me, PLAYER_WEIGHT, 0) + PART_WEIGHT),
        set(velocity_x, velocity_x/2 + force_x),
        set(velocity_y, velocity_y/2 + force_y)
    ]",
		animation: {
			no_remove_alpha_borders: true,
			id: "normal",
			image: "props/rope-platform.png",
			rect: [0,0,63,63],
			frames: 1,
			duration: 1000,
		},
	},
],
}
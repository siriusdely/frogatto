{
id: "drive_line",
hidden_in_game: true,
is_strict: true,
properties: {
	pulleyDiameter: "18",
	sagOffset: "15",
	topRopeH: "pulleyDiameter+sagOffset",
	polarity: "sign(_move_x2-_move_x1)",

	#if the platform is flipped, some values need to run in the opposite direction - such as pulley rotation
	point1: "[_move_x1, _move_y1]",
	point2: "[_move_x2, _move_y2]",
	distance: "mod(cycle,360)",
	setPos: "[
			set(left_pulley.midpoint_x, point1[0]),
			set(left_pulley.midpoint_y, point1[1]-sagOffset -pulleyDiameter/2),
			set(left_pulley.rotate, polarity-distance*5),
			set(right_pulley.midpoint_x, point2[0]),
			set(right_pulley.midpoint_y, point2[1]-sagOffset -pulleyDiameter/2),
			set(right_pulley.rotate, polarity-distance*5),


			top_rope.set_ends(point1[0], point1[1]-topRopeH, point2[0], point2[1]-topRopeH),
			top_rope.set_offset(distance),
			bottom_rope.set_ends(point2[0], point2[1]-sagOffset, point1[0], point1[1]-sagOffset),
			bottom_rope.set_offset(distance)
			
			]",
	actBsize: "max(abs(_move_x1-_move_x2),abs(_move_y1-_move_y2))*2",

#-------------------------- vars --------------------------#
	_rotate_speed: { type: "decimal", editor_info: { type: "int", value: "10", min_value: 0, max_value: 25 } },

	_move_x1: { type: "int", editor_info: { type: "x", value: "x + if(facing < 0, 9, 0)" } },
	_move_x2: { type: "int", editor_info: { type: "x", value: "x + img_w - if(facing > 0, 9, 0)" } },
	_move_y1: { type: "int", editor_info: { type: "y", value: "y + img_h - 34" } },
	_move_y2: { type: "int", editor_info: { type: "y", value: "y + img_h" } },

	left_pulley:		{ type: "obj platform_swaying.pulley", init: "object('platform_swaying.pulley',x,y)" },
	right_pulley:		{ type: "obj platform_swaying.pulley", init: "object('platform_swaying.pulley',x,y)" },
	top_rope:			{ type: "obj rope_angled_controller", init: "object('rope_angled_controller',x,y, {animation: 'dark'})" },
	bottom_rope:		{ type: "obj rope_angled_controller", init: "object('rope_angled_controller',x,y, {animation: 'dark'})" },

},
on_process: "setPos",
on_start_level: "set(activation_border, actBsize)",
on_create: "[
		set(_move_x1, _move_x1 - if(facing < 0, 9, 0)),
		set(_move_x2, _move_x2 - if(facing > 0, 9, 0)),
		set(_move_y1, _move_y1 - 34),
		set(_move_y2, _move_y2),

		[add_object(left_pulley), set(left_pulley.activation_border, actBsize)],
		[add_object(right_pulley), set(right_pulley.activation_border, actBsize)],
		[add_object(top_rope), set(top_rope.activation_border, actBsize)],
		[add_object(bottom_rope), set(bottom_rope.activation_border, actBsize)],

		]",
editor_info: {
	category: "decor, utility",
	help: "A decorative rope meant to look like it's providing locomotion
			to a platform or machine, across some distance.",
},
animation: {
	id: "normal",
	image: "effects/particles.png",
	x: 210,
	y: 166,
	w: 28,
	h: 28,
	frames: 1,
	duration: 1000,
},
}
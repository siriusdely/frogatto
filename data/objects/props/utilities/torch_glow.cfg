{
ignore_collide: true,
id: "torch_glow",
zorder: "@include data/zorder.cfg:near_player_foreground_effects",
on_create: "[set(vars.base_alpha, 60), set(alpha,vars.base_alpha), set(green,69), set(blue,31), 
		set(tmp.cycleOffset, 1d6000), 
		set(tmp.gutter, 0), 
		set(tmp.glowSpeed, 1),
		set(vars.glowSize, 150),
		set(vars.norm_x, x),
		set(vars.norm_y, y),
		fire_event(self,'set_flicker')
		]",
on_process: "if(HIGH_END_SYSTEM, fire_event(self,'set_flicker'))",
on_end_anim: "animation('normal')",
activation_border: 500,
functions: "def distToPlayer(object_type obj, object_type plr) (abs(obj.x - plr.x)+abs(obj.y - plr.y))",
on_set_flicker: "[
				set(lights, circle_light(me, wave((tmp.cycleOffset))/abs(150-(tmp.gutter/20))+vars.glowSize-((tmp.gutter*(150/90))/20))), 
				set(tmp.cycleOffset, tmp.cycleOffset + tmp.glowSpeed),
				if(tmp.gutter >= 20, set(tmp.gutter, tmp.gutter - 1d70 - 20)),
				if(distToPlayer(self, level.player) < 100 and tmp.gutter < (((100 - distToPlayer(self, level.player))*(abs(level.player.velocity_x) + abs(level.player.velocity_y)))/100), set(tmp.gutter, (((100 - distToPlayer(self, level.player))*(abs(level.player.velocity_x) + abs(level.player.velocity_y)))/100))),
				if(cycle%8=3, [set(tmp.glowSpeed, 1d30+((tmp.gutter+6000)/100)), set(tmp.cycleOffset, 1d6000)]),
				if(cycle%3=1,
					[set(x, vars.norm_x + (1d6)-3),
					set(y, vars.norm_y + (1d6)-3)]),
				]",
timer_frequency: 5,
on_timer: "[set(alpha, base_alpha + (wave(cycle*(10 +1d2))*20)/2000) ]",
animation: {
	id: "normal",
	image: "props/glow.png",
	rect: [0,0,63,63],
	frames: 1,
	duration: 100000,
},
}
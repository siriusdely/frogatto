{
id: "arcade_acorn_mixer",
zorder: 5,
hitpoints: 3,
timer_frequency: 10,
properties: {

	#key = sum of ingredients, 1 being ripe acorn, 10 green acorn, and 100 the blue acorn
	#[a, b] = a is the name of the recipe, b is the score awarded
	recipes: "{
		'3' -> ['bottle_acorn_butter_green', 150],
		'12' -> ['bottle_acorn_butter_3', 40],
		'21' -> ['bottle_acorn_butter_4', 50],
		'30' -> ['bottle_acorn_butter_ripe', 240],
		'102' -> ['bottle_acorn_butter_5', 60],
		'111' -> ['bottle_acorn_butter_6', 70],
		'120' -> ['bottle_acorn_butter_7', 80],
		'201' -> ['bottle_acorn_butter_8', 90],
		'210' -> ['bottle_acorn_butter_9', 100],
		'300' -> ['bottle_acorn_butter_10', 360]
		}",
	get_hit_by: "def(collide_with) [
	  	            if(me.tmp.time_last_hit and (abs(me.tmp.time_last_hit - level.cycle) < 50), [],
				[
				set(me.tmp.time_last_hit, level.cycle),
				if(me.hitpoints > 1, add(me.hitpoints, -1), set(level.player.hitpoints, 0))
				])]",
},
vars: {
	queue: [],
},
on_timer: "if(size(queue)>2, [
			fire_event('difficulty_up'),
			spawn(recipes[str(mix)][0], midpoint_x+12, y+96, facing) where mix = queue[0] + queue[1] + queue[2],
			add(level.player.score, recipes[str(mix)][1]) where mix = queue[0] + queue[1] + queue[2],
			set(queue, queue[3:])])",
on_create: "set(queue, [])",
on_collide_object_body: "if(collide_with=level.player, [
					remove_object(collide_with),
					remove_object(collide_with.tmp.tongue_tip),
					remove_object(collide_with.tmp.tongue_shaft),
					spawn('bottle_frogatto', midpoint_x+12, y+96, facing),
					schedule(80, set(level.player.hitpoints, 0))
					],[
					switch(collide_with.basic_type,
						'acorn_green', [remove_object(collide_with), add(queue, [1])],
						'acorn_ripe', [remove_object(collide_with), add(queue, [10])],
						'acorn_blue', [remove_object(collide_with), add(queue, [100])],
						'bomb_nutty_factory', get_hit_by(collide_with),
						#hit by explosion, that has no basic type#
						null, get_hit_by(collide_with)
					)])",
on_difficulty_up: "[
				map(dispensers, 'disp', if(disp.vars.dispensing_time > 80, add(disp.vars.dispensing_time, -8)))
					where dispensers = filter(level.chars, 'thing', thing.type='arcade_acorn_dispenser'),
				map(belts, 'belt', [
						add(belt.speed, if(belt.speed > 0, 2, -2)),
						fire_event(belt, 'renew'),
						fire_event(belt, 'setup'), 
						]
					)
					where belts = filter(level.chars, 'thing', thing.type='conveyor_belt')]",
animation: {
	body_area: [0,0,63,15],
	id: "normal",
	image: "props/factory-machines.png",
	rect: [0,0,63,63],
},
}

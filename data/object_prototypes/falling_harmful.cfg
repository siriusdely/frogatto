{
id: "falling_harmful",
prototype: ["shot"],
properties: {
	team: "string :: 'evil'",
	attack_damage: "int :: if(higher_difficulty, 2, 1)",
	_gravity_value: "int :: 60",
	zone_offset_x2: "decimal :: max(_x_bound, _x2_bound) - _original_mid_x + mid_x",
	zone_offset_x1: "decimal :: min(_x_bound, _x2_bound) - _original_mid_x + mid_x",
	zone_offset_y1: "decimal :: min(_y_bound, _y2_bound) - _original_mid_y + mid_y",
	zone_offset_y2: "decimal :: max(_y_bound, _y2_bound) - _original_mid_y + mid_y",
	
	#-------------------------- vars --------------------------#
	_detached: { type: "bool", default: false },
	_original_mid_x: { type: "decimal", init: "mid_x"},
	_original_mid_y: { type: "decimal", init: "mid_y"},
	
	_x_bound: { type: "int", editor_info: { type: "x", value: "mid_x-(32*2)" } },		#vars.zone_x1
	_x2_bound: { type: "int", editor_info: { type: "x", value: "mid_x+(32*2)" } },		#vars.zone_x2
	_y_bound: { type: "int", editor_info: { type: "y", value: "mid_y" } },				#vars.zone_y1
	_y2_bound: { type: "int", editor_info: { type: "y", value: "mid_y+(32*12)" } },		#vars.zone_y2

},
on_detach: "set(accel_y, _gravity_value)",

on_process: "
	if((not _detached)
			and lib.math.in_range(zone_offset_x1, level.player.mid_x, zone_offset_x2)
			and lib.math.in_range(zone_offset_y1, level.player.mid_y, zone_offset_y2), [
		set(_detached,true),
		fire_event('detach'),
	])",

editor_info: {
	category: "props",
},
}

{
id: "ant_flying",
prototype: ["movable_enemy"],

traction_in_air: 1000,
has_feet: false,
activation_border: 150,

properties: {
	attack_damage: "int :: if(higher_difficulty, 2, 1)",
	is_a_flier: "bool :: true",
	team: "string :: 'evil'",
	handle_special_damage_response: "def(obj hittable|null collide_with) -> commands fire_event('lose_wings')",
	acquirable_item_drop_value: "int :: 10",					
	taxonomy: "string :: 'bug'",
	points_value: "int :: 75",


	
	default_anim: "string :: 'fly'",
	wingless_anim: "string :: 'stand'",
	bounce_roundness: "int :: 10",
	
	altitude_adjustment: "decimal :: 0",

#-------------------------- vars re-initialization for when recovering from being flipped onto its back --------------------------#
	//find and return the first solid area, going up, or if we don't run into anything, return a maximum value
	reinitialize_vars: "[	if(_desired_height = null, set(_desired_height, find_ceiling(mid_x,mid_y,-300).y)),
							if(_x_bound = null, set(_x_bound, mid_x-150)),
							if(_x2_bound = null, set(_x2_bound, mid_x+150)) ]",
	
#-------------------------- vars --------------------------#
	_x_bound: { type: "int", editor_info: { type: "x", value: "mid_x-(7*32)" } },
	_x2_bound: { type: "int", editor_info: { type: "x", value: "mid_x+(7*32)" } },
	_desired_height: { type: "int", editor_info: { type: "y", value: "mid_y" }, dynamic_initialization: true },
},

on_swallowed: "fire_event('lose_wings')",
on_create: "[animation(default_anim), set(activation_border, abs(_x_bound - _x2_bound)), reinitialize_vars]",

#-------------------------- collision handling --------------------------#
on_collide_side: "[if(not (animation in ['hurt']), turn_around),set(velocity_x, -velocity_x/2)]",
on_collide_head: "set(velocity_y, -velocity_y/2)",
on_collide_feet: "set(velocity_y, -velocity_y/2)",

on_bounced_on: "fire_event('lose_wings')",
on_lose_wings: "[set(type, basic_type),animation(wingless_anim), map(range(1+1d3),spawn('broken_wing_shard',me.mid_x,me.mid_y,me.facing)),impact_cloud(mid_x,y,'large'), sound('ant-dewinged'+1d3+'.wav')]",

#-------------------------- animation switching --------------------------#
on_end_anim: "animation('fly')",

on_test_bounds: "[if(not animation in ['turn'],if(facing < 0 and x < _x_bound or
	                facing > 0 and x2 > _x2_bound,
					turn_around))]",
on_process_fly: "[if(solid(level, front + facing*100, y, 1, y2 - y),
	            turn_around),fire_event('test_bounds'),
	            set(velocity_y, wave( min(250,max(-250, destination_height-midpoint_y ) ) ))
	            ] where destination_height = _desired_height + altitude_adjustment",
	         
on_wingflap: "sound_falloff('wingflap'+1d5+'.wav', 220,1.0)",

editor_info: {
	category: "enemies, general",
},
}
